          o **** Constructor Summary ****

            Constructor and Description
            ArrayList()
            Constructs an empty list with an initial capacity of ten.
            ArrayList(Collection<? extends E> c)
            Constructs a list containing the elements of the specified
            collection, in the order they are returned by the collection's
            iterator.
            ArrayList(int initialCapacity)
            Constructs an empty list with the specified initial capacity.
          o **** Method Summary ****

            Modifier and Type Method and Description
                              add(E e)
            boolean           Appends the specified element to the end of this
                              list.
                              add(int index, E element)
            void              Inserts the specified element at the specified
                              position in this list.
                              addAll(Collection<? extends E> c)
                              Appends all of the elements in the specified
            boolean           collection to the end of this list, in the order
                              that they are returned by the specified
                              collection's Iterator.
                              addAll(int index, Collection<? extends E> c)
            boolean           Inserts all of the elements in the specified
                              collection into this list, starting at the
                              specified position.
            void              clear()
                              Removes all of the elements from this list.
                              clone()
            Object            Returns a shallow copy of this ArrayList
                              instance.
                              contains(Object o)
            boolean           Returns true if this list contains the specified
                              element.
                              ensureCapacity(int minCapacity)
                              Increases the capacity of this ArrayList
            void              instance, if necessary, to ensure that it can
                              hold at least the number of elements specified by
                              the minimum capacity argument.
                              get(int index)
            E                 Returns the element at the specified position in
                              this list.
                              indexOf(Object o)
            int               Returns the index of the first occurrence of the
                              specified element in this list, or -1 if this
                              list does not contain the element.
            boolean           isEmpty()
                              Returns true if this list contains no elements.
                              iterator()
            Iterator<E>       Returns an iterator over the elements in this
                              list in proper sequence.
                              lastIndexOf(Object o)
            int               Returns the index of the last occurrence of the
                              specified element in this list, or -1 if this
                              list does not contain the element.
                              listIterator()
            ListIterator<E>   Returns a list iterator over the elements in this
                              list (in proper sequence).
                              listIterator(int index)
            ListIterator<E>   Returns a list iterator over the elements in this
                              list (in proper sequence), starting at the
                              specified position in the list.
                              remove(int index)
            E                 Removes the element at the specified position in
                              this list.
                              remove(Object o)
            boolean           Removes the first occurrence of the specified
                              element from this list, if it is present.
                              removeAll(Collection<?> c)
            boolean           Removes from this list all of its elements that
                              are contained in the specified collection.
                              removeRange(int fromIndex, int toIndex)
            protected void    Removes from this list all of the elements whose
                              index is between fromIndex, inclusive, and
                              toIndex, exclusive.
                              retainAll(Collection<?> c)
            boolean           Retains only the elements in this list that are
                              contained in the specified collection.
                              set(int index, E element)
            E                 Replaces the element at the specified position in
                              this list with the specified element.
            int               size()
                              Returns the number of elements in this list.
                              subList(int fromIndex, int toIndex)
            List<E>           Returns a view of the portion of this list
                              between the specified fromIndex, inclusive, and
                              toIndex, exclusive.
                              toArray()
            Object[]          Returns an array containing all of the elements
                              in this list in proper sequence (from first to
                              last element).
                              toArray(T[] a)
                              Returns an array containing all of the elements
            <T> T[]          in this list in proper sequence (from first to
                              last element); the runtime type of the returned
                              array is that of the specified array.
                              trimToSize()
            void              Trims the capacity of this ArrayList instance to
                              be the list's current size.
