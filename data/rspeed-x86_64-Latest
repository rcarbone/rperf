Linux nuc 3.2.0-4-amd64 #1 SMP Debian 3.2.89-2 x86_64

Evaluate average wall-time elapsed repeating 10 times the same test with 100000 items per test

Tests to run: 6 over 47 implementations
  1: grow    (Add items to an empty container)
  2: hit     (Find existing items            )
  3: miss    (Search non existing items      )
  4: delete  (Delete existing items          )
  5: replace (Replace existing items         )
  6: kbench  (Delete if found, add otherwise )

To run #10 times each with #100000 items
[1] Running grow ...... Done! over #47 implementations - Elapsed  12.5  s
[2] Running hit ....... Done! over #47 implementations - Elapsed  19.7  s
[3] Running miss ...... Done! over #47 implementations - Elapsed  21.6  s
[4] Running delete .... Done! over #47 implementations - Elapsed  16.7  s
[5] Running replace ... Done! over #47 implementations - Elapsed  45.0  s
[6] Running kbench .... Done! over #47 implementations - Elapsed  20.2  s

                              H a l l   o f   F a m e

Results of test [grow] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: tommyds/fixed             4.923  /    4.885  /    5.120    -      49.2 ms
   2: ccan/htable               6.827  /    6.619  /    8.141    -      68.3 ms
   3: glib/ghash                8.972  /    8.937  /    9.061    -      89.7 ms
   4: tommyds/dynamic           9.294  /    9.270  /    9.327    -      92.9 ms
   5: gcc/hashtab               9.991  /    7.941  /   11.168    -      99.9 ms
   6: tommyds/linear           10.408  /   10.256  /   10.869    -     104.0 ms
   7: libevent/ht              11.470  /   11.130  /   12.169    -     114.7 ms
   8: hashit/overflow          11.731  /   11.058  /   12.346    -     117.3 ms
   9: rdestl::hash_map         13.030  /   11.503  /   13.911    -     130.3 ms
  10: hashit/open              13.531  /   12.538  /   14.495    -     135.3 ms
  11: ulib/chain-hash          13.649  /   13.279  /   15.348    -     136.5 ms
  12: google::densehash        14.561  /   14.441  /   14.834    -     145.6 ms
  13: google/c-dense           14.982  /   14.609  /   16.608    -     149.8 ms
  14: amtl::hashmap            15.330  /   13.336  /   16.601    -     153.3 ms
  15: emilib::HashMap          20.298  /   16.956  /   23.873    -     203.0 ms
  16: libghthash/hashtable     20.793  /   20.733  /   20.889    -     207.9 ms
  17: PeterMoore/st            22.573  /   22.419  /   22.956    -     225.7 ms
  18: klib/khash               22.853  /   20.104  /   25.960    -     228.5 ms
  19: judy/JSL                 23.111  /   23.005  /   23.711    -     231.1 ms
  20: hashit/chain             23.124  /   22.892  /   24.078    -     231.2 ms
  21: ulib/open-hash           23.247  /   23.146  /   23.480    -     232.4 ms
  22: std::unordered_map       24.203  /   24.028  /   25.170    -     242.0 ms
  23: uthash/hashtable         24.365  /   22.152  /   29.068    -     243.6 ms
  24: ulib::align-hash++       24.587  /   24.419  /   25.314    -     245.8 ms
  25: python/hashtable         25.173  /   24.446  /   25.988    -     251.7 ms
  26: Qt::QHash                26.048  /   19.747  /   37.066    -     260.5 ms
  27: mct::linked_hash_map     26.246  /   24.059  /   26.921    -     262.4 ms
  28: rigtorp::hashmap         26.667  /   25.629  /   30.124    -     266.6 ms
  29: libCDS/HashMap           26.814  /   23.611  /   33.130    -     268.1 ms
  30: apr/hashtable            26.833  /   21.960  /   29.724    -     268.3 ms
  31: klib::khash++            26.849  /   26.692  /   27.117    -     268.5 ms
  32: calg/hashtable           28.232  /   26.120  /   38.110    -     282.3 ms
  33: libdynamic/map           28.807  /   28.702  /   29.124    -     288.0 ms
  34: mct::closed_hash_map     29.382  /   28.639  /   30.301    -     293.8 ms
  35: clark/hashtable          30.280  /   27.609  /   33.084    -     302.8 ms
  36: apr-no-pool/hashtable    30.644  /   26.338  /   39.897    -     306.4 ms
  37: stb/sdict                35.250  /   32.767  /   47.523    -     352.5 ms
  38: ulib::chain-hash++       35.367  /   29.861  /   40.045    -     353.7 ms
  39: eastl::hashmap           37.965  /   27.879  /   47.895    -     379.6 ms
  40: tbb::unordered_map       38.630  /   38.204  /   40.376    -     386.3 ms
  41: google/c-sparse          43.564  /   40.803  /   47.080    -     435.6 ms
  42: boost::unordered_map     44.743  /   32.377  /   55.323    -     447.4 ms
  43: oddou::hashmap           52.682  /   51.490  /   59.667    -     526.8 ms
  44: ulib/align-hash          54.207  /   35.317  /   77.037    -     542.1 ms
  45: google::sparsehash       58.788  /   52.038  /   72.700    -     587.9 ms
  46: ulib::open-hash++        63.831  /   49.007  /   72.760    -     638.3 ms
  47: libcfu/hashtable         66.484  /   62.752  /   72.992    -     664.8 ms

Results of test [hit] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              11.768  /   11.624  /   12.330    -     117.7 ms
   2: tommyds/fixed            13.638  /   13.426  /   13.821    -     136.3 ms
   3: rdestl::hash_map         15.762  /   15.452  /   15.862    -     157.6 ms
   4: glib/ghash               16.891  /   14.284  /   21.883    -     168.9 ms
   5: tommyds/dynamic          18.136  /   17.108  /   20.029    -     181.3 ms
   6: google::densehash        19.137  /   19.013  /   19.478    -     191.3 ms
   7: ulib/chain-hash          19.138  /   19.045  /   19.490    -     191.4 ms
   8: libevent/ht              19.761  /   18.407  /   22.415    -     197.6 ms
   9: tommyds/linear           20.286  /   19.644  /   21.441    -     202.8 ms
  10: amtl::hashmap            20.294  /   20.128  /   20.396    -     202.9 ms
  11: emilib::HashMap          20.417  /   20.136  /   21.157    -     204.1 ms
  12: gcc/hashtab              22.357  /   17.827  /   27.262    -     223.6 ms
  13: libghthash/hashtable     25.544  /   25.433  /   25.693    -     255.4 ms
  14: apr/hashtable            26.831  /   26.000  /   27.500    -     268.3 ms
  15: google/c-dense           27.522  /   24.991  /   32.529    -     275.2 ms
  16: libCDS/HashMap           29.325  /   29.141  /   29.536    -     293.2 ms
  17: python/hashtable         29.368  /   29.139  /   29.655    -     293.7 ms
  18: hashit/open              30.351  /   29.272  /   32.295    -     303.5 ms
  19: ulib/open-hash           32.519  /   31.455  /   34.747    -     325.2 ms
  20: mct::closed_hash_map     32.860  /   31.560  /   37.361    -     328.6 ms
  21: PeterMoore/st            33.107  /   31.302  /   42.889    -     331.1 ms
  22: eastl::hashmap           33.208  /   31.465  /   36.257    -     332.1 ms
  23: apr-no-pool/hashtable    34.442  /   34.292  /   34.630    -     344.4 ms
  24: calg/hashtable           35.817  /   29.104  /   61.691    -     358.2 ms
  25: klib/khash               36.250  /   34.097  /   42.984    -     362.5 ms
  26: mct::linked_hash_map     36.550  /   33.672  /   43.123    -     365.5 ms
  27: Qt::QHash                36.743  /   32.466  /   41.301    -     367.4 ms
  28: judy/JSL                 37.476  /   31.108  /   45.714    -     374.8 ms
  29: hashit/overflow          38.418  /   29.539  /   53.616    -     384.2 ms
  30: rigtorp::hashmap         38.770  /   34.148  /   47.589    -     387.7 ms
  31: clark/hashtable          40.742  /   40.505  /   41.262    -     407.4 ms
  32: uthash/hashtable         41.009  /   35.194  /   47.756    -     410.1 ms
  33: std::unordered_map       41.721  /   33.918  /   56.060    -     417.2 ms
  34: ulib::align-hash++       42.542  /   40.263  /   45.837    -     425.4 ms
  35: klib::khash++            42.833  /   40.655  /   48.643    -     428.3 ms
  36: libdynamic/map           43.843  /   37.783  /   59.904    -     438.4 ms
  37: hashit/chain             45.405  /   39.887  /   63.456    -     454.0 ms
  38: ulib::open-hash++        46.064  /   45.706  /   47.042    -     460.6 ms
  39: stb/sdict                51.573  /   44.653  /   72.144    -     515.7 ms
  40: boost::unordered_map     51.841  /   45.805  /   69.802    -     518.4 ms
  41: google/c-sparse          52.382  /   49.598  /   57.291    -     523.8 ms
  42: ulib/align-hash          69.840  /   56.394  /   96.687    -     698.4 ms
  43: tbb::unordered_map       71.849  /   62.826  /   97.985    -     718.5 ms
  44: oddou::hashmap           72.606  /   62.703  /   85.883    -     726.1 ms
  45: libcfu/hashtable         84.557  /   83.358  /   84.950    -     845.5 ms
  46: google::sparsehash       90.417  /   73.464  /  131.759    -     904.2 ms
  47: ulib::chain-hash++      271.063  /  188.069  /  332.203    -       2.7  s

Results of test [miss] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: rdestl::hash_map         15.008  /   14.943  /   15.205    -     150.0 ms
   2: ccan/htable              15.934  /   13.613  /   18.932    -     159.3 ms
   3: tommyds/fixed            16.258  /   16.158  /   16.537    -     162.6 ms
   4: tommyds/dynamic          17.376  /   17.282  /   17.553    -     173.7 ms
   5: gcc/hashtab              18.058  /   17.989  /   18.300    -     180.6 ms
   6: libevent/ht              18.189  /   18.090  /   18.531    -     181.9 ms
   7: ulib::chain-hash++       19.869  /   19.374  /   20.151    -     198.7 ms
   8: tommyds/linear           20.403  /   20.328  /   20.545    -     204.0 ms
   9: hashit/overflow          23.082  /   22.818  /   23.578    -     230.8 ms
  10: amtl::hashmap            24.362  /   19.488  /   29.826    -     243.6 ms
  11: libghthash/hashtable     25.136  /   24.027  /   28.456    -     251.3 ms
  12: glib/ghash               25.281  /   23.971  /   27.125    -     252.8 ms
  13: google::densehash        27.762  /   24.063  /   32.293    -     277.6 ms
  14: Qt::QHash                28.660  /   28.493  /   28.796    -     286.6 ms
  15: google/c-dense           28.750  /   24.841  /   37.695    -     287.5 ms
  16: judy/JSL                 28.990  /   28.928  /   29.132    -     289.9 ms
  17: ulib/open-hash           31.053  /   30.701  /   31.340    -     310.5 ms
  18: emilib::HashMap          31.959  /   30.203  /   34.466    -     319.6 ms
  19: ulib/chain-hash          32.970  /   29.925  /   35.812    -     329.7 ms
  20: clark/hashtable          35.322  /   34.896  /   37.152    -     353.2 ms
  21: python/hashtable         35.666  /   30.227  /   42.790    -     356.6 ms
  22: hashit/chain             38.265  /   37.905  /   38.813    -     382.6 ms
  23: eastl::hashmap           38.537  /   30.241  /   56.178    -     385.4 ms
  24: ulib::align-hash++       39.382  /   39.119  /   39.679    -     393.8 ms
  25: apr/hashtable            41.177  /   35.460  /   46.723    -     411.8 ms
  26: hashit/open              41.620  /   38.269  /   52.795    -     416.2 ms
  27: uthash/hashtable         41.987  /   37.766  /   52.901    -     419.9 ms
  28: boost::unordered_map     42.699  /   42.448  /   42.983    -     427.0 ms
  29: libCDS/HashMap           43.369  /   33.724  /   49.523    -     433.7 ms
  30: mct::linked_hash_map     46.240  /   36.773  /   55.776    -     462.4 ms
  31: calg/hashtable           46.712  /   43.835  /   54.308    -     467.1 ms
  32: libdynamic/map           47.667  /   42.898  /   61.486    -     476.7 ms
  33: mct::closed_hash_map     47.694  /   40.513  /   63.307    -     476.9 ms
  34: std::unordered_map       51.085  /   37.827  /   59.808    -     510.8 ms
  35: apr-no-pool/hashtable    54.458  /   46.468  /   60.087    -     544.6 ms
  36: klib::khash++            58.436  /   49.190  /   79.942    -     584.4 ms
  37: ulib::open-hash++        60.618  /   45.073  /   69.175    -     606.2 ms
  38: stb/sdict                63.618  /   49.582  /   94.778    -     636.2 ms
  39: klib/khash               65.211  /   51.951  /   99.265    -     652.1 ms
  40: tbb::unordered_map       66.734  /   65.940  /   70.620    -     667.3 ms
  41: oddou::hashmap           67.319  /   62.886  /   73.376    -     673.2 ms
  42: PeterMoore/st            67.698  /   45.811  /   80.880    -     677.0 ms
  43: rigtorp::hashmap         70.170  /   53.613  /   85.501    -     701.7 ms
  44: google/c-sparse          90.604  /   78.614  /  102.467    -     906.0 ms
  45: google::sparsehash      106.599  /   71.369  /  131.234    -       1.0  s
  46: libcfu/hashtable        114.818  /   89.052  /  152.052    -       1.1  s
  47: ulib/align-hash         192.676  /  151.317  /  288.673    -       1.9  s

Results of test [delete] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: tommyds/fixed            12.284  /   12.222  /   12.500    -     122.8 ms
   2: ccan/htable              12.988  /   12.923  /   13.076    -     129.9 ms
   3: gcc/hashtab              13.420  /   13.386  /   13.532    -     134.2 ms
   4: rdestl::hash_map         14.889  /   14.797  /   14.944    -     148.9 ms
   5: ulib/chain-hash          14.981  /   14.752  /   15.210    -     149.8 ms
   6: glib/ghash               15.457  /   15.412  /   15.521    -     154.5 ms
   7: apr/hashtable            16.192  /   16.047  /   16.342    -     161.9 ms
   8: tommyds/dynamic          16.963  /   16.905  /   17.101    -     169.6 ms
   9: apr-no-pool/hashtable    17.077  /   17.024  /   17.247    -     170.7 ms
  10: libghthash/hashtable     17.781  /   17.690  /   17.984    -     177.8 ms
  11: amtl::hashmap            18.166  /   17.968  /   18.681    -     181.6 ms
  12: emilib::HashMap          18.762  /   18.687  /   18.987    -     187.6 ms
  13: tommyds/linear           18.854  /   18.776  /   19.105    -     188.5 ms
  14: libevent/ht              19.066  /   18.966  /   19.115    -     190.6 ms
  15: hashit/overflow          19.600  /   19.450  /   20.271    -     196.0 ms
  16: google::densehash        19.689  /   19.461  /   19.969    -     196.9 ms
  17: hashit/chain             24.612  /   24.191  /   27.059    -     246.1 ms
  18: python/hashtable         25.299  /   25.005  /   25.664    -     253.0 ms
  19: eastl::hashmap           25.386  /   25.022  /   26.236    -     253.8 ms
  20: Qt::QHash                25.431  /   25.226  /   26.237    -     254.3 ms
  21: calg/hashtable           25.709  /   25.639  /   25.900    -     257.1 ms
  22: klib/khash               26.332  /   25.939  /   26.964    -     263.3 ms
  23: PeterMoore/st            26.430  /   26.320  /   26.661    -     264.3 ms
  24: libCDS/HashMap           27.140  /   24.564  /   33.429    -     271.4 ms
  25: ulib/open-hash           28.424  /   28.170  /   28.921    -     284.2 ms
  26: google/c-dense           30.328  /   30.213  /   30.911    -     303.3 ms
  27: mct::linked_hash_map     30.837  /   30.713  /   31.427    -     308.3 ms
  28: clark/hashtable          31.571  /   31.439  /   31.693    -     315.7 ms
  29: mct::closed_hash_map     32.750  /   31.309  /   37.867    -     327.5 ms
  30: std::unordered_map       33.021  /   32.848  /   33.188    -     330.2 ms
  31: uthash/hashtable         33.736  /   33.401  /   34.239    -     337.3 ms
  32: klib::khash++            33.932  /   33.748  /   34.166    -     339.3 ms
  33: ulib::align-hash++       35.471  /   35.322  /   35.714    -     354.7 ms
  34: ulib::open-hash++        38.398  /   38.269  /   38.656    -     384.0 ms
  35: rigtorp::hashmap         39.192  /   39.123  /   39.374    -     391.9 ms
  36: libdynamic/map           40.487  /   40.380  /   40.740    -     404.8 ms
  37: boost::unordered_map     42.353  /   41.709  /   43.037    -     423.5 ms
  38: judy/JSL                 43.435  /   43.055  /   43.668    -     434.3 ms
  39: ulib/align-hash          43.712  /   43.483  /   44.074    -     437.1 ms
  40: hashit/open              48.598  /   48.379  /   48.791    -     486.0 ms
  41: libcfu/hashtable         62.440  /   61.758  /   64.384    -     624.4 ms
  42: google/c-sparse          64.454  /   64.225  /   65.233    -     644.5 ms
  43: google::sparsehash       71.070  /   70.588  /   71.903    -     710.7 ms
  44: oddou::hashmap           82.762  /   82.662  /   82.910    -     827.6 ms
  45: tbb::unordered_map       86.120  /   85.775  /   86.680    -     861.2 ms
  46: stb/sdict                93.824  /   93.557  /   94.260    -     938.2 ms
  47: ulib::chain-hash++      157.754  /  154.609  /  164.487    -       1.5  s

Results of test [replace] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              25.411  /   25.029  /   26.984    -     254.1 ms
   2: rdestl::hash_map         26.035  /   25.936  /   26.275    -     260.3 ms
   3: tommyds/dynamic          28.765  /   28.429  /   29.099    -     287.6 ms
   4: tommyds/fixed            29.133  /   28.557  /   32.271    -     291.3 ms
   5: libevent/ht              33.215  /   32.588  /   34.343    -     332.1 ms
   6: tommyds/linear           34.183  /   34.094  /   34.344    -     341.8 ms
   7: apr/hashtable            36.107  /   35.443  /   36.409    -     361.0 ms
   8: glib/ghash               37.489  /   37.376  /   37.634    -     374.9 ms
   9: amtl::hashmap            37.703  /   36.819  /   39.619    -     377.0 ms
  10: emilib::HashMap          38.168  /   36.593  /   40.104    -     381.7 ms
  11: python/hashtable         39.786  /   39.521  /   40.258    -     397.8 ms
  12: gcc/hashtab              40.008  /   39.121  /   41.494    -     400.1 ms
  13: Qt::QHash                40.153  /   38.150  /   43.494    -     401.5 ms
  14: libCDS/HashMap           41.147  /   40.817  /   41.616    -     411.5 ms
  15: libghthash/hashtable     44.037  /   43.834  /   44.180    -     440.4 ms
  16: ulib/chain-hash          45.261  /   45.064  /   45.705    -     452.6 ms
  17: apr-no-pool/hashtable    46.768  /   46.591  /   46.977    -     467.7 ms
  18: calg/hashtable           47.014  /   45.730  /   49.554    -     470.1 ms
  19: eastl::hashmap           47.836  /   45.523  /   54.581    -     478.4 ms
  20: google::densehash        49.405  /   48.486  /   51.279    -     494.0 ms
  21: google/c-dense           52.517  /   51.424  /   54.460    -     525.2 ms
  22: ulib/open-hash           54.309  /   51.689  /   62.304    -     543.1 ms
  23: klib/khash               56.537  /   55.470  /   59.642    -     565.4 ms
  24: std::unordered_map       62.264  /   60.590  /   64.017    -     622.6 ms
  25: PeterMoore/st            63.206  /   62.650  /   63.787    -     632.1 ms
  26: mct::closed_hash_map     64.637  /   61.641  /   65.921    -     646.4 ms
  27: ulib::open-hash++        66.387  /   63.882  /   71.303    -     663.8 ms
  28: clark/hashtable          67.049  /   66.771  /   67.545    -     670.5 ms
  29: hashit/chain             68.239  /   66.505  /   68.524    -     682.4 ms
  30: mct::linked_hash_map     68.809  /   66.672  /   73.073    -     688.1 ms
  31: ulib::align-hash++       68.939  /   66.881  /   74.623    -     689.4 ms
  32: klib::khash++            71.464  /   70.934  /   73.107    -     714.6 ms
  33: uthash/hashtable         77.501  /   76.964  /   79.290    -     775.0 ms
  34: judy/JSL                 83.165  /   82.343  /   86.066    -     831.6 ms
  35: boost::unordered_map     83.782  /   74.032  /   92.465    -     837.8 ms
  36: rigtorp::hashmap         88.754  /   86.543  /   92.088    -     887.5 ms
  37: ulib/align-hash          90.459  /   88.839  /   95.640    -     904.6 ms
  38: libdynamic/map           90.602  /   88.629  /   94.689    -     906.0 ms
  39: oddou::hashmap          102.715  /  101.935  /  105.173    -       1.0  s
  40: google/c-sparse         107.185  /  104.579  /  111.267    -       1.0  s
  41: libcfu/hashtable        112.434  /  110.621  /  116.009    -       1.1  s
  42: tbb::unordered_map      136.229  /  135.400  /  138.205    -       1.3  s
  43: google::sparsehash      155.221  /  151.563  /  164.054    -       1.5  s
  44: stb/sdict               175.912  /  172.981  /  180.839    -       1.7  s
  45: hashit/open             222.161  /  218.170  /  227.009    -       2.2  s
  46: ulib::chain-hash++      611.255  /  606.922  /  616.343    -       6.1  s
  47: hashit/overflow         831.122  /  821.433  /  845.717    -       8.3  s

Results of test [kbench] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              15.171  /   15.072  /   15.312    -     151.7 ms
   2: ulib/chain-hash          16.298  /   16.001  /   16.860    -     163.0 ms
   3: tommyds/fixed            16.469  /   16.033  /   16.641    -     164.7 ms
   4: rdestl::hash_map         16.669  /   16.581  /   16.793    -     166.7 ms
   5: gcc/hashtab              17.307  /   17.200  /   17.474    -     173.0 ms
   6: apr/hashtable            18.463  /   18.007  /   18.651    -     184.6 ms
   7: glib/ghash               19.054  /   18.344  /   20.596    -     190.5 ms
   8: apr-no-pool/hashtable    19.345  /   19.148  /   19.780    -     193.4 ms
   9: libghthash/hashtable     20.309  /   19.872  /   20.816    -     203.1 ms
  10: libevent/ht              21.460  /   21.243  /   21.640    -     214.6 ms
  11: emilib::HashMap          21.490  /   21.153  /   22.342    -     214.9 ms
  12: tommyds/dynamic          21.576  /   21.425  /   21.795    -     215.7 ms
  13: Qt::QHash                22.000  /   21.586  /   24.408    -     220.0 ms
  14: google::densehash        22.090  /   21.628  /   23.831    -     220.9 ms
  15: amtl::hashmap            24.630  /   24.436  /   24.829    -     246.3 ms
  16: tommyds/linear           25.262  /   24.136  /   26.026    -     252.6 ms
  17: libCDS/HashMap           27.748  /   27.222  /   28.813    -     277.5 ms
  18: hashit/overflow          28.582  /   28.130  /   30.240    -     285.8 ms
  19: klib/khash               28.731  /   28.559  /   29.342    -     287.3 ms
  20: python/hashtable         28.947  /   28.615  /   29.296    -     289.4 ms
  21: hashit/chain             28.986  /   28.628  /   30.198    -     289.8 ms
  22: eastl::hashmap           29.130  /   27.871  /   29.811    -     291.3 ms
  23: PeterMoore/st            29.314  /   28.480  /   30.372    -     293.2 ms
  24: calg/hashtable           29.852  /   29.601  /   30.129    -     298.5 ms
  25: google/c-dense           32.427  /   31.751  /   35.757    -     324.3 ms
  26: ulib/open-hash           34.265  /   32.472  /   42.890    -     342.6 ms
  27: std::unordered_map       35.154  /   34.438  /   38.205    -     351.5 ms
  28: mct::linked_hash_map     38.658  /   38.518  /   38.871    -     386.6 ms
  29: mct::closed_hash_map     39.127  /   38.350  /   40.277    -     391.3 ms
  30: clark/hashtable          39.283  /   37.837  /   40.862    -     392.8 ms
  31: klib::khash++            40.346  /   39.820  /   41.038    -     403.4 ms
  32: uthash/hashtable         41.077  /   40.175  /   42.745    -     410.8 ms
  33: rigtorp::hashmap         41.936  /   41.507  /   43.480    -     419.3 ms
  34: libdynamic/map           43.512  /   42.832  /   45.856    -     435.1 ms
  35: judy/JSL                 46.728  /   46.087  /   47.172    -     467.3 ms
  36: boost::unordered_map     47.865  /   47.168  /   49.420    -     478.6 ms
  37: ulib::open-hash++        50.397  /   48.453  /   53.160    -     504.0 ms
  38: ulib/align-hash          50.585  /   49.354  /   54.131    -     505.8 ms
  39: ulib::align-hash++       51.308  /   50.446  /   53.745    -     513.1 ms
  40: hashit/open              62.152  /   60.800  /   64.116    -     621.5 ms
  41: google/c-sparse          71.580  /   68.466  /   91.395    -     715.8 ms
  42: libcfu/hashtable         72.735  /   71.784  /   73.346    -     727.3 ms
  43: google::sparsehash       84.934  /   83.945  /   89.678    -     849.3 ms
  44: oddou::hashmap           91.863  /   90.078  /   99.903    -     918.6 ms
  45: tbb::unordered_map      102.751  /   98.402  /  121.256    -       1.0  s
  46: stb/sdict               109.088  /   98.989  /  132.802    -       1.0  s
  47: ulib::chain-hash++      247.929  /  245.562  /  254.036    -       2.4  s
