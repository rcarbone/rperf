Linux nuc 3.2.0-4-amd64 #1 SMP Debian 3.2.89-2 x86_64

Evaluate average wall-time elapsed repeating 10 times the same test with 100000 items per test

Tests to run: 6 over 46 implementations
  1: grow    (Add items to an empty container)
  2: hit     (Find existing items            )
  3: miss    (Search non existing items      )
  4: delete  (Delete existing items          )
  5: replace (Replace existing items         )
  6: kbench  (Delete if found, add otherwise )

To run #10 times each with #100000 items
[1] Running grow ...... Done! over #46 implementations - Elapsed  11.6  s
[2] Running hit ....... Done! over #46 implementations - Elapsed  17.9  s
[3] Running miss ...... Done! over #46 implementations - Elapsed  17.7  s
[4] Running delete .... Done! over #46 implementations - Elapsed  18.2  s
[5] Running replace ... Done! over #46 implementations - Elapsed  46.2  s
[6] Running kbench .... Done! over #46 implementations - Elapsed  20.4  s

                              H a l l   o f   F a m e

Results of test [grow] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: tommyds/fixed             5.653  /    5.445  /    5.787    -      56.5 ms
   2: ccan/htable               6.558  /    6.510  /    6.611    -      65.6 ms
   3: gcc/hashtab               8.575  /    8.392  /    8.658    -      85.7 ms
   4: glib/ghash                9.052  /    8.935  /    9.427    -      90.5 ms
   5: tommyds/dynamic          11.163  /   10.957  /   11.335    -     111.6 ms
   6: tommyds/linear           11.522  /   10.851  /   11.763    -     115.2 ms
   7: libevent/ht              12.669  /   12.487  /   12.821    -     126.7 ms
   8: hashit/overflow          12.997  /   12.881  /   13.066    -     130.0 ms
   9: rdestl::hash_map         13.009  /   12.966  /   13.062    -     130.1 ms
  10: hashit/open              14.732  /   14.632  /   14.921    -     147.3 ms
  11: ulib/chain-hash          14.750  /   14.626  /   14.875    -     147.5 ms
  12: amtl::hashmap            14.791  /   12.863  /   15.255    -     147.9 ms
  13: google::densehash        15.271  /   15.164  /   15.411    -     152.7 ms
  14: google/c-dense           16.199  /   16.042  /   16.529    -     162.0 ms
  15: libghthash/hashtable     19.725  /   19.580  /   19.910    -     197.2 ms
  16: emilib::HashMap          19.874  /   18.006  /   23.037    -     198.7 ms
  17: apr/hashtable            21.556  /   21.490  /   21.664    -     215.5 ms
  18: klib/khash               21.770  /   21.557  /   21.996    -     217.7 ms
  19: judy/JSL                 23.052  /   22.991  /   23.414    -     230.5 ms
  20: Qt::QHash                23.254  /   23.155  /   23.436    -     232.5 ms
  21: ulib::align-hash++       24.361  /   24.277  /   24.801    -     243.6 ms
  22: libCDS/HashMap           24.614  /   24.379  /   24.995    -     246.1 ms
  23: ulib/open-hash           24.789  /   24.619  /   25.170    -     247.9 ms
  24: PeterMoore/st            24.980  /   24.515  /   25.150    -     249.8 ms
  25: eastl::hashmap           25.138  /   24.823  /   25.692    -     251.4 ms
  26: python/hashtable         25.397  /   24.593  /   25.614    -     253.9 ms
  27: std::unordered_map       25.421  /   25.244  /   25.737    -     254.2 ms
  28: calg/hashtable           25.840  /   25.628  /   26.031    -     258.4 ms
  29: hashit/chain             26.763  /   26.459  /   26.962    -     267.6 ms
  30: uthash/hashtable         27.341  /   26.963  /   27.545    -     273.4 ms
  31: rigtorp::hashmap         28.136  /   28.006  /   28.801    -     281.3 ms
  32: mct::linked_hash_map     28.879  /   28.194  /   29.653    -     288.8 ms
  33: apr-no-pool/hashtable    29.167  /   28.975  /   29.867    -     291.6 ms
  34: clark/hashtable          29.793  /   29.650  /   29.877    -     297.9 ms
  35: ulib::open-hash++        30.173  /   30.138  /   30.210    -     301.7 ms
  36: mct::closed_hash_map     30.691  /   30.490  /   30.848    -     306.9 ms
  37: ulib::chain-hash++       31.544  /   31.131  /   31.856    -     315.4 ms
  38: libdynamic/map           32.276  /   32.107  /   32.733    -     322.7 ms
  39: stb/sdict                32.934  /   32.797  /   33.165    -     329.3 ms
  40: boost::unordered_map     33.609  /   33.125  /   34.821    -     336.1 ms
  41: google/c-sparse          38.750  /   38.684  /   38.978    -     387.5 ms
  42: tbb::unordered_map       40.419  /   39.255  /   42.586    -     404.2 ms
  43: ulib/align-hash          50.584  /   47.774  /   55.618    -     505.8 ms
  44: oddou::hashmap           52.386  /   52.320  /   52.506    -     523.8 ms
  45: google::sparsehash       54.060  /   53.540  /   55.783    -     540.6 ms
  46: libcfu/hashtable         70.638  /   69.118  /   71.312    -     706.4 ms

Results of test [hit] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              11.826  /   11.695  /   12.295    -     118.2 ms
   2: glib/ghash               14.456  /   14.383  /   14.543    -     144.5 ms
   3: tommyds/fixed            14.587  /   14.259  /   14.760    -     145.8 ms
   4: gcc/hashtab              18.318  /   17.804  /   18.727    -     183.2 ms
   5: tommyds/dynamic          18.492  /   18.349  /   18.628    -     184.9 ms
   6: libevent/ht              18.562  /   18.231  /   19.101    -     185.6 ms
   7: ulib/chain-hash          19.573  /   19.357  /   19.913    -     195.7 ms
   8: rdestl::hash_map         19.972  /   17.553  /   26.522    -     199.7 ms
   9: emilib::HashMap          20.215  /   20.159  /   20.274    -     202.1 ms
  10: google::densehash        20.271  /   20.145  /   20.522    -     202.7 ms
  11: tommyds/linear           20.465  /   20.017  /   20.919    -     204.6 ms
  12: amtl::hashmap            23.768  /   22.034  /   24.820    -     237.7 ms
  13: google/c-dense           25.746  /   24.891  /   28.929    -     257.4 ms
  14: hashit/overflow          26.715  /   26.533  /   27.293    -     267.1 ms
  15: libghthash/hashtable     27.117  /   26.822  /   27.817    -     271.2 ms
  16: apr/hashtable            27.190  /   26.974  /   28.050    -     271.9 ms
  17: Qt::QHash                28.932  /   28.765  /   29.066    -     289.3 ms
  18: judy/JSL                 29.543  /   29.456  /   29.703    -     295.4 ms
  19: libCDS/HashMap           30.789  /   30.488  /   31.139    -     307.9 ms
  20: calg/hashtable           31.233  /   30.859  /   31.512    -     312.3 ms
  21: PeterMoore/st            31.528  /   30.933  /   32.236    -     315.3 ms
  22: hashit/open              31.585  /   31.501  /   31.679    -     315.8 ms
  23: python/hashtable         32.493  /   30.718  /   39.250    -     324.9 ms
  24: ulib/open-hash           33.277  /   32.938  /   34.263    -     332.7 ms
  25: eastl::hashmap           34.419  /   30.640  /   41.944    -     344.2 ms
  26: klib/khash               35.592  /   35.101  /   36.651    -     355.9 ms
  27: mct::linked_hash_map     36.015  /   35.369  /   37.325    -     360.1 ms
  28: apr-no-pool/hashtable    36.412  /   35.484  /   41.783    -     364.1 ms
  29: std::unordered_map       36.617  /   35.896  /   38.961    -     366.1 ms
  30: mct::closed_hash_map     37.549  /   36.445  /   41.365    -     375.5 ms
  31: rigtorp::hashmap         38.235  /   38.030  /   39.420    -     382.3 ms
  32: ulib::align-hash++       40.622  /   40.478  /   41.156    -     406.2 ms
  33: clark/hashtable          40.988  /   40.572  /   42.098    -     409.9 ms
  34: uthash/hashtable         41.283  /   39.799  /   42.234    -     412.8 ms
  35: libdynamic/map           41.382  /   41.210  /   42.005    -     413.8 ms
  36: hashit/chain             42.517  /   41.652  /   44.140    -     425.2 ms
  37: ulib::open-hash++        45.890  /   45.613  /   47.194    -     458.9 ms
  38: stb/sdict                46.175  /   45.918  /   46.760    -     461.7 ms
  39: google/c-sparse          47.941  /   46.640  /   52.795    -     479.4 ms
  40: boost::unordered_map     48.063  /   47.130  /   51.460    -     480.6 ms
  41: oddou::hashmap           60.563  /   60.376  /   60.989    -     605.6 ms
  42: tbb::unordered_map       63.076  /   61.517  /   71.256    -     630.8 ms
  43: google::sparsehash       75.917  /   70.907  /   83.330    -     759.2 ms
  44: ulib/align-hash          75.980  /   74.311  /   80.955    -     759.8 ms
  45: libcfu/hashtable         87.818  /   83.161  /   95.917    -     878.2 ms
  46: ulib::chain-hash++      205.848  /  196.112  /  238.175    -       2.0  s

Results of test [miss] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              12.379  /   11.871  /   13.273    -     123.8 ms
   2: glib/ghash               16.049  /   15.646  /   17.373    -     160.5 ms
   3: rdestl::hash_map         18.818  /   16.374  /   21.023    -     188.2 ms
   4: google::densehash        19.769  /   19.622  /   19.879    -     197.7 ms
   5: tommyds/fixed            19.786  /   19.349  /   19.961    -     197.8 ms
   6: tommyds/dynamic          20.511  /   20.111  /   21.488    -     205.1 ms
   7: libevent/ht              20.578  /   20.218  /   20.946    -     205.7 ms
   8: emilib::HashMap          21.000  /   20.861  /   21.131    -     210.0 ms
   9: gcc/hashtab              21.066  /   20.315  /   21.825    -     210.6 ms
  10: amtl::hashmap            23.221  /   22.411  /   24.184    -     232.2 ms
  11: ulib/chain-hash          23.237  /   23.099  /   23.500    -     232.4 ms
  12: tommyds/linear           23.559  /   23.463  /   23.714    -     235.6 ms
  13: google/c-dense           25.807  /   25.392  /   27.918    -     258.0 ms
  14: libghthash/hashtable     27.043  /   26.934  /   27.090    -     270.4 ms
  15: apr/hashtable            27.811  /   27.464  /   28.212    -     278.1 ms
  16: judy/JSL                 28.828  /   28.761  /   29.130    -     288.2 ms
  17: ulib::chain-hash++       29.018  /   28.700  /   29.386    -     290.2 ms
  18: hashit/overflow          29.027  /   28.801  /   29.308    -     290.2 ms
  19: Qt::QHash                30.314  /   30.127  /   30.586    -     303.1 ms
  20: libCDS/HashMap           31.117  /   30.957  /   31.438    -     311.1 ms
  21: PeterMoore/st            31.383  /   31.242  /   31.605    -     313.8 ms
  22: eastl::hashmap           31.542  /   31.283  /   31.767    -     315.4 ms
  23: python/hashtable         31.662  /   31.163  /   32.203    -     316.6 ms
  24: ulib::open-hash++        32.729  /   31.503  /   35.462    -     327.3 ms
  25: calg/hashtable           33.966  /   33.767  /   34.151    -     339.6 ms
  26: ulib/open-hash           34.467  /   34.002  /   35.194    -     344.6 ms
  27: apr-no-pool/hashtable    35.553  /   35.194  /   35.920    -     355.5 ms
  28: mct::linked_hash_map     35.639  /   32.759  /   40.224    -     356.4 ms
  29: mct::closed_hash_map     38.145  /   37.068  /   40.596    -     381.4 ms
  30: std::unordered_map       39.138  /   38.989  /   39.327    -     391.4 ms
  31: ulib::align-hash++       39.397  /   39.179  /   40.004    -     393.9 ms
  32: clark/hashtable          42.720  /   42.301  /   43.352    -     427.2 ms
  33: hashit/open              43.951  /   43.438  /   44.685    -     439.5 ms
  34: rigtorp::hashmap         44.640  /   43.567  /   48.972    -     446.4 ms
  35: uthash/hashtable         45.266  /   44.361  /   46.273    -     452.6 ms
  36: hashit/chain             46.035  /   45.309  /   47.023    -     460.3 ms
  37: libdynamic/map           47.480  /   47.242  /   47.972    -     474.8 ms
  38: boost::unordered_map     49.087  /   48.293  /   49.379    -     490.8 ms
  39: google/c-sparse          50.098  /   45.283  /   55.738    -     501.0 ms
  40: stb/sdict                52.444  /   51.648  /   55.889    -     524.4 ms
  41: klib/khash               52.959  /   52.491  /   54.144    -     529.6 ms
  42: oddou::hashmap           62.464  /   61.983  /   64.896    -     624.6 ms
  43: google::sparsehash       64.325  /   64.197  /   64.634    -     643.2 ms
  44: tbb::unordered_map       68.258  /   66.958  /   76.418    -     682.6 ms
  45: libcfu/hashtable         89.559  /   88.526  /   94.001    -     895.6 ms
  46: ulib/align-hash         166.011  /  163.563  /  168.783    -       1.6  s

Results of test [delete] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              13.776  /   13.754  /   13.818    -     137.7 ms
   2: tommyds/fixed            13.876  /   13.652  /   14.045    -     138.7 ms
   3: gcc/hashtab              15.367  /   15.304  /   15.427    -     153.6 ms
   4: glib/ghash               15.632  /   15.576  /   15.777    -     156.3 ms
   5: rdestl::hash_map         16.139  /   15.953  /   17.222    -     161.4 ms
   6: ulib/chain-hash          16.355  /   16.005  /   17.130    -     163.5 ms
   7: apr/hashtable            16.750  /   16.659  /   16.818    -     167.5 ms
   8: apr-no-pool/hashtable    18.311  /   18.058  /   18.579    -     183.1 ms
   9: tommyds/dynamic          19.417  /   19.290  /   19.564    -     194.1 ms
  10: libghthash/hashtable     19.668  /   19.610  /   19.849    -     196.7 ms
  11: emilib::HashMap          20.732  /   20.640  /   20.873    -     207.3 ms
  12: google::densehash        20.775  /   20.708  /   20.844    -     207.7 ms
  13: amtl::hashmap            20.829  /   20.500  /   21.176    -     208.3 ms
  14: libevent/ht              21.036  /   20.908  /   21.128    -     210.3 ms
  15: tommyds/linear           21.347  /   21.087  /   21.587    -     213.4 ms
  16: hashit/overflow          22.298  /   22.020  /   22.846    -     223.0 ms
  17: libCDS/HashMap           26.680  /   26.508  /   27.031    -     266.8 ms
  18: eastl::hashmap           26.768  /   26.559  /   26.989    -     267.7 ms
  19: hashit/chain             27.581  /   26.366  /   32.261    -     275.8 ms
  20: PeterMoore/st            28.046  /   27.300  /   28.928    -     280.4 ms
  21: python/hashtable         28.346  /   27.274  /   29.601    -     283.4 ms
  22: Qt::QHash                28.595  /   27.889  /   32.115    -     285.9 ms
  23: klib/khash               28.841  /   28.146  /   30.731    -     288.4 ms
  24: calg/hashtable           29.154  /   27.982  /   30.448    -     291.5 ms
  25: ulib/open-hash           31.040  /   30.786  /   31.538    -     310.4 ms
  26: google/c-dense           32.084  /   31.800  /   32.954    -     320.8 ms
  27: clark/hashtable          35.629  /   35.447  /   36.127    -     356.3 ms
  28: std::unordered_map       36.264  /   36.014  /   37.162    -     362.6 ms
  29: ulib::align-hash++       36.996  /   35.316  /   42.606    -     369.9 ms
  30: mct::closed_hash_map     37.601  /   37.296  /   38.040    -     376.0 ms
  31: mct::linked_hash_map     37.709  /   37.339  /   37.997    -     377.1 ms
  32: ulib::open-hash++        39.534  /   38.659  /   42.498    -     395.3 ms
  33: uthash/hashtable         40.109  /   39.753  /   40.614    -     401.1 ms
  34: rigtorp::hashmap         43.039  /   42.920  /   43.254    -     430.4 ms
  35: judy/JSL                 43.546  /   42.712  /   48.298    -     435.4 ms
  36: libdynamic/map           46.077  /   45.046  /   52.135    -     460.7 ms
  37: boost::unordered_map     51.059  /   49.779  /   52.750    -     510.6 ms
  38: ulib/align-hash          55.100  /   55.006  /   55.371    -     551.0 ms
  39: hashit/open              56.831  /   56.248  /   57.637    -     568.3 ms
  40: google/c-sparse          62.467  /   62.261  /   63.093    -     624.6 ms
  41: google::sparsehash       71.730  /   70.702  /   78.791    -     717.3 ms
  42: libcfu/hashtable         74.986  /   73.209  /   76.677    -     749.8 ms
  43: oddou::hashmap           84.046  /   83.884  /   84.250    -     840.4 ms
  44: tbb::unordered_map       86.688  /   86.140  /   88.314    -     866.9 ms
  45: stb/sdict                99.842  /   98.175  /  107.048    -     998.4 ms
  46: ulib::chain-hash++      202.699  /  186.802  /  222.933    -       2.0  s

Results of test [replace] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              26.637  /   24.436  /   31.457    -     266.4 ms
   2: rdestl::hash_map         26.996  /   26.489  /   28.709    -     269.9 ms
   3: tommyds/fixed            28.706  /   27.577  /   32.581    -     287.0 ms
   4: tommyds/dynamic          28.821  /   28.565  /   29.062    -     288.2 ms
   5: libevent/ht              33.928  /   33.507  /   37.002    -     339.3 ms
   6: tommyds/linear           34.247  /   34.086  /   34.364    -     342.4 ms
   7: apr/hashtable            35.478  /   34.718  /   38.123    -     354.8 ms
   8: emilib::HashMap          36.595  /   36.484  /   36.744    -     365.9 ms
   9: gcc/hashtab              38.668  /   38.074  /   40.560    -     386.7 ms
  10: amtl::hashmap            38.885  /   38.418  /   39.470    -     388.8 ms
  11: glib/ghash               39.558  /   37.437  /   49.037    -     395.6 ms
  12: libCDS/HashMap           41.870  /   40.103  /   45.674    -     418.7 ms
  13: python/hashtable         42.908  /   40.514  /   50.570    -     429.1 ms
  14: Qt::QHash                43.903  /   40.704  /   66.509    -     439.0 ms
  15: ulib/chain-hash          46.353  /   45.500  /   49.222    -     463.5 ms
  16: eastl::hashmap           47.797  /   44.276  /   55.647    -     478.0 ms
  17: calg/hashtable           48.438  /   46.872  /   58.990    -     484.4 ms
  18: libghthash/hashtable     48.691  /   44.279  /   56.462    -     486.9 ms
  19: google::densehash        48.857  /   46.840  /   54.170    -     488.5 ms
  20: apr-no-pool/hashtable    49.902  /   46.376  /   61.428    -     499.0 ms
  21: google/c-dense           50.775  /   50.335  /   51.529    -     507.7 ms
  22: ulib/open-hash           53.383  /   51.386  /   56.342    -     533.8 ms
  23: klib/khash               55.464  /   54.136  /   63.270    -     554.6 ms
  24: PeterMoore/st            63.852  /   63.466  /   64.375    -     638.5 ms
  25: std::unordered_map       64.754  /   63.406  /   71.013    -     647.5 ms
  26: mct::closed_hash_map     64.887  /   63.145  /   66.554    -     648.9 ms
  27: ulib::open-hash++        65.297  /   63.027  /   79.651    -     653.0 ms
  28: ulib::align-hash++       67.817  /   66.312  /   71.256    -     678.2 ms
  29: mct::linked_hash_map     68.077  /   66.983  /   70.792    -     680.8 ms
  30: clark/hashtable          70.429  /   67.060  /   78.636    -     704.3 ms
  31: hashit/chain             74.809  /   70.921  /   81.164    -     748.1 ms
  32: uthash/hashtable         79.754  /   76.358  /   88.006    -     797.5 ms
  33: rigtorp::hashmap         84.081  /   83.255  /   87.100    -     840.8 ms
  34: judy/JSL                 85.831  /   81.844  /   92.221    -     858.3 ms
  35: libdynamic/map           88.266  /   85.839  /   97.701    -     882.6 ms
  36: ulib/align-hash          93.105  /   90.863  /  100.080    -     931.0 ms
  37: boost::unordered_map     94.087  /   83.920  /  115.154    -     940.9 ms
  38: google/c-sparse         101.958  /  101.579  /  102.640    -       1.0  s
  39: oddou::hashmap          108.885  /  101.534  /  118.256    -       1.0  s
  40: libcfu/hashtable        121.558  /  117.958  /  126.303    -       1.2  s
  41: tbb::unordered_map      138.456  /  134.567  /  156.366    -       1.3  s
  42: google::sparsehash      157.477  /  151.616  /  169.478    -       1.5  s
  43: stb/sdict               178.115  /  170.690  /  195.240    -       1.7  s
  44: hashit/open             212.764  /  208.182  /  225.900    -       2.1  s
  45: ulib::chain-hash++      750.614  /  688.047  /  800.602    -       7.5  s
  46: hashit/overflow         845.878  /  823.796  /  913.461    -       8.4  s

Results of test [kbench] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              15.408  /   15.356  /   15.515    -     154.0 ms
   2: tommyds/fixed            16.842  /   16.644  /   17.073    -     168.4 ms
   3: gcc/hashtab              17.752  /   17.337  /   17.912    -     177.5 ms
   4: apr/hashtable            18.064  /   17.942  /   18.257    -     180.6 ms
   5: rdestl::hash_map         18.274  /   18.169  /   18.404    -     182.7 ms
   6: ulib/chain-hash          18.682  /   17.135  /   21.199    -     186.8 ms
   7: glib/ghash               19.061  /   19.011  /   19.138    -     190.6 ms
   8: apr-no-pool/hashtable    19.500  /   19.396  /   19.604    -     195.0 ms
   9: emilib::HashMap          21.261  /   21.186  /   21.355    -     212.6 ms
  10: libghthash/hashtable     21.795  /   21.521  /   21.877    -     217.9 ms
  11: google::densehash        21.861  /   21.718  /   21.987    -     218.6 ms
  12: tommyds/dynamic          21.944  /   21.595  /   22.110    -     219.4 ms
  13: libevent/ht              22.514  /   21.823  /   24.039    -     225.1 ms
  14: tommyds/linear           24.680  /   24.182  /   26.669    -     246.8 ms
  15: amtl::hashmap            25.417  /   24.837  /   27.923    -     254.1 ms
  16: libCDS/HashMap           27.485  /   27.310  /   27.652    -     274.8 ms
  17: Qt::QHash                27.707  /   27.019  /   32.319    -     277.0 ms
  18: eastl::hashmap           28.457  /   28.230  /   29.010    -     284.5 ms
  19: PeterMoore/st            29.609  /   29.127  /   30.996    -     296.1 ms
  20: hashit/overflow          29.621  /   28.927  /   32.965    -     296.2 ms
  21: python/hashtable         29.859  /   29.586  /   30.089    -     298.6 ms
  22: calg/hashtable           31.052  /   29.808  /   35.319    -     310.5 ms
  23: klib/khash               31.054  /   30.000  /   34.765    -     310.5 ms
  24: hashit/chain             32.093  /   31.885  /   32.304    -     320.9 ms
  25: google/c-dense           33.779  /   33.548  /   33.929    -     337.8 ms
  26: ulib/open-hash           34.956  /   32.511  /   42.773    -     349.5 ms
  27: std::unordered_map       36.394  /   36.254  /   36.821    -     363.9 ms
  28: mct::linked_hash_map     37.391  /   36.936  /   37.852    -     373.9 ms
  29: clark/hashtable          38.701  /   37.609  /   44.061    -     387.0 ms
  30: mct::closed_hash_map     40.516  /   40.124  /   40.763    -     405.1 ms
  31: uthash/hashtable         41.744  /   41.155  /   42.085    -     417.4 ms
  32: rigtorp::hashmap         46.737  /   44.007  /   57.337    -     467.3 ms
  33: ulib::align-hash++       47.108  /   46.965  /   47.573    -     471.1 ms
  34: libdynamic/map           47.256  /   46.046  /   56.188    -     472.5 ms
  35: boost::unordered_map     47.865  /   47.611  /   48.053    -     478.6 ms
  36: ulib::open-hash++        48.424  /   48.184  /   48.772    -     484.2 ms
  37: judy/JSL                 48.715  /   46.793  /   56.815    -     487.1 ms
  38: hashit/open              63.034  /   62.345  /   63.631    -     630.3 ms
  39: ulib/align-hash          63.549  /   60.328  /   72.896    -     635.5 ms
  40: google/c-sparse          68.735  /   67.316  /   76.856    -     687.3 ms
  41: libcfu/hashtable         74.184  /   72.154  /   79.439    -     741.8 ms
  42: google::sparsehash       89.727  /   84.657  /  102.369    -     897.2 ms
  43: oddou::hashmap           94.215  /   90.005  /  109.595    -     942.1 ms
  44: stb/sdict                99.621  /   99.045  /  100.814    -     996.2 ms
  45: tbb::unordered_map      105.018  /   98.632  /  129.159    -       1.0  s
  46: ulib::chain-hash++      266.292  /  264.619  /  269.895    -       2.6  s
