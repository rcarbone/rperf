Linux nuc 3.2.0-4-amd64 #1 SMP Debian 3.2.88-1 x86_64

Evaluate average wall-time elapsed repeating 10 times the same test with 100000 items per test

Tests to run: 6 over 42 implementations
  1: grow    (Add items to an empty container)
  2: hit     (Find existing items            )
  3: miss    (Search non existing items      )
  4: delete  (Delete existing items          )
  5: replace (Replace existing items         )
  6: kbench  (Delete if found, add otherwise )

To run #10 times each with #100000 items
[1] Running grow ...... Done! over #42 implementations - Elapsed  12.1  s
[2] Running hit ....... Done! over #42 implementations - Elapsed  17.3  s
[3] Running miss ...... Done! over #42 implementations - Elapsed  16.7  s
[4] Running delete .... Done! over #42 implementations - Elapsed  19.5  s
[5] Running replace ... Done! over #42 implementations - Elapsed  44.0  s
[6] Running kbench .... Done! over #42 implementations - Elapsed  18.7  s

                              H a l l   o f   F a m e

Results of test [grow] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: gcc/hashtab               8.657  /    8.502  /    8.827    -      86.6 ms
   2: ccan/htable               8.665  /    7.537  /   10.328    -      86.6 ms
   3: libevent/ht              12.377  /   12.192  /   12.719    -     123.7 ms
   4: glib/ghash               13.670  /   11.063  /   14.660    -     136.7 ms
   5: tommyds/dynamic          14.791  /   14.114  /   16.792    -     147.9 ms
   6: amtl::hashmap            14.930  /   14.424  /   15.138    -     149.3 ms
   7: ulib/chain-hash          15.009  /   13.850  /   22.225    -     150.1 ms
   8: emilib::HashMap          15.196  /   14.967  /   15.610    -     151.9 ms
   9: google::densehash        15.856  /   15.648  /   16.632    -     158.5 ms
  10: tommyds/linear           15.869  /   13.743  /   17.345    -     158.7 ms
  11: rdestl::hash_map         16.557  /   15.621  /   18.830    -     165.6 ms
  12: google/c-dense           17.816  /   16.080  /   21.883    -     178.1 ms
  13: hashit/overflow          18.424  /   12.990  /   25.674    -     184.2 ms
  14: libghthash/hashtable     18.620  /   18.336  /   19.086    -     186.2 ms
  15: hashit/open              18.717  /   16.682  /   21.469    -     187.2 ms
  16: apr/hashtable            21.962  /   21.776  /   22.372    -     219.6 ms
  17: klib/khash               22.604  /   22.259  /   23.228    -     226.0 ms
  18: calg/hashtable           24.981  /   24.418  /   25.947    -     249.8 ms
  19: Qt::QHash                25.253  /   22.328  /   30.851    -     252.5 ms
  20: clark/hashtable          26.360  /   26.101  /   26.939    -     263.6 ms
  21: libCDS/HashMap           27.425  /   26.565  /   28.732    -     274.2 ms
  22: uthash/hashtable         27.519  /   27.338  /   27.791    -     275.2 ms
  23: ulib/open-hash           27.792  /   26.022  /   30.952    -     277.9 ms
  24: std::unordered_map       28.465  /   25.512  /   32.036    -     284.6 ms
  25: apr-no-pool/hashtable    29.399  /   29.210  /   29.621    -     294.0 ms
  26: eastl::hashmap           30.360  /   25.967  /   35.593    -     303.6 ms
  27: ulib::open-hash++        30.721  /   30.172  /   32.391    -     307.2 ms
  28: ulib::chain-hash++       31.093  /   29.791  /   37.370    -     310.9 ms
  29: PeterMoore/st            31.195  /   26.305  /   38.828    -     311.9 ms
  30: mct::closed_hash_map     32.004  /   29.485  /   38.271    -     320.0 ms
  31: mct::linked_hash_map     32.221  /   28.919  /   38.895    -     322.2 ms
  32: rigtorp::hashmap         32.897  /   28.585  /   39.728    -     329.0 ms
  33: python/hashtable         34.418  /   29.751  /   40.263    -     344.2 ms
  34: boost::unordered_map     37.498  /   33.515  /   45.128    -     375.0 ms
  35: tbb::unordered_map       40.733  /   39.117  /   42.542    -     407.3 ms
  36: judy/dynamic             44.208  /   35.350  /   46.878    -     442.1 ms
  37: hashit/chain             45.360  /   36.399  /   59.993    -     453.6 ms
  38: google/c-sparse          53.861  /   43.078  /   75.587    -     538.6 ms
  39: google::sparsehash       54.517  /   52.579  /   63.505    -     545.1 ms
  40: stb/sdict                54.912  /   33.919  /   92.487    -     549.1 ms
  41: oddou::hashmap           58.996  /   52.762  /   74.288    -     589.9 ms
  42: libcfu/hashtable         82.201  /   74.104  /   87.491    -     822.0 ms

Results of test [hit] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              12.185  /   12.054  /   12.299    -     121.8 ms
   2: glib/ghash               14.559  /   14.503  /   14.658    -     145.6 ms
   3: gcc/hashtab              18.533  /   18.237  /   18.805    -     185.3 ms
   4: rdestl::hash_map         19.209  /   17.148  /   19.639    -     192.1 ms
   5: ulib/chain-hash          20.009  /   19.888  /   20.164    -     200.1 ms
   6: google::densehash        20.350  /   20.232  /   20.484    -     203.5 ms
   7: tommyds/dynamic          20.430  /   19.955  /   21.956    -     204.3 ms
   8: emilib::HashMap          21.135  /   20.960  /   21.617    -     211.3 ms
   9: libevent/ht              21.941  /   18.735  /   27.165    -     219.4 ms
  10: tommyds/linear           22.539  /   22.234  /   22.826    -     225.4 ms
  11: amtl::hashmap            24.070  /   22.360  /   24.854    -     240.7 ms
  12: libghthash/hashtable     26.018  /   25.730  /   26.151    -     260.2 ms
  13: google/c-dense           26.374  /   26.090  /   26.706    -     263.7 ms
  14: apr/hashtable            28.645  /   27.742  /   31.483    -     286.4 ms
  15: judy/dynamic             29.892  /   29.800  /   30.005    -     298.9 ms
  16: hashit/overflow          30.019  /   25.241  /   41.666    -     300.2 ms
  17: Qt::QHash                30.625  /   29.973  /   30.946    -     306.2 ms
  18: eastl::hashmap           30.819  /   30.123  /   31.215    -     308.2 ms
  19: PeterMoore/st            31.135  /   30.852  /   31.524    -     311.3 ms
  20: std::unordered_map       34.542  /   34.132  /   35.870    -     345.4 ms
  21: ulib/open-hash           34.733  /   34.067  /   37.392    -     347.3 ms
  22: klib/khash               35.455  /   35.108  /   36.227    -     354.5 ms
  23: apr-no-pool/hashtable    35.649  /   34.855  /   37.809    -     356.5 ms
  24: python/hashtable         36.620  /   29.309  /   49.437    -     366.2 ms
  25: mct::linked_hash_map     36.691  /   36.141  /   37.524    -     366.9 ms
  26: mct::closed_hash_map     37.557  /   37.312  /   38.017    -     375.6 ms
  27: hashit/open              38.867  /   30.516  /   47.964    -     388.7 ms
  28: hashit/chain             41.533  /   41.263  /   41.967    -     415.3 ms
  29: calg/hashtable           42.606  /   31.678  /   49.359    -     426.1 ms
  30: libCDS/HashMap           42.936  /   37.850  /   51.681    -     429.4 ms
  31: uthash/hashtable         43.725  /   43.276  /   44.036    -     437.2 ms
  32: rigtorp::hashmap         45.822  /   40.761  /   54.259    -     458.2 ms
  33: stb/sdict                46.452  /   45.788  /   47.425    -     464.5 ms
  34: google/c-sparse          47.939  /   47.543  /   49.181    -     479.4 ms
  35: ulib::open-hash++        47.941  /   47.539  /   48.218    -     479.4 ms
  36: boost::unordered_map     55.772  /   46.273  /   73.379    -     557.7 ms
  37: clark/hashtable          59.930  /   45.893  /   76.542    -     599.3 ms
  38: oddou::hashmap           61.100  /   60.900  /   61.367    -     611.0 ms
  39: tbb::unordered_map       63.163  /   62.609  /   64.603    -     631.6 ms
  40: google::sparsehash       72.242  /   71.482  /   73.772    -     722.4 ms
  41: libcfu/hashtable         85.218  /   84.069  /   87.083    -     852.2 ms
  42: ulib::chain-hash++      240.126  /  220.291  /  305.884    -       2.4  s

Results of test [miss] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              12.566  /   12.154  /   14.547    -     125.6 ms
   2: glib/ghash               16.169  /   16.049  /   16.493    -     161.7 ms
   3: rdestl::hash_map         18.399  /   17.024  /   18.643    -     184.0 ms
   4: google::densehash        19.467  /   19.322  /   19.685    -     194.6 ms
   5: libevent/ht              20.220  /   19.867  /   20.500    -     202.2 ms
   6: gcc/hashtab              21.297  /   20.736  /   21.832    -     213.0 ms
   7: ulib/chain-hash          22.918  /   19.284  /   34.813    -     229.2 ms
   8: amtl::hashmap            23.584  /   21.867  /   24.390    -     235.8 ms
   9: tommyds/dynamic          23.662  /   21.289  /   28.553    -     236.6 ms
  10: tommyds/linear           24.896  /   24.712  /   25.039    -     248.9 ms
  11: libghthash/hashtable     26.462  /   26.023  /   29.202    -     264.6 ms
  12: ulib::chain-hash++       27.964  /   23.583  /   29.879    -     279.6 ms
  13: emilib::HashMap          28.218  /   21.253  /   33.094    -     282.2 ms
  14: hashit/overflow          29.381  /   28.813  /   29.951    -     293.8 ms
  15: python/hashtable         30.708  /   30.313  /   31.142    -     307.1 ms
  16: eastl::hashmap           31.757  /   31.354  /   32.003    -     317.5 ms
  17: ulib::open-hash++        31.758  /   31.599  /   31.969    -     317.6 ms
  18: Qt::QHash                32.707  /   32.416  /   32.960    -     327.0 ms
  19: google/c-dense           33.194  /   27.797  /   41.227    -     331.9 ms
  20: PeterMoore/st            35.790  /   32.185  /   44.822    -     357.9 ms
  21: apr/hashtable            36.939  /   27.619  /   66.769    -     369.4 ms
  22: libCDS/HashMap           37.043  /   30.047  /   50.836    -     370.4 ms
  23: ulib/open-hash           38.463  /   34.801  /   52.128    -     384.6 ms
  24: mct::linked_hash_map     38.726  /   37.650  /   39.495    -     387.3 ms
  25: mct::closed_hash_map     41.360  /   36.439  /   47.183    -     413.6 ms
  26: judy/dynamic             41.742  /   29.474  /   60.771    -     417.4 ms
  27: boost::unordered_map     42.165  /   41.776  /   42.600    -     421.6 ms
  28: std::unordered_map       42.360  /   39.440  /   50.715    -     423.6 ms
  29: calg/hashtable           42.498  /   32.940  /   52.021    -     425.0 ms
  30: apr-no-pool/hashtable    42.909  /   35.296  /   59.457    -     429.1 ms
  31: rigtorp::hashmap         44.028  /   43.627  /   44.650    -     440.3 ms
  32: hashit/open              45.081  /   43.927  /   46.970    -     450.8 ms
  33: uthash/hashtable         47.128  /   46.098  /   47.693    -     471.3 ms
  34: hashit/chain             52.849  /   44.887  /   69.645    -     528.5 ms
  35: clark/hashtable          54.112  /   40.365  /   69.288    -     541.1 ms
  36: stb/sdict                64.120  /   56.462  /   79.122    -     641.2 ms
  37: google/c-sparse          64.312  /   46.169  /  112.424    -     643.1 ms
  38: google::sparsehash       65.541  /   65.135  /   65.943    -     655.4 ms
  39: klib/khash               68.012  /   53.690  /   93.391    -     680.1 ms
  40: tbb::unordered_map       80.117  /   67.965  /   99.772    -     801.2 ms
  41: libcfu/hashtable         85.633  /   84.909  /   88.681    -     856.3 ms
  42: oddou::hashmap           87.884  /   62.255  /  114.530    -     878.8 ms

Results of test [delete] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              13.164  /   13.072  /   13.432    -     131.6 ms
   2: ulib/chain-hash          15.325  /   15.184  /   15.684    -     153.2 ms
   3: glib/ghash               15.813  /   15.580  /   16.340    -     158.1 ms
   4: apr/hashtable            16.960  /   16.808  /   17.293    -     169.6 ms
   5: libghthash/hashtable     18.616  /   18.385  /   18.825    -     186.1 ms
   6: rdestl::hash_map         19.128  /   17.262  /   19.520    -     191.3 ms
   7: hashit/overflow          19.400  /   18.972  /   19.894    -     194.0 ms
   8: emilib::HashMap          19.676  /   19.301  /   19.842    -     196.7 ms
   9: libevent/ht              19.746  /   19.236  /   22.811    -     197.4 ms
  10: tommyds/linear           20.131  /   19.820  /   20.459    -     201.3 ms
  11: google::densehash        20.601  /   20.380  /   21.289    -     206.0 ms
  12: tommyds/dynamic          21.071  /   20.822  /   21.404    -     210.7 ms
  13: gcc/hashtab              21.680  /   18.240  /   23.714    -     216.8 ms
  14: eastl::hashmap           25.175  /   25.037  /   25.327    -     251.7 ms
  15: hashit/chain             25.594  /   24.105  /   30.344    -     255.9 ms
  16: calg/hashtable           26.317  /   26.015  /   26.829    -     263.1 ms
  17: Qt::QHash                26.867  /   26.426  /   27.664    -     268.7 ms
  18: libCDS/HashMap           26.881  /   26.594  /   27.379    -     268.8 ms
  19: amtl::hashmap            27.297  /   22.847  /   37.340    -     273.0 ms
  20: apr-no-pool/hashtable    28.383  /   19.042  /   34.155    -     283.8 ms
  21: python/hashtable         29.517  /   27.816  /   33.652    -     295.2 ms
  22: klib/khash               30.244  /   29.208  /   31.126    -     302.4 ms
  23: mct::closed_hash_map     31.989  /   31.482  /   32.900    -     319.9 ms
  24: clark/hashtable          32.322  /   31.616  /   33.247    -     323.2 ms
  25: std::unordered_map       33.347  /   33.152  /   33.669    -     333.4 ms
  26: google/c-dense           34.834  /   30.096  /   46.551    -     348.3 ms
  27: ulib/open-hash           41.341  /   29.708  /   55.947    -     413.4 ms
  28: ulib::open-hash++        42.516  /   38.853  /   55.056    -     425.1 ms
  29: uthash/hashtable         42.574  /   41.574  /   45.405    -     425.7 ms
  30: PeterMoore/st            43.514  /   29.310  /   68.042    -     435.1 ms
  31: mct::linked_hash_map     44.012  /   37.876  /   49.824    -     440.1 ms
  32: rigtorp::hashmap         52.168  /   43.283  /   72.036    -     521.7 ms
  33: judy/dynamic             53.733  /   43.314  /   75.875    -     537.3 ms
  34: hashit/open              61.514  /   56.266  /   79.591    -     615.1 ms
  35: google/c-sparse          62.532  /   61.830  /   64.513    -     625.3 ms
  36: libcfu/hashtable         64.974  /   64.093  /   68.698    -     649.7 ms
  37: google::sparsehash       71.514  /   71.196  /   71.861    -     715.1 ms
  38: boost::unordered_map     72.335  /   60.489  /   81.298    -     723.4 ms
  39: oddou::hashmap           85.163  /   84.278  /   89.186    -     851.6 ms
  40: tbb::unordered_map      102.932  /   87.030  /  153.644    -       1.0  s
  41: stb/sdict               160.511  /   96.591  /  207.903    -       1.6  s
  42: ulib::chain-hash++      331.628  /  238.300  /  366.604    -       3.3  s

Results of test [replace] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              25.384  /   25.171  /   26.367    -     253.8 ms
   2: rdestl::hash_map         30.472  /   29.343  /   30.952    -     304.7 ms
   3: tommyds/dynamic          32.223  /   31.842  /   32.472    -     322.2 ms
   4: libevent/ht              34.233  /   33.952  /   34.748    -     342.3 ms
   5: tommyds/linear           36.322  /   35.963  /   36.710    -     363.2 ms
   6: apr/hashtable            36.954  /   36.644  /   37.162    -     369.5 ms
   7: emilib::HashMap          37.542  /   37.432  /   37.632    -     375.4 ms
   8: glib/ghash               38.249  /   37.998  /   38.413    -     382.5 ms
   9: gcc/hashtab              38.909  /   38.646  /   39.651    -     389.1 ms
  10: python/hashtable         41.981  /   41.520  /   43.039    -     419.8 ms
  11: libCDS/HashMap           42.592  /   42.055  /   42.920    -     425.9 ms
  12: amtl::hashmap            43.483  /   41.284  /   44.289    -     434.8 ms
  13: Qt::QHash                43.545  /   42.965  /   45.969    -     435.4 ms
  14: eastl::hashmap           46.358  /   45.746  /   48.456    -     463.6 ms
  15: libghthash/hashtable     46.403  /   46.066  /   48.560    -     464.0 ms
  16: apr-no-pool/hashtable    47.201  /   47.014  /   47.759    -     472.0 ms
  17: calg/hashtable           47.733  /   47.567  /   47.996    -     477.3 ms
  18: ulib/chain-hash          49.838  /   47.045  /   56.605    -     498.4 ms
  19: google::densehash        53.321  /   50.497  /   59.678    -     533.2 ms
  20: ulib/open-hash           55.280  /   55.069  /   56.105    -     552.8 ms
  21: google/c-dense           55.392  /   55.210  /   55.851    -     553.9 ms
  22: klib/khash               58.199  /   57.893  /   59.469    -     582.0 ms
  23: std::unordered_map       61.462  /   61.234  /   61.889    -     614.6 ms
  24: PeterMoore/st            64.194  /   63.769  /   64.763    -     641.9 ms
  25: ulib::open-hash++        64.443  /   64.198  /   65.056    -     644.4 ms
  26: mct::linked_hash_map     66.430  /   65.339  /   67.033    -     664.3 ms
  27: hashit/chain             68.459  /   68.225  /   68.873    -     684.6 ms
  28: mct::closed_hash_map     69.890  /   67.790  /   74.195    -     698.9 ms
  29: clark/hashtable          75.695  /   75.124  /   76.058    -     756.9 ms
  30: judy/dynamic             82.800  /   82.136  /   83.196    -     828.0 ms
  31: boost::unordered_map     87.200  /   86.202  /   89.288    -     872.0 ms
  32: uthash/hashtable         87.575  /   77.932  /  110.461    -     875.7 ms
  33: rigtorp::hashmap         90.188  /   90.012  /   90.728    -     901.9 ms
  34: oddou::hashmap          103.049  /  102.336  /  106.880    -       1.0  s
  35: google/c-sparse         103.465  /  103.156  /  103.736    -       1.0  s
  36: libcfu/hashtable        120.008  /  119.231  /  121.042    -       1.2  s
  37: tbb::unordered_map      136.773  /  135.898  /  138.005    -       1.3  s
  38: google::sparsehash      154.570  /  153.959  /  157.242    -       1.5  s
  39: stb/sdict               174.939  /  174.515  /  175.806    -       1.7  s
  40: hashit/open             228.279  /  225.001  /  238.917    -       2.2  s
  41: ulib::chain-hash++      692.392  /  654.648  /  760.780    -       6.9  s
  42: hashit/overflow         935.784  /  825.316  / 1327.814    -       9.3  s

Results of test [kbench] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              15.491  /   15.371  /   15.734    -     154.9 ms
   2: ulib/chain-hash          17.000  /   16.785  /   17.118    -     170.0 ms
   3: gcc/hashtab              18.097  /   17.949  /   18.481    -     180.9 ms
   4: rdestl::hash_map         18.235  /   18.091  /   18.330    -     182.3 ms
   5: glib/ghash               19.071  /   18.933  /   19.214    -     190.7 ms
   6: apr/hashtable            19.086  /   18.990  /   19.241    -     190.8 ms
   7: apr-no-pool/hashtable    19.634  /   19.414  /   19.990    -     196.3 ms
   8: libghthash/hashtable     20.985  /   20.899  /   21.043    -     209.8 ms
   9: emilib::HashMap          21.711  /   21.604  /   21.826    -     217.1 ms
  10: google::densehash        22.269  /   22.060  /   22.409    -     222.7 ms
  11: libevent/ht              22.503  /   22.039  /   22.702    -     225.0 ms
  12: tommyds/dynamic          24.428  /   24.204  /   24.759    -     244.3 ms
  13: amtl::hashmap            25.749  /   25.501  /   25.977    -     257.5 ms
  14: tommyds/linear           26.236  /   25.960  /   26.626    -     262.3 ms
  15: libCDS/HashMap           27.377  /   27.125  /   27.607    -     273.7 ms
  16: Qt::QHash                28.006  /   27.815  /   28.240    -     280.0 ms
  17: eastl::hashmap           28.459  /   28.201  /   28.716    -     284.6 ms
  18: hashit/overflow          29.228  /   28.929  /   30.256    -     292.3 ms
  19: python/hashtable         29.294  /   29.093  /   29.466    -     292.9 ms
  20: PeterMoore/st            29.333  /   29.169  /   29.510    -     293.3 ms
  21: calg/hashtable           29.982  /   29.789  /   30.129    -     299.8 ms
  22: klib/khash               30.632  /   30.392  /   30.873    -     306.3 ms
  23: hashit/chain             32.328  /   32.148  /   32.480    -     323.2 ms
  24: google/c-dense           32.351  /   31.938  /   33.865    -     323.5 ms
  25: ulib/open-hash           33.804  /   33.606  /   33.969    -     338.0 ms
  26: std::unordered_map       34.771  /   34.661  /   34.889    -     347.7 ms
  27: clark/hashtable          37.902  /   37.512  /   38.186    -     379.0 ms
  28: mct::linked_hash_map     39.067  /   38.114  /   39.570    -     390.7 ms
  29: mct::closed_hash_map     41.225  /   40.606  /   41.525    -     412.2 ms
  30: uthash/hashtable         42.432  /   41.465  /   43.333    -     424.3 ms
  31: rigtorp::hashmap         44.963  /   44.809  /   45.070    -     449.6 ms
  32: judy/dynamic             47.030  /   46.601  /   47.214    -     470.3 ms
  33: boost::unordered_map     48.063  /   47.843  /   48.355    -     480.6 ms
  34: ulib::open-hash++        49.997  /   49.808  /   50.198    -     499.9 ms
  35: hashit/open              63.637  /   63.024  /   64.282    -     636.4 ms
  36: google/c-sparse          67.989  /   67.739  /   68.291    -     679.9 ms
  37: libcfu/hashtable         73.424  /   72.078  /   74.210    -     734.2 ms
  38: google::sparsehash       88.132  /   85.057  /  111.174    -     881.3 ms
  39: oddou::hashmap           90.589  /   90.390  /   90.764    -     905.9 ms
  40: tbb::unordered_map       96.936  /   96.677  /   97.244    -     969.3 ms
  41: stb/sdict               101.321  /  100.958  /  102.080    -       1.0  s
  42: ulib::chain-hash++      282.921  /  281.395  /  285.142    -       2.8  s
