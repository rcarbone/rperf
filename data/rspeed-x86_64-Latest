Linux nuc 3.2.0-4-amd64 #1 SMP Debian 3.2.89-2 x86_64

Evaluate average wall-time elapsed repeating 10 times the same test with 100000 items per test

Tests to run: 6 over 43 implementations
  1: grow    (Add items to an empty container)
  2: hit     (Find existing items            )
  3: miss    (Search non existing items      )
  4: delete  (Delete existing items          )
  5: replace (Replace existing items         )
  6: kbench  (Delete if found, add otherwise )

To run #10 times each with #100000 items
[1] Running grow ...... Done! over #43 implementations - Elapsed  11.4  s
[2] Running hit ....... Done! over #43 implementations - Elapsed  16.8  s
[3] Running miss ...... Done! over #43 implementations - Elapsed  15.9  s
[4] Running delete .... Done! over #43 implementations - Elapsed  17.7  s
[5] Running replace ... Done! over #43 implementations - Elapsed  44.6  s
[6] Running kbench .... Done! over #43 implementations - Elapsed  20.0  s

                              H a l l   o f   F a m e

Results of test [grow] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable               7.111  /    7.069  /    7.219    -      71.1 ms
   2: gcc/hashtab               8.599  /    8.498  /    8.770    -      86.0 ms
   3: glib/ghash                8.986  /    8.960  /    9.030    -      89.8 ms
   4: amtl::hashmap            12.038  /   11.892  /   12.228    -     120.4 ms
   5: libevent/ht              12.381  /   11.646  /   12.667    -     123.8 ms
   6: tommyds/linear           12.812  /   12.575  /   13.056    -     128.1 ms
   7: hashit/overflow          12.911  /   12.531  /   13.022    -     129.1 ms
   8: rdestl::hash_map         13.097  /   12.992  /   13.224    -     130.9 ms
   9: tommyds/dynamic          13.539  /   13.424  /   13.647    -     135.4 ms
  10: ulib/chain-hash          14.319  /   14.210  /   14.623    -     143.2 ms
  11: hashit/open              14.595  /   14.532  /   14.662    -     145.9 ms
  12: google::densehash        15.509  /   15.424  /   15.649    -     155.1 ms
  13: emilib::HashMap          15.593  /   15.473  /   15.800    -     155.9 ms
  14: google/c-dense           15.735  /   15.413  /   16.013    -     157.3 ms
  15: libghthash/hashtable     19.421  /   19.299  /   19.635    -     194.2 ms
  16: apr/hashtable            21.280  /   21.108  /   21.474    -     212.8 ms
  17: klib/khash               21.926  /   21.679  /   22.899    -     219.2 ms
  18: judy/JSL                 22.954  /   22.910  /   23.039    -     229.5 ms
  19: Qt::QHash                23.100  /   22.549  /   23.721    -     231.0 ms
  20: libCDS/HashMap           24.282  /   24.051  /   24.484    -     242.8 ms
  21: PeterMoore/st            24.773  /   24.493  /   24.998    -     247.7 ms
  22: ulib/open-hash           24.958  /   24.613  /   25.299    -     249.6 ms
  23: python/hashtable         24.973  /   24.590  /   25.243    -     249.7 ms
  24: eastl::hashmap           25.392  /   24.525  /   29.072    -     253.9 ms
  25: std::unordered_map       25.526  /   25.242  /   25.809    -     255.2 ms
  26: calg/hashtable           25.804  /   25.441  /   26.012    -     258.0 ms
  27: mct::linked_hash_map     26.092  /   26.014  /   26.418    -     260.9 ms
  28: hashit/chain             26.406  /   26.179  /   26.569    -     264.0 ms
  29: uthash/hashtable         27.601  /   27.159  /   27.859    -     276.0 ms
  30: rigtorp::hashmap         27.826  /   27.688  /   28.013    -     278.2 ms
  31: apr-no-pool/hashtable    29.368  /   29.230  /   29.545    -     293.7 ms
  32: clark/hashtable          29.434  /   29.199  /   29.637    -     294.3 ms
  33: ulib::open-hash++        30.288  /   30.034  /   30.411    -     302.9 ms
  34: mct::closed_hash_map     31.176  /   30.937  /   32.643    -     311.7 ms
  35: boost::unordered_map     32.281  /   32.075  /   32.684    -     322.8 ms
  36: stb/sdict                33.088  /   32.894  /   33.307    -     330.9 ms
  37: ulib::chain-hash++       38.440  /   37.881  /   41.677    -     384.4 ms
  38: google/c-sparse          38.653  /   38.597  /   38.829    -     386.5 ms
  39: tbb::unordered_map       39.161  /   38.515  /   40.761    -     391.6 ms
  40: oddou::hashmap           52.183  /   52.052  /   52.403    -     521.8 ms
  41: google::sparsehash       61.194  /   59.710  /   66.842    -     611.9 ms
  42: libcfu/hashtable         71.267  /   70.941  /   72.208    -     712.6 ms
  43: libdynamic/map           86.775  /   85.328  /   87.496    -     867.7 ms

Results of test [hit] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              12.396  /   12.299  /   12.805    -     123.9 ms
   2: glib/ghash               14.370  /   14.279  /   14.741    -     143.7 ms
   3: rdestl::hash_map         15.994  /   15.941  /   16.033    -     159.9 ms
   4: gcc/hashtab              18.056  /   17.920  /   18.226    -     180.5 ms
   5: libevent/ht              18.101  /   17.961  /   18.405    -     181.0 ms
   6: ulib/chain-hash          19.080  /   19.000  /   19.156    -     190.8 ms
   7: google::densehash        20.250  /   20.064  /   21.188    -     202.5 ms
   8: emilib::HashMap          20.266  /   20.181  /   20.426    -     202.6 ms
   9: amtl::hashmap            20.391  /   20.210  /   20.560    -     203.9 ms
  10: tommyds/dynamic          20.841  /   20.645  /   20.997    -     208.4 ms
  11: tommyds/linear           21.715  /   21.403  /   21.981    -     217.1 ms
  12: libghthash/hashtable     25.684  /   25.411  /   26.104    -     256.8 ms
  13: google/c-dense           26.003  /   25.903  /   26.133    -     260.0 ms
  14: hashit/overflow          26.419  /   26.283  /   26.507    -     264.2 ms
  15: apr/hashtable            26.665  /   26.555  /   26.772    -     266.6 ms
  16: Qt::QHash                28.520  /   28.290  /   29.224    -     285.2 ms
  17: libCDS/HashMap           28.966  /   28.737  /   29.123    -     289.6 ms
  18: judy/JSL                 29.528  /   29.447  /   29.923    -     295.3 ms
  19: python/hashtable         29.666  /   29.448  /   29.923    -     296.6 ms
  20: eastl::hashmap           30.215  /   30.047  /   30.466    -     302.1 ms
  21: PeterMoore/st            30.524  /   29.946  /   31.572    -     305.2 ms
  22: calg/hashtable           31.050  /   30.906  /   31.205    -     310.5 ms
  23: hashit/open              31.550  /   31.395  /   31.660    -     315.5 ms
  24: ulib/open-hash           33.123  /   32.657  /   33.624    -     331.2 ms
  25: mct::linked_hash_map     33.378  /   32.573  /   33.847    -     333.8 ms
  26: std::unordered_map       34.099  /   33.581  /   34.602    -     341.0 ms
  27: apr-no-pool/hashtable    34.608  /   34.389  /   35.007    -     346.1 ms
  28: klib/khash               35.072  /   34.840  /   35.310    -     350.7 ms
  29: rigtorp::hashmap         37.351  /   37.211  /   37.506    -     373.5 ms
  30: mct::closed_hash_map     37.458  /   36.292  /   38.262    -     374.6 ms
  31: clark/hashtable          40.123  /   39.891  /   40.306    -     401.2 ms
  32: hashit/chain             40.238  /   40.018  /   40.361    -     402.4 ms
  33: uthash/hashtable         43.340  /   43.174  /   43.853    -     433.4 ms
  34: boost::unordered_map     44.171  /   43.210  /   44.475    -     441.7 ms
  35: stb/sdict                46.357  /   46.074  /   46.616    -     463.5 ms
  36: ulib::open-hash++        46.477  /   45.835  /   46.994    -     464.7 ms
  37: google/c-sparse          46.556  /   46.235  /   48.334    -     465.5 ms
  38: oddou::hashmap           60.200  /   60.051  /   60.480    -     602.0 ms
  39: tbb::unordered_map       61.711  /   60.774  /   62.646    -     617.1 ms
  40: google::sparsehash       78.686  /   78.427  /   79.867    -     786.8 ms
  41: libcfu/hashtable         85.659  /   84.726  /   86.278    -     856.6 ms
  42: libdynamic/map          102.587  /  100.445  /  103.655    -       1.0  s
  43: ulib::chain-hash++      202.187  /  196.826  /  211.499    -       2.0  s

Results of test [miss] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              12.176  /   12.075  /   12.358    -     121.7 ms
   2: rdestl::hash_map         15.226  /   15.128  /   15.367    -     152.2 ms
   3: glib/ghash               16.052  /   15.981  /   16.120    -     160.5 ms
   4: google::densehash        19.394  /   19.343  /   19.443    -     193.9 ms
   5: libevent/ht              20.059  /   20.017  /   20.105    -     200.6 ms
   6: amtl::hashmap            20.293  /   19.710  /   20.990    -     202.9 ms
   7: emilib::HashMap          20.954  /   20.744  /   21.065    -     209.5 ms
   8: gcc/hashtab              21.189  /   20.684  /   21.557    -     211.9 ms
   9: ulib/chain-hash          21.278  /   21.183  /   21.627    -     212.8 ms
  10: tommyds/dynamic          22.030  /   21.880  /   22.167    -     220.3 ms
  11: tommyds/linear           23.733  /   23.516  /   24.082    -     237.3 ms
  12: libghthash/hashtable     25.671  /   25.454  /   26.018    -     256.7 ms
  13: google/c-dense           26.530  /   26.132  /   26.937    -     265.3 ms
  14: apr/hashtable            26.707  /   26.643  /   26.768    -     267.0 ms
  15: python/hashtable         29.111  /   28.247  /   29.463    -     291.1 ms
  16: judy/JSL                 29.145  /   29.073  /   29.432    -     291.4 ms
  17: libCDS/HashMap           29.679  /   29.217  /   30.191    -     296.8 ms
  18: hashit/overflow          29.811  /   29.566  /   29.901    -     298.1 ms
  19: eastl::hashmap           31.122  /   30.875  /   31.721    -     311.2 ms
  20: ulib::chain-hash++       31.532  /   31.409  /   31.751    -     315.3 ms
  21: ulib::open-hash++        31.572  /   31.509  /   31.807    -     315.7 ms
  22: Qt::QHash                31.733  /   31.372  /   32.055    -     317.3 ms
  23: PeterMoore/st            32.010  /   31.619  /   32.240    -     320.1 ms
  24: calg/hashtable           32.587  /   32.358  /   32.813    -     325.8 ms
  25: ulib/open-hash           33.559  /   33.293  /   33.971    -     335.6 ms
  26: mct::linked_hash_map     34.508  /   33.730  /   34.966    -     345.1 ms
  27: apr-no-pool/hashtable    34.814  /   34.561  /   35.053    -     348.1 ms
  28: std::unordered_map       37.059  /   36.932  /   37.189    -     370.6 ms
  29: mct::closed_hash_map     38.993  /   38.253  /   39.437    -     389.9 ms
  30: clark/hashtable          40.413  /   40.209  /   40.579    -     404.1 ms
  31: rigtorp::hashmap         43.224  /   42.801  /   44.554    -     432.2 ms
  32: hashit/open              44.071  /   43.971  /   44.189    -     440.7 ms
  33: hashit/chain             44.934  /   44.748  /   45.071    -     449.3 ms
  34: google/c-sparse          46.131  /   46.060  /   46.237    -     461.3 ms
  35: uthash/hashtable         47.647  /   47.390  /   47.864    -     476.5 ms
  36: boost::unordered_map     48.591  /   48.313  /   48.745    -     485.9 ms
  37: stb/sdict                50.563  /   50.211  /   51.064    -     505.6 ms
  38: klib/khash               52.215  /   52.063  /   52.357    -     522.1 ms
  39: oddou::hashmap           61.689  /   61.581  /   61.859    -     616.9 ms
  40: tbb::unordered_map       67.968  /   67.079  /   68.869    -     679.7 ms
  41: google::sparsehash       72.109  /   71.824  /   72.691    -     721.1 ms
  42: libcfu/hashtable         84.660  /   84.321  /   84.917    -     846.6 ms
  43: libdynamic/map          107.976  /  106.196  /  108.765    -       1.0  s

Results of test [delete] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              13.640  /   13.510  /   13.765    -     136.4 ms
   2: gcc/hashtab              15.062  /   14.954  /   15.216    -     150.6 ms
   3: ulib/chain-hash          15.544  /   15.453  /   15.637    -     155.4 ms
   4: glib/ghash               15.549  /   15.428  /   16.150    -     155.5 ms
   5: rdestl::hash_map         15.713  /   15.663  /   15.877    -     157.1 ms
   6: apr/hashtable            16.537  /   16.396  /   16.824    -     165.3 ms
   7: apr-no-pool/hashtable    17.580  /   17.495  /   17.826    -     175.8 ms
   8: libghthash/hashtable     18.621  /   18.447  /   19.524    -     186.2 ms
   9: amtl::hashmap            20.063  /   19.984  /   20.257    -     200.6 ms
  10: google::densehash        20.783  /   20.682  /   20.855    -     207.8 ms
  11: libevent/ht              20.892  /   20.785  /   21.061    -     208.9 ms
  12: emilib::HashMap          20.987  /   20.856  /   21.126    -     209.8 ms
  13: tommyds/dynamic          21.244  /   21.062  /   21.363    -     212.4 ms
  14: tommyds/linear           21.621  /   21.432  /   21.891    -     216.2 ms
  15: hashit/overflow          23.424  /   23.295  /   23.543    -     234.2 ms
  16: libCDS/HashMap           25.825  /   25.544  /   26.093    -     258.2 ms
  17: eastl::hashmap           27.249  /   27.101  /   27.520    -     272.5 ms
  18: PeterMoore/st            27.771  /   27.577  /   28.237    -     277.7 ms
  19: calg/hashtable           28.032  /   27.736  /   28.171    -     280.3 ms
  20: klib/khash               28.065  /   27.994  /   28.129    -     280.6 ms
  21: python/hashtable         28.235  /   27.797  /   30.222    -     282.3 ms
  22: ulib/open-hash           30.243  /   30.013  /   30.488    -     302.4 ms
  23: hashit/chain             30.441  /   29.847  /   31.112    -     304.4 ms
  24: Qt::QHash                30.862  /   30.552  /   31.240    -     308.6 ms
  25: google/c-dense           32.087  /   31.783  /   32.743    -     320.8 ms
  26: std::unordered_map       34.086  /   33.935  /   34.163    -     340.8 ms
  27: clark/hashtable          35.622  /   35.490  /   35.714    -     356.2 ms
  28: mct::linked_hash_map     36.920  /   36.640  /   37.078    -     369.2 ms
  29: mct::closed_hash_map     37.697  /   37.348  /   38.070    -     376.9 ms
  30: ulib::open-hash++        40.122  /   40.054  /   40.273    -     401.2 ms
  31: uthash/hashtable         41.660  /   41.508  /   41.935    -     416.6 ms
  32: rigtorp::hashmap         42.279  /   42.066  /   42.480    -     422.8 ms
  33: judy/JSL                 43.610  /   43.400  /   43.918    -     436.1 ms
  34: boost::unordered_map     49.586  /   49.082  /   49.896    -     495.8 ms
  35: hashit/open              58.699  /   58.507  /   58.859    -     587.0 ms
  36: google/c-sparse          62.012  /   61.895  /   62.100    -     620.1 ms
  37: libcfu/hashtable         69.679  /   69.245  /   70.392    -     696.8 ms
  38: google::sparsehash       79.327  /   78.517  /   83.225    -     793.3 ms
  39: oddou::hashmap           83.859  /   83.701  /   84.488    -     838.6 ms
  40: tbb::unordered_map       86.687  /   85.476  /   88.352    -     866.8 ms
  41: stb/sdict                95.814  /   95.440  /   96.360    -     958.1 ms
  42: libdynamic/map          110.167  /  107.594  /  111.223    -       1.1  s
  43: ulib::chain-hash++      201.041  /  195.871  /  228.205    -       2.0  s

Results of test [replace] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              25.673  /   25.529  /   26.112    -     256.7 ms
   2: rdestl::hash_map         26.921  /   26.817  /   26.984    -     269.2 ms
   3: tommyds/dynamic          31.415  /   31.199  /   31.611    -     314.1 ms
   4: libevent/ht              34.119  /   33.888  /   34.535    -     341.2 ms
   5: apr/hashtable            35.012  /   34.857  /   35.110    -     350.1 ms
   6: tommyds/linear           35.529  /   35.206  /   35.791    -     355.3 ms
   7: emilib::HashMap          37.082  /   36.930  /   37.257    -     370.8 ms
   8: amtl::hashmap            37.832  /   37.591  /   38.504    -     378.3 ms
   9: glib/ghash               37.917  /   37.737  /   38.298    -     379.1 ms
  10: gcc/hashtab              38.445  /   38.299  /   38.685    -     384.4 ms
  11: python/hashtable         40.012  /   39.704  /   40.151    -     400.1 ms
  12: libCDS/HashMap           40.754  /   40.486  /   41.182    -     407.5 ms
  13: libghthash/hashtable     44.481  /   44.291  /   44.814    -     444.8 ms
  14: Qt::QHash                44.573  /   43.318  /   51.242    -     445.7 ms
  15: eastl::hashmap           44.802  /   44.522  /   45.009    -     448.0 ms
  16: apr-no-pool/hashtable    45.448  /   45.262  /   45.687    -     454.5 ms
  17: calg/hashtable           46.468  /   46.184  /   46.752    -     464.7 ms
  18: ulib/chain-hash          47.257  /   46.933  /   47.510    -     472.6 ms
  19: google::densehash        47.306  /   47.161  /   47.583    -     473.0 ms
  20: google/c-dense           50.938  /   50.788  /   51.145    -     509.4 ms
  21: ulib/open-hash           52.897  /   52.595  /   53.121    -     529.0 ms
  22: klib/khash               56.745  /   56.534  /   57.038    -     567.4 ms
  23: std::unordered_map       61.013  /   60.883  /   61.128    -     610.1 ms
  24: mct::linked_hash_map     62.510  /   61.871  /   62.911    -     625.1 ms
  25: mct::closed_hash_map     64.025  /   63.705  /   64.247    -     640.2 ms
  26: PeterMoore/st            64.759  /   64.432  /   65.241    -     647.6 ms
  27: ulib::open-hash++        65.415  /   65.167  /   65.669    -     654.1 ms
  28: hashit/chain             66.161  /   65.806  /   66.745    -     661.6 ms
  29: clark/hashtable          67.651  /   67.514  /   67.812    -     676.5 ms
  30: uthash/hashtable         77.748  /   77.239  /   78.054    -     777.5 ms
  31: judy/JSL                 82.533  /   82.230  /   82.698    -     825.3 ms
  32: boost::unordered_map     84.049  /   83.595  /   84.750    -     840.5 ms
  33: rigtorp::hashmap         87.382  /   87.199  /   87.545    -     873.8 ms
  34: oddou::hashmap          102.028  /  101.898  /  102.195    -       1.0  s
  35: google/c-sparse         104.192  /  103.917  /  104.685    -       1.0  s
  36: libcfu/hashtable        112.146  /  111.590  /  112.539    -       1.1  s
  37: tbb::unordered_map      133.620  /  132.713  /  134.347    -       1.3  s
  38: libdynamic/map          158.814  /  157.391  /  167.368    -       1.5  s
  39: google::sparsehash      165.262  /  164.835  /  166.676    -       1.6  s
  40: stb/sdict               173.975  /  173.470  /  174.205    -       1.7  s
  41: hashit/open             223.465  /  222.885  /  224.616    -       2.2  s
  42: ulib::chain-hash++      777.200  /  773.883  /  784.449    -       7.7  s
  43: hashit/overflow         824.886  /  824.237  /  826.495    -       8.2  s

Results of test [kbench] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              16.103  /   16.030  /   16.224    -     161.0 ms
   2: ulib/chain-hash          16.775  /   16.537  /   16.960    -     167.7 ms
   3: rdestl::hash_map         17.452  /   17.408  /   17.546    -     174.5 ms
   4: apr/hashtable            17.595  /   17.543  /   17.676    -     175.9 ms
   5: gcc/hashtab              17.719  /   17.597  /   17.861    -     177.2 ms
   6: glib/ghash               18.879  /   18.840  /   18.928    -     188.8 ms
   7: apr-no-pool/hashtable    19.159  /   19.053  /   19.377    -     191.6 ms
   8: libghthash/hashtable     20.884  /   20.839  /   20.931    -     208.8 ms
   9: emilib::HashMap          21.098  /   21.021  /   21.192    -     211.0 ms
  10: google::densehash        21.660  /   21.544  /   21.846    -     216.6 ms
  11: libevent/ht              22.138  /   21.694  /   22.420    -     221.4 ms
  12: Qt::QHash                23.447  /   23.220  /   23.983    -     234.4 ms
  13: tommyds/dynamic          24.690  /   24.507  /   24.914    -     246.9 ms
  14: amtl::hashmap            25.295  /   24.958  /   25.443    -     252.9 ms
  15: tommyds/linear           26.019  /   25.471  /   28.330    -     260.2 ms
  16: libCDS/HashMap           27.131  /   26.881  /   27.384    -     271.3 ms
  17: eastl::hashmap           28.120  /   28.002  /   28.292    -     281.2 ms
  18: python/hashtable         29.020  /   28.749  /   29.234    -     290.2 ms
  19: PeterMoore/st            29.222  /   29.016  /   29.606    -     292.2 ms
  20: hashit/overflow          29.351  /   29.241  /   29.531    -     293.5 ms
  21: calg/hashtable           29.967  /   29.647  /   30.200    -     299.6 ms
  22: klib/khash               30.074  /   29.860  /   30.371    -     300.7 ms
  23: hashit/chain             32.104  /   31.892  /   32.440    -     321.0 ms
  24: ulib/open-hash           32.505  /   32.288  /   32.736    -     325.0 ms
  25: google/c-dense           32.519  /   32.333  /   33.387    -     325.2 ms
  26: std::unordered_map       35.245  /   35.057  /   35.438    -     352.4 ms
  27: clark/hashtable          36.994  /   36.829  /   37.076    -     369.9 ms
  28: mct::linked_hash_map     37.359  /   36.815  /   38.073    -     373.6 ms
  29: mct::closed_hash_map     39.250  /   38.247  /   39.586    -     392.5 ms
  30: uthash/hashtable         42.170  /   42.037  /   42.513    -     421.7 ms
  31: rigtorp::hashmap         43.232  /   43.146  /   43.371    -     432.3 ms
  32: judy/JSL                 47.247  /   46.939  /   47.647    -     472.4 ms
  33: boost::unordered_map     47.287  /   47.096  /   47.493    -     472.8 ms
  34: ulib::open-hash++        49.918  /   49.609  /   50.047    -     499.2 ms
  35: hashit/open              63.472  /   63.005  /   63.969    -     634.7 ms
  36: google/c-sparse          67.039  /   66.713  /   67.374    -     670.4 ms
  37: libcfu/hashtable         74.320  /   73.817  /   74.974    -     743.2 ms
  38: oddou::hashmap           89.886  /   89.758  /   90.177    -     898.8 ms
  39: google::sparsehash       92.388  /   92.241  /   92.736    -     923.9 ms
  40: tbb::unordered_map       96.732  /   95.848  /   97.894    -     967.3 ms
  41: libdynamic/map           99.849  /   99.623  /  100.049    -     998.5 ms
  42: stb/sdict               101.685  /  101.298  /  102.548    -       1.0  s
  43: ulib::chain-hash++      335.324  /  323.735  /  341.872    -       3.3  s
