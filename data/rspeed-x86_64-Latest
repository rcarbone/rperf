Linux nuc 3.2.0-4-amd64 #1 SMP Debian 3.2.88-1 x86_64

Evaluate average wall-time elapsed repeating 10 times the same test with 100000 items per test

Tests to run: 6 over 41 implementations
  1: grow    (Add items to an empty container)
  2: hit     (Find existing items            )
  3: miss    (Search non existing items      )
  4: delete  (Delete existing items          )
  5: replace (Replace existing items         )
  6: kbench  (Delete if found, add otherwise )

To run #10 times each with #100000 items
[1] Running grow ...... Done! over #41 implementations - Elapsed   9.4  s
[2] Running hit ....... Done! over #41 implementations - Elapsed  14.2  s
[3] Running miss ...... Done! over #41 implementations - Elapsed  13.2  s
[4] Running delete .... Done! over #41 implementations - Elapsed  14.8  s
[5] Running replace ... Done! over #41 implementations - Elapsed  39.0  s
[6] Running kbench .... Done! over #41 implementations - Elapsed  17.1  s

                              H a l l   o f   F a m e

Results of test [grow] - 1e1 items (100000 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable               6.283  /    6.241  /    6.432    -      62.8 ms
   2: gcc/hashtab               7.288  /    7.219  /    7.602    -      72.8 ms
   3: glib/ghash                8.974  /    8.934  /    9.065    -      89.7 ms
   4: hashit/overflow          10.020  /    9.787  /   10.557    -     100.2 ms
   5: tommyds/dynamic          10.574  /   10.485  /   10.797    -     105.7 ms
   6: tommyds/linear           10.752  /   10.699  /   10.796    -     107.5 ms
   7: libevent/ht              10.964  /   10.838  /   11.291    -     109.6 ms
   8: hashit/open              11.888  /   11.629  /   12.239    -     118.9 ms
   9: rdestl::hash_map         12.710  /   11.673  /   13.057    -     127.1 ms
  10: ulib/chain-hash          14.216  /   14.003  /   15.847    -     142.1 ms
  11: emilib::HashMap          14.500  /   14.436  /   14.577    -     145.0 ms
  12: google::densehash        14.511  /   14.410  /   14.650    -     145.1 ms
  13: amtl::hashmap            14.530  /   13.259  /   14.874    -     145.3 ms
  14: google/c-dense           14.693  /   14.610  /   15.037    -     146.9 ms
  15: libghthash/hashtable     18.100  /   17.961  /   18.689    -     181.0 ms
  16: klib/khash               19.301  /   19.163  /   19.521    -     193.0 ms
  17: apr/hashtable            19.583  /   19.440  /   19.690    -     195.8 ms
  18: Qt::QHash                21.521  /   20.864  /   24.054    -     215.2 ms
  19: ulib/open-hash           22.402  /   22.310  /   22.465    -     224.0 ms
  20: PeterMoore/st            22.593  /   22.450  /   23.203    -     225.9 ms
  21: python/hashtable         22.636  /   22.472  /   23.216    -     226.3 ms
  22: libCDS/HashMap           23.285  /   23.217  /   23.364    -     232.8 ms
  23: calg/hashtable           23.511  /   23.466  /   23.621    -     235.1 ms
  24: uthash/hashtable         23.568  /   23.423  /   24.326    -     235.7 ms
  25: hashit/chain             23.573  /   23.337  /   23.740    -     235.7 ms
  26: eastl::hashmap           23.712  /   23.472  /   23.914    -     237.1 ms
  27: mct::closed_hash_map     24.735  /   24.479  /   25.495    -     247.3 ms
  28: rigtorp::hashmap         25.000  /   24.844  /   25.692    -     250.0 ms
  29: std::unordered_map       25.035  /   24.713  /   25.316    -     250.3 ms
  30: mct::linked_hash_map     25.767  /   24.791  /   33.402    -     257.6 ms
  31: apr-no-pool/hashtable    26.252  /   26.124  /   26.918    -     262.5 ms
  32: clark/hashtable          27.932  /   27.648  /   28.097    -     279.3 ms
  33: ulib::open-hash++        30.197  /   30.169  /   30.264    -     301.9 ms
  34: ulib::chain-hash++       30.294  /   26.085  /   32.048    -     302.9 ms
  35: stb/sdict                30.440  /   30.025  /   32.513    -     304.4 ms
  36: boost::unordered_map     31.074  /   30.652  /   31.273    -     310.7 ms
  37: tbb::unordered_map       39.169  /   38.412  /   40.980    -     391.7 ms
  38: google/c-sparse          40.762  /   40.632  /   41.020    -     407.6 ms
  39: oddou::hashmap           51.402  /   51.048  /   53.496    -     514.0 ms
  40: google::sparsehash       52.721  /   52.598  /   52.902    -     527.2 ms
  41: libcfu/hashtable         62.841  /   62.304  /   63.503    -     628.4 ms

Results of test [hit] - 1e1 items (100000 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              11.070  /   11.036  /   11.172    -     110.7 ms
   2: glib/ghash               14.144  /   14.064  /   14.209    -     141.4 ms
   3: gcc/hashtab              15.673  /   15.602  /   15.832    -     156.7 ms
   4: libevent/ht              16.357  /   16.307  /   16.398    -     163.5 ms
   5: tommyds/dynamic          17.333  /   17.263  /   17.624    -     173.3 ms
   6: rdestl::hash_map         18.186  /   16.582  /   18.457    -     181.8 ms
   7: ulib/chain-hash          18.646  /   18.515  /   19.012    -     186.4 ms
   8: tommyds/linear           18.756  /   18.628  /   18.924    -     187.5 ms
   9: google::densehash        19.048  /   18.886  /   19.793    -     190.5 ms
  10: emilib::HashMap          19.488  /   19.381  /   19.682    -     194.8 ms
  11: hashit/overflow          20.882  /   20.689  /   21.658    -     208.8 ms
  12: amtl::hashmap            21.418  /   20.088  /   21.839    -     214.2 ms
  13: google/c-dense           23.177  /   22.768  /   25.300    -     231.7 ms
  14: libghthash/hashtable     23.885  /   23.692  /   24.269    -     238.8 ms
  15: apr/hashtable            24.804  /   24.652  /   24.978    -     248.0 ms
  16: hashit/open              25.533  /   25.283  /   26.274    -     255.3 ms
  17: Qt::QHash                26.470  /   26.336  /   27.040    -     264.7 ms
  18: python/hashtable         26.878  /   26.787  /   27.306    -     268.8 ms
  19: libCDS/HashMap           28.138  /   27.952  /   28.626    -     281.4 ms
  20: calg/hashtable           28.363  /   28.245  /   28.649    -     283.6 ms
  21: eastl::hashmap           29.000  /   28.919  /   29.184    -     290.0 ms
  22: PeterMoore/st            29.215  /   28.842  /   31.164    -     292.1 ms
  23: ulib/open-hash           30.191  /   29.319  /   32.538    -     301.9 ms
  24: mct::closed_hash_map     30.423  /   30.208  /   30.666    -     304.2 ms
  25: klib/khash               31.003  /   30.872  /   31.061    -     310.0 ms
  26: apr-no-pool/hashtable    31.995  /   31.812  /   32.459    -     319.9 ms
  27: mct::linked_hash_map     32.233  /   29.109  /   33.014    -     322.3 ms
  28: std::unordered_map       33.007  /   32.765  /   33.865    -     330.0 ms
  29: rigtorp::hashmap         33.561  /   33.396  /   33.663    -     335.6 ms
  30: hashit/chain             35.909  /   33.944  /   36.653    -     359.1 ms
  31: uthash/hashtable         36.477  /   36.200  /   36.925    -     364.7 ms
  32: clark/hashtable          36.990  /   36.659  /   37.471    -     369.9 ms
  33: boost::unordered_map     40.562  /   40.067  /   42.820    -     405.6 ms
  34: stb/sdict                44.276  /   44.105  /   44.512    -     442.7 ms
  35: ulib::open-hash++        44.898  /   44.525  /   46.302    -     449.0 ms
  36: google/c-sparse          46.783  /   46.644  /   47.187    -     467.8 ms
  37: oddou::hashmap           59.103  /   58.980  /   59.297    -     591.0 ms
  38: tbb::unordered_map       60.759  /   60.521  /   61.427    -     607.6 ms
  39: google::sparsehash       70.915  /   70.739  /   71.383    -     709.1 ms
  40: libcfu/hashtable         76.096  /   75.593  /   76.838    -     760.9 ms
  41: ulib::chain-hash++      178.208  /  171.009  /  182.134    -       1.7  s

Results of test [miss] - 1e1 items (100000 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              11.265  /   11.177  /   11.412    -     112.6 ms
   2: glib/ghash               15.872  /   15.779  /   15.956    -     158.7 ms
   3: libevent/ht              17.257  /   17.185  /   17.527    -     172.5 ms
   4: gcc/hashtab              17.623  /   17.535  /   17.855    -     176.2 ms
   5: rdestl::hash_map         17.738  /   16.896  /   17.912    -     177.4 ms
   6: google::densehash        18.516  /   18.403  /   18.639    -     185.1 ms
   7: tommyds/dynamic          18.636  /   18.473  /   18.864    -     186.3 ms
   8: emilib::HashMap          19.204  /   19.089  /   19.627    -     192.0 ms
   9: tommyds/linear           20.074  /   19.978  /   20.262    -     200.7 ms
  10: ulib/chain-hash          20.111  /   20.037  /   20.312    -     201.1 ms
  11: amtl::hashmap            20.945  /   19.612  /   21.583    -     209.4 ms
  12: hashit/overflow          22.823  /   22.578  /   23.430    -     228.2 ms
  13: ulib::chain-hash++       23.106  /   21.759  /   25.983    -     231.0 ms
  14: libghthash/hashtable     24.015  /   23.941  /   24.087    -     240.1 ms
  15: google/c-dense           24.121  /   23.914  /   24.613    -     241.2 ms
  16: apr/hashtable            25.125  /   24.836  /   25.303    -     251.2 ms
  17: python/hashtable         27.391  /   27.050  /   29.411    -     273.9 ms
  18: libCDS/HashMap           28.779  /   28.678  /   28.934    -     287.8 ms
  19: eastl::hashmap           29.798  /   29.604  /   30.565    -     298.0 ms
  20: calg/hashtable           30.162  /   29.995  /   30.497    -     301.6 ms
  21: Qt::QHash                30.320  /   30.009  /   31.023    -     303.2 ms
  22: ulib/open-hash           30.631  /   30.208  /   30.875    -     306.3 ms
  23: PeterMoore/st            31.069  /   29.892  /   38.750    -     310.7 ms
  24: mct::closed_hash_map     31.256  /   31.144  /   31.397    -     312.5 ms
  25: apr-no-pool/hashtable    31.537  /   31.454  /   31.725    -     315.3 ms
  26: ulib::open-hash++        31.572  /   31.488  /   31.925    -     315.7 ms
  27: mct::linked_hash_map     32.764  /   30.722  /   33.947    -     327.6 ms
  28: std::unordered_map       35.683  /   35.467  /   35.997    -     356.8 ms
  29: clark/hashtable          36.676  /   36.274  /   38.869    -     366.7 ms
  30: hashit/chain             37.227  /   36.987  /   37.535    -     372.2 ms
  31: hashit/open              37.325  /   37.063  /   38.251    -     373.2 ms
  32: rigtorp::hashmap         38.537  /   38.428  /   38.808    -     385.3 ms
  33: uthash/hashtable         38.552  /   38.194  /   39.180    -     385.5 ms
  34: boost::unordered_map     43.137  /   42.572  /   43.594    -     431.3 ms
  35: google/c-sparse          45.634  /   45.301  /   47.256    -     456.3 ms
  36: klib/khash               46.709  /   46.169  /   47.843    -     467.1 ms
  37: stb/sdict                47.431  /   47.112  /   47.953    -     474.3 ms
  38: oddou::hashmap           60.725  /   60.579  /   60.972    -     607.2 ms
  39: google::sparsehash       65.325  /   65.168  /   65.721    -     653.2 ms
  40: tbb::unordered_map       65.696  /   64.993  /   66.543    -     656.9 ms
  41: libcfu/hashtable         74.405  /   73.445  /   75.348    -     744.0 ms

Results of test [delete] - 1e1 items (100000 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              12.534  /   12.411  /   13.484    -     125.3 ms
   2: gcc/hashtab              13.516  /   13.397  /   14.020    -     135.1 ms
   3: ulib/chain-hash          14.845  /   14.790  /   14.955    -     148.4 ms
   4: glib/ghash               15.268  /   15.195  /   15.435    -     152.7 ms
   5: apr/hashtable            16.181  /   16.015  /   16.415    -     161.8 ms
   6: apr-no-pool/hashtable    17.101  /   16.836  /   17.912    -     171.0 ms
   7: rdestl::hash_map         18.042  /   16.541  /   18.364    -     180.4 ms
   8: tommyds/dynamic          18.065  /   17.937  /   18.256    -     180.6 ms
   9: libevent/ht              18.792  /   18.722  /   18.918    -     187.9 ms
  10: libghthash/hashtable     18.862  /   18.089  /   23.391    -     188.6 ms
  11: emilib::HashMap          18.915  /   18.792  /   19.149    -     189.1 ms
  12: tommyds/linear           19.222  /   19.113  /   19.813    -     192.2 ms
  13: hashit/overflow          19.441  /   19.261  /   19.871    -     194.4 ms
  14: google::densehash        19.683  /   19.624  /   19.814    -     196.8 ms
  15: amtl::hashmap            22.034  /   19.915  /   24.213    -     220.3 ms
  16: hashit/chain             23.552  /   23.390  /   23.732    -     235.5 ms
  17: libCDS/HashMap           24.343  /   24.094  /   25.812    -     243.4 ms
  18: eastl::hashmap           25.132  /   25.002  /   25.241    -     251.3 ms
  19: klib/khash               25.316  /   25.184  /   25.605    -     253.1 ms
  20: python/hashtable         25.568  /   25.332  /   26.295    -     255.6 ms
  21: calg/hashtable           25.604  /   25.384  /   26.215    -     256.0 ms
  22: PeterMoore/st            25.841  /   25.715  /   25.928    -     258.4 ms
  23: Qt::QHash                26.492  /   26.034  /   27.621    -     264.9 ms
  24: ulib/open-hash           27.943  /   27.752  /   28.275    -     279.4 ms
  25: google/c-dense           29.911  /   29.830  /   30.115    -     299.1 ms
  26: mct::closed_hash_map     30.729  /   30.553  /   31.187    -     307.3 ms
  27: clark/hashtable          31.443  /   30.884  /   34.140    -     314.4 ms
  28: std::unordered_map       32.794  /   32.715  /   32.948    -     327.9 ms
  29: mct::linked_hash_map     34.155  /   32.536  /   34.837    -     341.5 ms
  30: uthash/hashtable         35.309  /   35.107  /   35.482    -     353.1 ms
  31: ulib::open-hash++        38.710  /   38.665  /   38.758    -     387.1 ms
  32: rigtorp::hashmap         39.702  /   39.442  /   41.020    -     397.0 ms
  33: boost::unordered_map     42.588  /   42.229  /   42.993    -     425.9 ms
  34: hashit/open              48.664  /   48.146  /   49.897    -     486.6 ms
  35: google/c-sparse          61.906  /   61.741  /   62.182    -     619.0 ms
  36: libcfu/hashtable         64.069  /   63.802  /   64.377    -     640.7 ms
  37: google::sparsehash       71.244  /   71.151  /   71.423    -     712.4 ms
  38: oddou::hashmap           82.733  /   82.593  /   83.099    -     827.3 ms
  39: tbb::unordered_map       85.486  /   85.011  /   86.786    -     854.8 ms
  40: stb/sdict                94.532  /   94.233  /   95.164    -     945.3 ms
  41: ulib::chain-hash++      165.829  /  163.205  /  168.788    -       1.6  s

Results of test [replace] - 1e1 items (100000 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              24.385  /   24.333  /   24.464    -     243.8 ms
   2: tommyds/dynamic          29.174  /   28.978  /   30.170    -     291.7 ms
   3: rdestl::hash_map         29.494  /   29.313  /   29.699    -     294.9 ms
   4: libevent/ht              30.637  /   30.451  /   30.915    -     306.3 ms
   5: tommyds/linear           32.906  /   32.810  /   33.136    -     329.0 ms
   6: apr/hashtable            33.040  /   32.824  /   33.147    -     330.4 ms
   7: gcc/hashtab              34.950  /   34.761  /   35.472    -     349.5 ms
   8: emilib::HashMap          35.995  /   35.840  /   36.404    -     359.9 ms
   9: amtl::hashmap            37.235  /   35.629  /   38.122    -     372.3 ms
  10: glib/ghash               37.724  /   37.479  /   37.985    -     377.2 ms
  11: python/hashtable         38.941  /   38.478  /   39.968    -     389.4 ms
  12: Qt::QHash                39.717  /   39.362  /   40.074    -     397.2 ms
  13: libCDS/HashMap           39.762  /   39.567  /   40.265    -     397.6 ms
  14: ulib/chain-hash          40.851  /   40.477  /   41.102    -     408.5 ms
  15: apr-no-pool/hashtable    42.339  /   42.108  /   42.717    -     423.4 ms
  16: libghthash/hashtable     42.704  /   42.229  /   45.371    -     427.0 ms
  17: eastl::hashmap           43.249  /   43.130  /   43.535    -     432.5 ms
  18: calg/hashtable           43.845  /   43.343  /   45.130    -     438.4 ms
  19: ulib/open-hash           46.329  /   46.205  /   46.643    -     463.3 ms
  20: klib/khash               49.199  /   49.031  /   49.513    -     492.0 ms
  21: google::densehash        49.707  /   47.901  /   50.278    -     497.0 ms
  22: google/c-dense           53.567  /   51.439  /   54.370    -     535.7 ms
  23: mct::linked_hash_map     58.112  /   56.503  /   59.400    -     581.1 ms
  24: mct::closed_hash_map     58.947  /   56.164  /   59.870    -     589.4 ms
  25: PeterMoore/st            59.072  /   58.592  /   61.573    -     590.7 ms
  26: hashit/chain             59.524  /   58.712  /   60.490    -     595.2 ms
  27: std::unordered_map       60.363  /   60.198  /   60.658    -     603.6 ms
  28: clark/hashtable          63.453  /   62.732  /   63.899    -     634.5 ms
  29: uthash/hashtable         65.214  /   64.462  /   65.977    -     652.1 ms
  30: ulib::open-hash++        65.280  /   64.936  /   66.025    -     652.8 ms
  31: boost::unordered_map     73.074  /   72.553  /   74.187    -     730.7 ms
  32: rigtorp::hashmap         78.974  /   78.714  /   79.886    -     789.7 ms
  33: oddou::hashmap          100.863  /  100.702  /  101.248    -       1.0  s
  34: google/c-sparse         102.061  /  101.569  /  102.646    -       1.0  s
  35: libcfu/hashtable        103.887  /  103.376  /  104.906    -       1.0  s
  36: tbb::unordered_map      132.594  /  132.170  /  133.150    -       1.3  s
  37: google::sparsehash      152.643  /  152.399  /  153.046    -       1.5  s
  38: stb/sdict               162.208  /  161.593  /  162.792    -       1.6  s
  39: hashit/open             193.021  /  191.969  /  194.273    -       1.9  s
  40: ulib::chain-hash++      631.114  /  628.678  /  633.672    -       6.3  s
  41: hashit/overflow         824.771  /  824.066  /  825.627    -       8.2  s

Results of test [kbench] - 1e1 items (100000 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              14.607  /   14.569  /   14.667    -     146.0 ms
   2: ulib/chain-hash          15.452  /   15.107  /   15.659    -     154.5 ms
   3: gcc/hashtab              15.979  /   15.898  /   16.210    -     159.8 ms
   4: apr/hashtable            17.201  /   16.920  /   17.467    -     172.0 ms
   5: glib/ghash               18.387  /   18.345  /   18.449    -     183.8 ms
   6: apr-no-pool/hashtable    18.522  /   18.451  /   18.567    -     185.2 ms
   7: rdestl::hash_map         19.969  /   18.487  /   20.372    -     199.7 ms
   8: libevent/ht              19.978  /   19.903  /   20.122    -     199.8 ms
   9: emilib::HashMap          20.211  /   20.123  /   20.303    -     202.1 ms
  10: libghthash/hashtable     20.702  /   20.510  /   21.953    -     207.0 ms
  11: google::densehash        20.947  /   20.800  /   21.166    -     209.4 ms
  12: Qt::QHash                21.673  /   21.534  /   22.275    -     216.7 ms
  13: tommyds/dynamic          21.881  /   21.830  /   21.931    -     218.8 ms
  14: tommyds/linear           23.287  /   23.200  /   23.452    -     232.8 ms
  15: hashit/overflow          23.843  /   23.611  /   24.482    -     238.4 ms
  16: libCDS/HashMap           25.388  /   25.281  /   25.594    -     253.8 ms
  17: amtl::hashmap            25.484  /   24.723  /   25.802    -     254.8 ms
  18: hashit/chain             25.826  /   25.542  /   26.943    -     258.2 ms
  19: eastl::hashmap           26.171  /   26.110  /   26.358    -     261.7 ms
  20: python/hashtable         26.469  /   26.370  /   26.671    -     264.7 ms
  21: calg/hashtable           27.463  /   27.402  /   27.538    -     274.6 ms
  22: PeterMoore/st            27.734  /   27.638  /   27.848    -     277.3 ms
  23: klib/khash               27.950  /   27.734  /   28.343    -     279.5 ms
  24: ulib/open-hash           30.290  /   29.856  /   30.498    -     302.9 ms
  25: google/c-dense           31.159  /   31.039  /   31.370    -     311.6 ms
  26: std::unordered_map       33.779  /   33.636  /   34.147    -     337.8 ms
  27: mct::closed_hash_map     33.847  /   33.669  /   34.316    -     338.4 ms
  28: clark/hashtable          34.650  /   33.847  /   40.264    -     346.5 ms
  29: mct::linked_hash_map     36.443  /   34.396  /   37.774    -     364.4 ms
  30: uthash/hashtable         37.751  /   37.607  /   38.039    -     377.5 ms
  31: rigtorp::hashmap         40.762  /   40.416  /   42.511    -     407.6 ms
  32: boost::unordered_map     41.695  /   41.211  /   43.552    -     416.9 ms
  33: ulib::open-hash++        48.200  /   47.993  /   48.675    -     482.0 ms
  34: hashit/open              53.205  /   52.839  /   53.660    -     532.0 ms
  35: google/c-sparse          65.666  /   65.249  /   67.297    -     656.6 ms
  36: libcfu/hashtable         68.555  /   68.251  /   68.983    -     685.5 ms
  37: google::sparsehash       84.859  /   84.441  /   85.784    -     848.6 ms
  38: oddou::hashmap           88.689  /   88.504  /   89.174    -     886.9 ms
  39: tbb::unordered_map       96.296  /   95.939  /   96.691    -     962.9 ms
  40: stb/sdict               100.005  /   99.409  /  102.186    -       1.0  s
  41: ulib::chain-hash++      285.192  /  271.409  /  302.268    -       2.8  s
