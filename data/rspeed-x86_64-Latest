Linux nuc 3.2.0-4-amd64 #1 SMP Debian 3.2.88-1 x86_64

Running test [grow]. Please wait ... Done
Running test [hit]. Please wait ... Done
Running test [miss]. Please wait ... Done
Running test [delete]. Please wait ... Done
Running test [replace]. Please wait ... Done
Running test [kbench]. Please wait ... Done

                              H a l l   o f   F a m e

Results of test [grow] - 1e5 items (5 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: glib/ghash               10.411  /   10.355  /   10.443    -      52.0 ms
   2: gcc/hashtab              12.124  /   12.069  /   12.164    -      60.6 ms
   3: hashit/overflow          19.995  /   19.333  /   21.167    -      99.9 ms
   4: ulib/chain-hash          20.290  /   20.203  /   20.349    -     101.4 ms
   5: hashit/open              23.608  /   23.163  /   24.825    -     118.0 ms
   6: ulib::chain-hash++       26.026  /   25.914  /   26.148    -     130.1 ms
   7: apr/hashtable            26.238  /   26.119  /   26.410    -     131.2 ms
   8: hashit/chain             30.540  /   29.801  /   32.821    -     152.7 ms
   9: python/hashtable         33.600  /   33.028  /   34.567    -     168.0 ms
  10: calg/hashtable           34.153  /   34.079  /   34.248    -     170.7 ms
  11: libCDS/HashMap           34.163  /   34.002  /   34.279    -     170.8 ms
  12: clark/hashtable          34.430  /   33.386  /   35.226    -     172.1 ms
  13: rdestl::hash_map         37.369  /   35.632  /   37.846    -     186.8 ms
  14: apr-no-pool/hashtable    38.264  /   38.032  /   38.728    -     191.3 ms
  15: klib/khash               39.763  /   39.587  /   40.108    -     198.8 ms
  16: google/c-dense           43.069  /   42.986  /   43.320    -     215.3 ms
  17: ulib/open-hash           43.657  /   43.506  /   43.892    -     218.2 ms
  18: amtl/hashmap             55.903  /   53.556  /   56.589    -     279.5 ms
  19: std::unordered_map       63.684  /   63.572  /   63.879    -     318.4 ms
  20: google/c-sparse          67.656  /   67.244  /   68.362    -     338.2 ms
  21: mct::closed_hash_map     73.015  /   72.882  /   73.259    -     365.0 ms
  22: boost::unordered_map     74.664  /   74.181  /   75.117    -     373.3 ms
  23: libcfu/hashtable         76.079  /   75.377  /   78.457    -     380.4 ms
  24: rigtorp::hashmap         77.449  /   77.355  /   77.497    -     387.2 ms
  25: mct::linked_hash_map     85.215  /   82.707  /   89.052    -     426.0 ms
  26: ulib::open-hash++        89.935  /   89.858  /   90.146    -     449.6 ms
  27: google::densehash       133.744  /  131.404  /  140.943    -     668.7 ms
  28: google::sparsehash      316.898  /  316.305  /  317.895    -       1.5 s 
  29: oddou::hashmap          646.696  /  646.457  /  647.235    -       3.2 s 

Results of test [hit] - 1e5 items (5 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: glib/ghash               16.298  /   16.239  /   16.351    -      81.5 ms
   2: gcc/hashtab              25.981  /   25.903  /   26.152    -     129.9 ms
   3: ulib/chain-hash          27.232  /   27.194  /   27.281    -     136.1 ms
   4: apr/hashtable            32.882  /   32.817  /   33.015    -     164.4 ms
   5: hashit/overflow          40.567  /   40.269  /   40.944    -     202.8 ms
   6: python/hashtable         41.102  /   40.991  /   41.307    -     205.5 ms
   7: libCDS/HashMap           42.790  /   42.294  /   44.217    -     213.9 ms
   8: calg/hashtable           43.313  /   43.277  /   43.384    -     216.5 ms
   9: apr-no-pool/hashtable    45.680  /   45.591  /   45.817    -     228.4 ms
  10: hashit/open              47.711  /   47.281  /   47.939    -     238.5 ms
  11: clark/hashtable          50.325  /   49.684  /   50.649    -     251.6 ms
  12: rdestl::hash_map         52.187  /   50.779  /   52.596    -     260.9 ms
  13: hashit/chain             53.069  /   52.462  /   53.826    -     265.3 ms
  14: google/c-dense           57.003  /   56.761  /   57.303    -     285.0 ms
  15: ulib/open-hash           57.207  /   57.024  /   57.482    -     286.0 ms
  16: klib/khash               59.103  /   58.839  /   59.387    -     295.5 ms
  17: amtl/hashmap             75.255  /   73.825  /   75.749    -     376.2 ms
  18: google/c-sparse          85.792  /   85.518  /   86.045    -     428.9 ms
  19: libcfu/hashtable         91.413  /   91.246  /   91.612    -     457.0 ms
  20: std::unordered_map       93.448  /   93.162  /   94.001    -     467.2 ms
  21: mct::closed_hash_map     94.859  /   94.638  /   95.196    -     474.3 ms
  22: rigtorp::hashmap         99.880  /   99.719  /  100.261    -     499.4 ms
  23: mct::linked_hash_map    104.753  /  101.688  /  107.024    -     523.7 ms
  24: boost::unordered_map    108.718  /  108.157  /  109.124    -     543.6 ms
  25: ulib::open-hash++       126.005  /  125.521  /  127.235    -     630.0 ms
  26: google::densehash       185.453  /  180.848  /  203.242    -     927.2 ms
  27: ulib::chain-hash++      204.792  /  203.718  /  206.708    -       1.0 s 
  28: google::sparsehash      495.371  /  495.104  /  495.845    -       2.4 s 
  29: oddou::hashmap          710.506  /  708.777  /  715.074    -       3.5 s 

Results of test [miss] - 1e5 items (5 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: glib/ghash               17.821  /   17.781  /   17.874    -      89.1 ms
   2: ulib::chain-hash++       28.491  /   28.202  /   29.222    -     142.4 ms
   3: ulib/chain-hash          29.472  /   29.238  /   30.323    -     147.3 ms
   4: gcc/hashtab              29.491  /   29.197  /   30.245    -     147.4 ms
   5: apr/hashtable            33.511  /   33.338  /   33.786    -     167.5 ms
   6: python/hashtable         40.510  /   40.420  /   40.670    -     202.5 ms
   7: hashit/overflow          43.512  /   42.526  /   45.035    -     217.5 ms
   8: libCDS/HashMap           43.682  /   43.161  /   45.312    -     218.4 ms
   9: calg/hashtable           43.931  /   43.774  /   44.241    -     219.6 ms
  10: apr-no-pool/hashtable    45.869  /   45.744  /   46.074    -     229.3 ms
  11: clark/hashtable          50.241  /   49.480  /   50.930    -     251.2 ms
  12: rdestl::hash_map         51.288  /   50.567  /   51.575    -     256.4 ms
  13: hashit/chain             58.298  /   57.563  /   59.711    -     291.5 ms
  14: google/c-dense           58.387  /   58.240  /   58.788    -     291.9 ms
  15: ulib/open-hash           58.549  /   58.438  /   58.730    -     292.7 ms
  16: hashit/open              67.386  /   66.845  /   69.082    -     336.9 ms
  17: amtl/hashmap             78.755  /   72.256  /   92.641    -     393.7 ms
  18: google/c-sparse          80.213  /   80.099  /   80.436    -     401.0 ms
  19: klib/khash               83.474  /   83.107  /   84.151    -     417.3 ms
  20: std::unordered_map       91.793  /   91.525  /   92.295    -     458.9 ms
  21: libcfu/hashtable         92.134  /   91.641  /   92.800    -     460.6 ms
  22: ulib::open-hash++        94.971  /   94.840  /   95.164    -     474.8 ms
  23: mct::closed_hash_map     98.587  /   97.728  /  101.048    -     492.9 ms
  24: mct::linked_hash_map    106.743  /  102.061  /  108.696    -     533.7 ms
  25: boost::unordered_map    111.667  /  111.043  /  112.124    -     558.3 ms
  26: rigtorp::hashmap        114.674  /  114.531  /  114.853    -     573.3 ms
  27: google::densehash       158.574  /  158.281  /  158.751    -     792.8 ms
  28: google::sparsehash      466.346  /  465.427  /  467.475    -       2.3 s 
  29: oddou::hashmap          744.587  /  744.313  /  745.163    -       3.7 s 

Results of test [delete] - 1e5 items (5 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: glib/ghash               17.046  /   17.005  /   17.175    -      85.2 ms
   2: apr/hashtable            19.841  /   19.704  /   20.051    -      99.2 ms
   3: gcc/hashtab              22.843  /   22.809  /   22.906    -     114.2 ms
   4: ulib/chain-hash          23.110  /   23.035  /   23.147    -     115.5 ms
   5: apr-no-pool/hashtable    27.627  /   27.476  /   27.841    -     138.1 ms
   6: hashit/overflow          38.003  /   37.727  /   38.391    -     190.0 ms
   7: hashit/chain             38.285  /   38.184  /   38.401    -     191.4 ms
   8: libCDS/HashMap           38.634  /   38.535  /   38.771    -     193.1 ms
   9: calg/hashtable           39.784  /   39.708  /   39.890    -     198.9 ms
  10: python/hashtable         42.602  /   42.328  /   42.955    -     213.0 ms
  11: clark/hashtable          46.222  /   46.136  /   46.399    -     231.1 ms
  12: klib/khash               50.820  /   50.418  /   51.092    -     254.1 ms
  13: ulib/open-hash           54.082  /   53.978  /   54.325    -     270.4 ms
  14: rdestl::hash_map         58.260  /   56.010  /   62.836    -     291.3 ms
  15: google/c-dense           78.642  /   78.415  /   78.878    -     393.2 ms
  16: amtl/hashmap             79.259  /   77.822  /   79.653    -     396.3 ms
  17: libcfu/hashtable         80.017  /   79.457  /   80.886    -     400.0 ms
  18: hashit/open              88.925  /   88.512  /   89.553    -     444.6 ms
  19: std::unordered_map       90.999  /   90.483  /   92.580    -     455.0 ms
  20: mct::closed_hash_map     94.400  /   93.912  /   95.324    -     472.0 ms
  21: mct::linked_hash_map     97.842  /   95.418  /   98.674    -     489.2 ms
  22: boost::unordered_map    102.232  /  101.527  /  104.100    -     511.1 ms
  23: ulib::open-hash++       111.504  /  110.707  /  113.882    -     557.5 ms
  24: google/c-sparse         113.207  /  113.040  /  113.482    -     566.0 ms
  25: rigtorp::hashmap        130.342  /  130.142  /  130.875    -     651.7 ms
  26: ulib::chain-hash++      182.154  /  180.378  /  184.533    -     910.7 ms
  27: google::densehash       199.604  /  199.422  /  199.921    -     998.0 ms
  28: google::sparsehash      563.784  /  560.786  /  572.827    -       2.8 s 
  29: oddou::hashmap         1068.769  / 1068.260  / 1070.384    -       5.3 s 

Results of test [replace] - 1e5 items (5 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: glib/ghash               41.670  /   41.466  /   42.121    -     208.3 ms
   2: apr/hashtable            50.390  /   48.218  /   55.057    -     251.9 ms
   3: gcc/hashtab              62.336  /   62.162  /   62.488    -     311.6 ms
   4: ulib/chain-hash          65.093  /   64.976  /   65.358    -     325.4 ms
   5: python/hashtable         66.344  /   65.659  /   68.273    -     331.7 ms
   6: libCDS/HashMap           66.836  /   66.624  /   67.136    -     334.1 ms
   7: apr-no-pool/hashtable    69.304  /   69.219  /   69.421    -     346.5 ms
   8: calg/hashtable           70.207  /   69.513  /   71.622    -     351.0 ms
   9: clark/hashtable          91.547  /   90.985  /   92.974    -     457.7 ms
  10: rdestl::hash_map         97.365  /   95.823  /   97.881    -     486.8 ms
  11: hashit/chain             97.487  /   96.284  /   98.615    -     487.4 ms
  12: ulib/open-hash           97.826  /   97.415  /   98.768    -     489.1 ms
  13: klib/khash              101.651  /  101.207  /  101.989    -     508.2 ms
  14: amtl/hashmap            128.375  /  128.078  /  128.905    -     641.8 ms
  15: libcfu/hashtable        135.372  /  127.242  /  153.973    -     676.8 ms
  16: google/c-dense          135.417  /  133.783  /  136.639    -     677.1 ms
  17: ulib::open-hash++       190.391  /  189.872  /  192.208    -     951.9 ms
  18: mct::closed_hash_map    192.150  /  189.562  /  193.126    -     960.7 ms
  19: mct::linked_hash_map    193.532  /  191.191  /  195.139    -     967.6 ms
  20: google/c-sparse         195.157  /  194.892  /  195.678    -     975.8 ms
  21: std::unordered_map      195.528  /  186.467  /  208.456    -     977.6 ms
  22: boost::unordered_map    213.030  /  212.145  /  213.961    -       1.0 s 
  23: rigtorp::hashmap        279.611  /  279.341  /  280.028    -       1.3 s 
  24: hashit/open             348.842  /  348.180  /  349.686    -       1.7 s 
  25: google::densehash       536.057  /  534.767  /  536.575    -       2.6 s 
  26: ulib::chain-hash++      612.724  /  610.765  /  615.090    -       3.0 s 
  27: google::sparsehash     1279.115  / 1274.508  / 1289.275    -       6.3 s 
  28: oddou::hashmap         1282.721  / 1281.926  / 1284.476    -       6.4 s 
  29: hashit/overflow        2070.144  / 2058.536  / 2099.227    -      10.3 s 

Results of test [kbench] - 1e5 items (5 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: glib/ghash               20.834  /   20.635  /   21.545    -     104.1 ms
   2: apr/hashtable            23.461  /   23.278  /   23.710    -     117.3 ms
   3: ulib/chain-hash          28.065  /   27.919  /   28.185    -     140.3 ms
   4: gcc/hashtab              30.267  /   29.899  /   31.232    -     151.3 ms
   5: apr-no-pool/hashtable    32.666  /   32.617  /   32.769    -     163.3 ms
   6: libCDS/HashMap           43.577  /   43.342  /   44.101    -     217.8 ms
   7: calg/hashtable           45.195  /   45.128  /   45.309    -     225.9 ms
   8: python/hashtable         47.099  /   47.006  /   47.382    -     235.5 ms
   9: hashit/overflow          53.088  /   52.726  /   53.542    -     265.4 ms
  10: clark/hashtable          53.972  /   53.591  /   55.181    -     269.8 ms
  11: hashit/chain             54.076  /   53.411  /   55.393    -     270.3 ms
  12: klib/khash               59.968  /   59.736  /   60.322    -     299.8 ms
  13: rdestl::hash_map         61.568  /   59.978  /   64.035    -     307.8 ms
  14: ulib/open-hash           63.571  /   62.153  /   67.879    -     317.8 ms
  15: libcfu/hashtable         87.817  /   87.040  /   90.050    -     439.0 ms
  16: google/c-dense           90.139  /   87.025  /  100.722    -     450.7 ms
  17: amtl/hashmap             91.804  /   90.387  /   92.469    -     459.0 ms
  18: hashit/open             102.578  /  102.095  /  103.109    -     512.9 ms
  19: std::unordered_map      110.454  /  108.337  /  115.080    -     552.2 ms
  20: mct::linked_hash_map    113.118  /  109.572  /  116.958    -     565.6 ms
  21: mct::closed_hash_map    116.168  /  112.207  /  121.355    -     580.8 ms
  22: boost::unordered_map    126.266  /  122.377  /  134.790    -     631.3 ms
  23: google/c-sparse         137.249  /  126.816  /  146.407    -     686.2 ms
  24: ulib::open-hash++       141.794  /  137.905  /  149.443    -     708.9 ms
  25: rigtorp::hashmap        147.139  /  139.819  /  161.122    -     735.7 ms
  26: google::densehash       254.641  /  252.000  /  263.828    -       1.2 s 
  27: ulib::chain-hash++      279.903  /  274.519  /  285.463    -       1.3 s 
  28: google::sparsehash      813.667  /  770.715  /  860.207    -       4.0 s 
  29: oddou::hashmap         1158.844  / 1143.348  / 1176.768    -       5.7 s 
