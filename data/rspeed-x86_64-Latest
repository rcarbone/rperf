Linux nuc 3.2.0-4-amd64 #1 SMP Debian 3.2.89-2 x86_64

Evaluate average wall-time elapsed repeating 10 times the same test with 100000 items per test

Tests to run: 6 over 44 implementations
  1: grow    (Add items to an empty container)
  2: hit     (Find existing items            )
  3: miss    (Search non existing items      )
  4: delete  (Delete existing items          )
  5: replace (Replace existing items         )
  6: kbench  (Delete if found, add otherwise )

To run #10 times each with #100000 items
[1] Running grow ...... Done! over #44 implementations - Elapsed  14.0  s
[2] Running hit ....... Done! over #44 implementations - Elapsed  17.9  s
[3] Running miss ...... Done! over #44 implementations - Elapsed  15.9  s
[4] Running delete .... Done! over #44 implementations - Elapsed  20.0  s
[5] Running replace ... Done! over #44 implementations - Elapsed  45.4  s
[6] Running kbench .... Done! over #44 implementations - Elapsed  22.1  s

                              H a l l   o f   F a m e

Results of test [grow] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: tommyds/fixed             5.809  /    5.636  /    5.932    -      58.1 ms
   2: glib/ghash                9.686  /    9.629  /    9.870    -      96.8 ms
   3: gcc/hashtab               9.813  /    8.145  /   11.930    -      98.1 ms
   4: ccan/htable              11.442  /    9.313  /   12.573    -     114.4 ms
   5: tommyds/dynamic          12.087  /   11.608  /   12.860    -     120.9 ms
   6: hashit/overflow          12.223  /   11.932  /   12.744    -     122.2 ms
   7: libevent/ht              12.786  /   11.668  /   14.925    -     127.8 ms
   8: tommyds/linear           13.189  /   12.138  /   15.773    -     131.9 ms
   9: rdestl::hash_map         14.288  /   11.887  /   19.618    -     142.9 ms
  10: google::densehash        15.041  /   14.870  /   15.427    -     150.4 ms
  11: google/c-dense           16.682  /   16.059  /   19.717    -     166.8 ms
  12: amtl::hashmap            18.159  /   14.136  /   23.202    -     181.6 ms
  13: hashit/open              19.114  /   17.330  /   21.608    -     191.1 ms
  14: apr/hashtable            20.529  /   20.111  /   20.786    -     205.3 ms
  15: ulib/chain-hash          20.948  /   14.058  /   24.975    -     209.5 ms
  16: klib/khash               21.832  /   19.488  /   28.042    -     218.3 ms
  17: emilib::HashMap          22.181  /   18.353  /   30.542    -     221.8 ms
  18: python/hashtable         23.734  /   22.538  /   25.883    -     237.3 ms
  19: libghthash/hashtable     23.798  /   22.031  /   34.870    -     238.0 ms
  20: ulib/open-hash           24.054  /   23.750  /   24.728    -     240.5 ms
  21: PeterMoore/st            24.334  /   24.147  /   24.564    -     243.3 ms
  22: libCDS/HashMap           27.698  /   26.096  /   34.425    -     277.0 ms
  23: std::unordered_map       27.857  /   26.621  /   30.028    -     278.5 ms
  24: calg/hashtable           27.976  /   26.835  /   32.610    -     279.7 ms
  25: mct::closed_hash_map     28.066  /   27.208  /   28.933    -     280.6 ms
  26: apr-no-pool/hashtable    29.795  /   27.787  /   32.712    -     297.9 ms
  27: mct::linked_hash_map     30.978  /   22.150  /   51.529    -     309.8 ms
  28: ulib::chain-hash++       31.147  /   29.541  /   34.673    -     311.5 ms
  29: ulib::open-hash++        31.669  /   30.716  /   34.793    -     316.7 ms
  30: eastl::hashmap           31.680  /   25.588  /   39.744    -     316.8 ms
  31: clark/hashtable          32.068  /   27.312  /   40.201    -     320.7 ms
  32: hashit/chain             33.962  /   27.295  /   45.907    -     339.6 ms
  33: judy/JSL                 34.720  /   27.108  /   49.303    -     347.2 ms
  34: boost::unordered_map     34.913  /   32.156  /   43.066    -     349.1 ms
  35: uthash/hashtable         35.310  /   31.908  /   44.806    -     353.1 ms
  36: rigtorp::hashmap         35.705  /   27.862  /   47.033    -     357.0 ms
  37: Qt::QHash                40.701  /   32.524  /   62.614    -     407.0 ms
  38: google/c-sparse          56.841  /   43.005  /   90.418    -     568.4 ms
  39: tbb::unordered_map       64.085  /   52.970  /   73.887    -     640.9 ms
  40: stb/sdict                66.682  /   56.860  /   83.901    -     666.8 ms
  41: libcfu/hashtable         85.168  /   64.689  /  103.388    -     851.7 ms
  42: google::sparsehash       85.806  /   56.429  /  122.777    -     858.1 ms
  43: libdynamic/map           91.264  /   84.926  /  110.192    -     912.6 ms
  44: oddou::hashmap           92.322  /   63.240  /  111.440    -     923.2 ms

Results of test [hit] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: tommyds/fixed            13.769  /   12.719  /   17.482    -     137.7 ms
   2: glib/ghash               14.593  /   14.035  /   16.379    -     145.9 ms
   3: rdestl::hash_map         15.480  /   15.408  /   15.679    -     154.8 ms
   4: libevent/ht              18.760  /   18.410  /   19.386    -     187.6 ms
   5: emilib::HashMap          18.951  /   18.839  /   19.243    -     189.5 ms
   6: tommyds/linear           19.346  /   18.441  /   22.742    -     193.4 ms
   7: google::densehash        19.353  /   18.944  /   19.944    -     193.5 ms
   8: ulib/chain-hash          19.701  /   18.346  /   23.123    -     197.0 ms
   9: ccan/htable              19.860  /   18.556  /   22.469    -     198.6 ms
  10: tommyds/dynamic          21.056  /   18.247  /   24.962    -     210.6 ms
  11: amtl::hashmap            21.709  /   19.107  /   28.185    -     217.1 ms
  12: gcc/hashtab              21.796  /   19.838  /   25.044    -     218.0 ms
  13: hashit/overflow          22.766  /   21.414  /   27.831    -     227.6 ms
  14: libghthash/hashtable     25.279  /   23.554  /   28.142    -     252.8 ms
  15: apr/hashtable            25.600  /   24.591  /   32.365    -     256.0 ms
  16: hashit/open              26.020  /   25.642  /   27.142    -     260.2 ms
  17: google/c-dense           28.665  /   25.383  /   34.871    -     286.6 ms
  18: libCDS/HashMap           29.221  /   28.948  /   29.814    -     292.2 ms
  19: ulib/open-hash           30.375  /   29.583  /   35.874    -     303.7 ms
  20: eastl::hashmap           30.384  /   29.523  /   34.288    -     303.8 ms
  21: klib/khash               31.440  /   31.188  /   31.614    -     314.4 ms
  22: calg/hashtable           31.865  /   30.185  /   34.296    -     318.6 ms
  23: std::unordered_map       33.370  /   32.751  /   34.192    -     333.7 ms
  24: judy/JSL                 33.449  /   29.506  /   47.219    -     334.5 ms
  25: mct::closed_hash_map     33.893  /   30.731  /   46.270    -     338.9 ms
  26: rigtorp::hashmap         34.166  /   33.335  /   39.049    -     341.6 ms
  27: mct::linked_hash_map     34.422  /   30.119  /   41.345    -     344.2 ms
  28: PeterMoore/st            35.886  /   31.185  /   44.436    -     358.9 ms
  29: clark/hashtable          36.166  /   36.031  /   36.428    -     361.6 ms
  30: hashit/chain             37.244  /   36.080  /   40.346    -     372.4 ms
  31: uthash/hashtable         37.344  /   36.963  /   38.579    -     373.4 ms
  32: Qt::QHash                38.069  /   32.870  /   49.814    -     380.7 ms
  33: boost::unordered_map     41.927  /   40.882  /   45.462    -     419.2 ms
  34: python/hashtable         44.390  /   29.573  /   65.975    -     443.9 ms
  35: ulib::open-hash++        49.130  /   46.018  /   61.309    -     491.3 ms
  36: apr-no-pool/hashtable    53.890  /   49.416  /   61.870    -     538.9 ms
  37: oddou::hashmap           63.076  /   60.035  /   74.076    -     630.7 ms
  38: tbb::unordered_map       63.796  /   60.188  /   77.020    -     637.9 ms
  39: google/c-sparse          65.276  /   52.311  /   97.780    -     652.8 ms
  40: google::sparsehash       74.550  /   71.312  /   78.019    -     745.5 ms
  41: stb/sdict                82.472  /   68.959  /  115.812    -     824.7 ms
  42: libcfu/hashtable         86.208  /   82.380  /   94.255    -     862.1 ms
  43: libdynamic/map          119.288  /   93.084  /  140.360    -       1.1  s
  44: ulib::chain-hash++      190.691  /  168.855  /  228.500    -       1.9  s

Results of test [miss] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              12.951  /   12.251  /   14.933    -     129.5 ms
   2: glib/ghash               15.907  /   15.764  /   16.111    -     159.0 ms
   3: rdestl::hash_map         16.940  /   15.266  /   19.990    -     169.4 ms
   4: libevent/ht              18.205  /   17.603  /   19.410    -     182.0 ms
   5: tommyds/dynamic          19.069  /   18.535  /   21.844    -     190.7 ms
   6: emilib::HashMap          19.668  /   19.183  /   21.304    -     196.7 ms
   7: google::densehash        19.692  /   19.039  /   20.517    -     196.9 ms
   8: tommyds/fixed            19.730  /   16.426  /   22.715    -     197.3 ms
   9: amtl::hashmap            20.028  /   18.197  /   24.958    -     200.3 ms
  10: ulib/chain-hash          21.699  /   20.886  /   23.112    -     217.0 ms
  11: gcc/hashtab              22.439  /   20.300  /   26.301    -     224.4 ms
  12: ulib::chain-hash++       23.262  /   20.464  /   29.136    -     232.6 ms
  13: hashit/overflow          23.664  /   23.531  /   23.844    -     236.6 ms
  14: libghthash/hashtable     24.497  /   23.648  /   27.126    -     245.0 ms
  15: tommyds/linear           24.693  /   21.990  /   28.099    -     246.9 ms
  16: apr/hashtable            26.168  /   24.736  /   29.431    -     261.7 ms
  17: python/hashtable         28.911  /   27.981  /   33.992    -     289.1 ms
  18: google/c-dense           29.713  /   29.065  /   30.766    -     297.1 ms
  19: libCDS/HashMap           29.921  /   28.078  /   30.467    -     299.2 ms
  20: judy/JSL                 30.067  /   29.360  /   33.793    -     300.7 ms
  21: apr-no-pool/hashtable    31.537  /   31.350  /   31.746    -     315.3 ms
  22: Qt::QHash                32.341  /   30.094  /   34.659    -     323.4 ms
  23: calg/hashtable           32.536  /   30.998  /   39.673    -     325.3 ms
  24: eastl::hashmap           33.480  /   32.269  /   35.518    -     334.8 ms
  25: ulib::open-hash++        34.317  /   32.536  /   36.720    -     343.2 ms
  26: mct::linked_hash_map     34.500  /   33.608  /   35.142    -     345.0 ms
  27: ulib/open-hash           36.062  /   32.708  /   46.861    -     360.6 ms
  28: mct::closed_hash_map     36.547  /   31.707  /   38.814    -     365.5 ms
  29: clark/hashtable          37.881  /   35.866  /   39.973    -     378.8 ms
  30: std::unordered_map       38.144  /   35.951  /   41.206    -     381.4 ms
  31: hashit/open              39.843  /   38.286  /   42.131    -     398.4 ms
  32: rigtorp::hashmap         40.830  /   39.320  /   43.757    -     408.3 ms
  33: PeterMoore/st            42.850  /   33.379  /   63.590    -     428.5 ms
  34: hashit/chain             46.691  /   41.672  /   60.762    -     466.9 ms
  35: boost::unordered_map     46.748  /   44.552  /   50.290    -     467.5 ms
  36: uthash/hashtable         49.140  /   43.634  /   66.964    -     491.4 ms
  37: klib/khash               49.498  /   46.913  /   53.029    -     495.0 ms
  38: google/c-sparse          50.808  /   48.272  /   59.958    -     508.1 ms
  39: stb/sdict                52.635  /   46.194  /   63.193    -     526.3 ms
  40: oddou::hashmap           67.845  /   61.281  /   82.838    -     678.4 ms
  41: google::sparsehash       68.252  /   65.902  /   73.889    -     682.5 ms
  42: tbb::unordered_map       68.777  /   65.533  /   75.488    -     687.8 ms
  43: libcfu/hashtable         81.949  /   73.525  /   95.365    -     819.5 ms
  44: libdynamic/map           96.982  /   86.582  /  118.860    -     969.8 ms

Results of test [delete] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              14.364  /   13.510  /   15.804    -     143.6 ms
   2: gcc/hashtab              15.039  /   14.754  /   15.759    -     150.4 ms
   3: rdestl::hash_map         15.453  /   15.155  /   16.626    -     154.5 ms
   4: ulib/chain-hash          16.042  /   15.088  /   18.003    -     160.4 ms
   5: glib/ghash               16.274  /   15.417  /   18.489    -     162.7 ms
   6: apr/hashtable            18.351  /   17.195  /   19.494    -     183.5 ms
   7: tommyds/fixed            18.381  /   17.150  /   21.029    -     183.8 ms
   8: tommyds/dynamic          20.131  /   19.888  /   20.967    -     201.3 ms
   9: tommyds/linear           20.923  /   20.556  /   21.700    -     209.2 ms
  10: libevent/ht              20.955  /   20.547  /   21.399    -     209.5 ms
  11: libghthash/hashtable     21.436  /   18.911  /   25.577    -     214.4 ms
  12: emilib::HashMap          24.852  /   20.685  /   29.036    -     248.5 ms
  13: hashit/overflow          26.207  /   22.744  /   33.918    -     262.1 ms
  14: libCDS/HashMap           26.662  /   26.361  /   26.891    -     266.6 ms
  15: klib/khash               27.729  /   26.672  /   30.023    -     277.3 ms
  16: calg/hashtable           28.825  /   27.896  /   30.230    -     288.2 ms
  17: python/hashtable         29.076  /   27.423  /   33.754    -     290.8 ms
  18: google::densehash        29.664  /   25.779  /   32.173    -     296.6 ms
  19: Qt::QHash                29.736  /   28.223  /   34.344    -     297.3 ms
  20: amtl::hashmap            29.882  /   23.135  /   32.448    -     298.8 ms
  21: eastl::hashmap           30.029  /   27.915  /   34.894    -     300.3 ms
  22: apr-no-pool/hashtable    30.220  /   24.115  /   38.696    -     302.2 ms
  23: hashit/chain             32.471  /   29.965  /   34.126    -     324.7 ms
  24: PeterMoore/st            36.339  /   30.620  /   47.060    -     363.4 ms
  25: std::unordered_map       36.368  /   34.207  /   40.737    -     363.7 ms
  26: mct::closed_hash_map     36.550  /   35.891  /   37.180    -     365.5 ms
  27: mct::linked_hash_map     36.615  /   35.826  /   38.407    -     366.1 ms
  28: google/c-dense           38.384  /   36.050  /   43.610    -     383.8 ms
  29: clark/hashtable          38.703  /   35.787  /   45.044    -     387.0 ms
  30: rigtorp::hashmap         40.512  /   39.488  /   43.575    -     405.1 ms
  31: ulib::open-hash++        41.122  /   39.654  /   46.507    -     411.2 ms
  32: uthash/hashtable         42.313  /   41.306  /   43.924    -     423.1 ms
  33: ulib/open-hash           44.265  /   30.683  /   54.434    -     442.6 ms
  34: boost::unordered_map     51.552  /   51.076  /   51.888    -     515.5 ms
  35: hashit/open              57.046  /   56.236  /   57.567    -     570.5 ms
  36: google/c-sparse          71.482  /   65.977  /   79.017    -     714.8 ms
  37: libcfu/hashtable         73.356  /   71.320  /   75.599    -     733.6 ms
  38: google::sparsehash       76.085  /   72.364  /   86.901    -     760.8 ms
  39: judy/JSL                 79.582  /   50.786  /   91.076    -     795.8 ms
  40: oddou::hashmap           87.012  /   84.172  /   99.585    -     870.1 ms
  41: libdynamic/map          100.061  /   92.315  /  113.961    -       1.0  s
  42: stb/sdict               120.274  /  102.694  /  172.875    -       1.2  s
  43: tbb::unordered_map      136.614  /  122.748  /  154.723    -       1.3  s
  44: ulib::chain-hash++      220.085  /  201.230  /  261.140    -       2.2  s

Results of test [replace] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              26.760  /   25.487  /   30.066    -     267.6 ms
   2: rdestl::hash_map         27.182  /   26.073  /   30.190    -     271.8 ms
   3: libevent/ht              33.661  /   33.327  /   34.124    -     336.6 ms
   4: tommyds/fixed            34.031  /   32.826  /   36.324    -     340.3 ms
   5: tommyds/linear           35.444  /   34.911  /   38.565    -     354.4 ms
   6: apr/hashtable            35.791  /   34.581  /   39.342    -     357.9 ms
   7: emilib::HashMap          37.082  /   36.672  /   38.531    -     370.8 ms
   8: amtl::hashmap            37.603  /   36.562  /   39.137    -     376.0 ms
   9: glib/ghash               38.869  /   37.176  /   43.215    -     388.7 ms
  10: gcc/hashtab              41.446  /   39.948  /   43.209    -     414.4 ms
  11: libCDS/HashMap           42.951  /   41.668  /   46.361    -     429.5 ms
  12: python/hashtable         45.978  /   41.215  /   62.270    -     459.8 ms
  13: tommyds/dynamic          46.446  /   41.598  /   56.191    -     464.5 ms
  14: Qt::QHash                47.166  /   40.854  /   56.125    -     471.7 ms
  15: ulib/chain-hash          47.727  /   44.687  /   52.067    -     477.3 ms
  16: calg/hashtable           47.793  /   46.433  /   50.286    -     477.9 ms
  17: ulib/open-hash           49.735  /   49.196  /   52.167    -     497.3 ms
  18: google::densehash        50.145  /   47.730  /   56.781    -     501.4 ms
  19: libghthash/hashtable     50.439  /   47.546  /   59.857    -     504.4 ms
  20: google/c-dense           53.857  /   51.821  /   57.500    -     538.6 ms
  21: apr-no-pool/hashtable    56.229  /   47.087  /   78.750    -     562.3 ms
  22: klib/khash               56.704  /   53.305  /   60.535    -     567.0 ms
  23: mct::closed_hash_map     63.125  /   62.140  /   63.917    -     631.2 ms
  24: eastl::hashmap           63.938  /   47.106  /   81.260    -     639.4 ms
  25: mct::linked_hash_map     64.889  /   61.746  /   73.970    -     648.9 ms
  26: std::unordered_map       67.787  /   65.299  /   73.851    -     677.9 ms
  27: hashit/chain             75.029  /   71.388  /   80.995    -     750.3 ms
  28: clark/hashtable          75.637  /   70.723  /   79.161    -     756.4 ms
  29: PeterMoore/st            77.873  /   65.295  /  107.149    -     778.7 ms
  30: uthash/hashtable         81.135  /   76.461  /   90.500    -     811.3 ms
  31: rigtorp::hashmap         82.984  /   79.457  /   88.951    -     829.8 ms
  32: judy/JSL                 84.378  /   82.426  /   89.589    -     843.8 ms
  33: ulib::open-hash++        85.338  /   71.528  /   92.493    -     853.4 ms
  34: boost::unordered_map     87.068  /   82.883  /   97.608    -     870.7 ms
  35: oddou::hashmap          106.942  /  102.507  /  116.324    -       1.0  s
  36: google/c-sparse         114.903  /  106.157  /  122.745    -       1.1  s
  37: libcfu/hashtable        120.433  /  118.609  /  122.485    -       1.2  s
  38: tbb::unordered_map      150.189  /  136.862  /  167.362    -       1.5  s
  39: libdynamic/map          151.004  /  147.258  /  163.886    -       1.5  s
  40: google::sparsehash      168.444  /  155.063  /  203.115    -       1.6  s
  41: stb/sdict               190.688  /  180.723  /  208.641    -       1.9  s
  42: hashit/open             225.198  /  211.953  /  249.598    -       2.2  s
  43: ulib::chain-hash++      603.380  /  590.141  /  613.162    -       6.0  s
  44: hashit/overflow         862.984  /  833.059  /  904.680    -       8.6  s

Results of test [kbench] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              16.797  /   15.553  /   21.403    -     167.9 ms
   2: rdestl::hash_map         17.416  /   16.654  /   20.734    -     174.1 ms
   3: ulib/chain-hash          17.612  /   16.469  /   18.790    -     176.1 ms
   4: tommyds/fixed            17.641  /   16.656  /   19.872    -     176.4 ms
   5: glib/ghash               18.580  /   18.376  /   19.626    -     185.8 ms
   6: gcc/hashtab              20.612  /   18.197  /   25.746    -     206.1 ms
   7: google::densehash        21.847  /   20.981  /   25.135    -     218.5 ms
   8: apr/hashtable            22.537  /   19.975  /   30.209    -     225.4 ms
   9: libghthash/hashtable     24.949  /   23.672  /   29.605    -     249.5 ms
  10: libevent/ht              26.027  /   23.840  /   29.648    -     260.3 ms
  11: tommyds/dynamic          26.491  /   25.068  /   29.098    -     264.9 ms
  12: Qt::QHash                28.379  /   22.525  /   37.936    -     283.8 ms
  13: PeterMoore/st            28.879  /   28.701  /   29.091    -     288.8 ms
  14: apr-no-pool/hashtable    29.004  /   19.339  /   38.263    -     290.0 ms
  15: emilib::HashMap          29.854  /   26.300  /   39.293    -     298.5 ms
  16: hashit/overflow          29.982  /   27.717  /   34.063    -     299.8 ms
  17: amtl::hashmap            30.101  /   26.471  /   33.300    -     301.0 ms
  18: tommyds/linear           30.147  /   25.334  /   35.554    -     301.5 ms
  19: libCDS/HashMap           30.829  /   29.475  /   36.291    -     308.3 ms
  20: python/hashtable         32.926  /   29.310  /   42.616    -     329.2 ms
  21: klib/khash               33.170  /   28.563  /   46.008    -     331.7 ms
  22: calg/hashtable           33.572  /   31.852  /   38.275    -     335.7 ms
  23: hashit/chain             33.829  /   29.771  /   37.598    -     338.3 ms
  24: eastl::hashmap           34.782  /   27.812  /   45.243    -     347.8 ms
  25: ulib/open-hash           35.269  /   34.133  /   40.498    -     352.7 ms
  26: std::unordered_map       36.991  /   35.117  /   41.339    -     369.9 ms
  27: mct::closed_hash_map     37.364  /   34.565  /   41.697    -     373.6 ms
  28: mct::linked_hash_map     38.639  /   37.713  /   39.543    -     386.4 ms
  29: google/c-dense           42.736  /   37.333  /   54.159    -     427.4 ms
  30: clark/hashtable          45.038  /   41.863  /   48.945    -     450.4 ms
  31: rigtorp::hashmap         46.768  /   42.609  /   52.305    -     467.7 ms
  32: judy/JSL                 47.719  /   47.567  /   48.122    -     477.2 ms
  33: uthash/hashtable         48.549  /   39.547  /   56.535    -     485.5 ms
  34: ulib::open-hash++        56.107  /   51.170  /   60.921    -     561.1 ms
  35: boost::unordered_map     61.142  /   53.147  /   72.065    -     611.4 ms
  36: hashit/open              66.671  /   63.356  /   75.371    -     666.7 ms
  37: libcfu/hashtable         77.945  /   72.541  /   89.346    -     779.4 ms
  38: oddou::hashmap          103.309  /   92.487  /  127.165    -       1.0  s
  39: tbb::unordered_map      104.168  /   97.773  /  124.429    -       1.0  s
  40: google::sparsehash      104.510  /   91.509  /  113.320    -       1.0  s
  41: google/c-sparse         105.662  /   73.921  /  151.899    -       1.0  s
  42: libdynamic/map          111.911  /   96.754  /  148.389    -       1.1  s
  43: stb/sdict               127.249  /  105.838  /  147.844    -       1.2  s
  44: ulib::chain-hash++      280.818  /  263.115  /  304.941    -       2.8  s
