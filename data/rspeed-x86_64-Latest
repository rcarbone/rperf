Linux nuc 3.2.0-4-amd64 #1 SMP Debian 3.2.88-1 x86_64

Running test [grow]. Please wait ... Done
Running test [hit]. Please wait ... Done
Running test [miss]. Please wait ... Done
Running test [delete]. Please wait ... Done
Running test [replace]. Please wait ... Done
Running test [kbench]. Please wait ... Done

                              H a l l   o f   F a m e

Results of test [grow] - 1e5 items (5 loops per test)
      Implementation                -   avg         min         max   ms -   elapsed
   1: glib/ghash                        9.783  /    9.689  /   10.025    -      48.9 ms
   2: gcc/hashtab                      12.251  /   12.205  /   12.331    -      61.2 ms
   3: tommyds/dynamic                  16.537  /   16.349  /   16.681    -      82.6 ms
   4: libevent/ht                      17.178  /   16.829  /   18.114    -      85.9 ms
   5: ccan/htable                      18.047  /   18.024  /   18.108    -      90.2 ms
   6: ulib/chain-hash                  21.539  /   21.444  /   21.820    -     107.7 ms
   7: hashit/overflow                  22.405  /   22.344  /   22.546    -     112.0 ms
   8: hashit/open                      25.103  /   25.021  /   25.174    -     125.5 ms
   9: tommyds/linear                   25.391  /   24.738  /   27.059    -     126.9 ms
  10: Qt::QHash                        27.715  /   27.537  /   27.851    -     138.5 ms
  11: apr/hashtable                    27.876  /   27.608  /   28.267    -     139.3 ms
  12: ulib::chain-hash++               32.076  /   31.808  /   32.540    -     160.3 ms
  13: rdestl::hash_map                 34.361  /   34.212  /   34.549    -     171.8 ms
  14: hashit/chain                     34.390  /   31.864  /   37.398    -     171.9 ms
  15: calg/hashtable                   35.115  /   34.830  /   35.340    -     175.5 ms
  16: uthash/hashtable                 35.241  /   35.065  /   35.534    -     176.2 ms
  17: libCDS/HashMap                   36.107  /   36.017  /   36.195    -     180.5 ms
  18: python/hashtable                 36.197  /   35.918  /   36.592    -     181.0 ms
  19: clark/hashtable                  37.088  /   37.049  /   37.116    -     185.4 ms
  20: klib/khash                       39.611  /   39.487  /   39.768    -     198.0 ms
  21: apr-no-pool/hashtable            41.160  /   41.012  /   41.394    -     205.8 ms
  22: emilib::HashMap                  44.311  /   44.031  /   45.125    -     221.5 ms
  23: ulib/open-hash                   44.476  /   44.332  /   44.828    -     222.3 ms
  24: google/c-dense                   45.759  /   45.627  /   45.900    -     228.8 ms
  25: amtl::hashmap                    53.327  /   52.262  /   54.829    -     266.6 ms
  26: std::unordered_map               66.189  /   65.136  /   67.029    -     330.9 ms
  27: google/c-sparse                  67.477  /   67.001  /   68.297    -     337.3 ms
  28: boost::unordered_map             75.274  /   74.886  /   75.529    -     376.3 ms
  29: rigtorp::hashmap                 77.354  /   77.207  /   77.814    -     386.7 ms
  30: mct::closed_hash_map             78.527  /   78.393  /   78.784    -     392.6 ms
  31: mct::linked_hash_map             79.034  /   78.723  /   79.192    -     395.1 ms
  32: libcfu/hashtable                 83.132  /   82.516  /   83.461    -     415.6 ms
  33: ulib::open-hash++                98.034  /   97.745  /   98.289    -     490.1 ms
  34: tbb::concurrent_unordered_map   112.589  /  112.194  /  113.987    -     562.9 ms
  35: google::densehash               131.097  /  130.948  /  131.513    -     655.4 ms
  36: google::sparsehash              318.402  /  317.782  /  318.724    -       1.5 s 
  37: oddou::hashmap                  646.636  /  646.022  /  647.988    -       3.2 s 

Results of test [hit] - 1e5 items (5 loops per test)
      Implementation                -   avg         min         max   ms -   elapsed
   1: glib/ghash                       23.705  /   22.355  /   24.618    -     118.5 ms
   2: gcc/hashtab                      26.643  /   26.585  /   26.776    -     133.2 ms
   3: ulib/chain-hash                  28.001  /   27.920  /   28.111    -     140.0 ms
   4: libevent/ht                      29.110  /   28.582  /   29.459    -     145.5 ms
   5: tommyds/dynamic                  30.212  /   27.860  /   33.535    -     151.0 ms
   6: ccan/htable                      30.319  /   30.252  /   30.365    -     151.6 ms
   7: apr/hashtable                    34.519  /   34.269  /   34.662    -     172.6 ms
   8: calg/hashtable                   44.544  /   44.392  /   44.695    -     222.7 ms
   9: hashit/overflow                  45.257  /   44.996  /   45.705    -     226.2 ms
  10: tommyds/linear                   45.684  /   39.725  /   50.723    -     228.4 ms
  11: python/hashtable                 47.123  /   43.607  /   59.703    -     235.6 ms
  12: apr-no-pool/hashtable            47.683  /   47.400  /   47.915    -     238.4 ms
  13: libCDS/HashMap                   48.335  /   44.344  /   58.376    -     241.6 ms
  14: clark/hashtable                  54.893  /   54.284  /   55.807    -     274.4 ms
  15: emilib::HashMap                  56.151  /   56.079  /   56.265    -     280.7 ms
  16: Qt::QHash                        58.010  /   54.844  /   69.789    -     290.0 ms
  17: ulib/open-hash                   59.042  /   58.945  /   59.226    -     295.2 ms
  18: hashit/chain                     64.436  /   56.848  /   79.291    -     322.2 ms
  19: hashit/open                      70.258  /   51.065  /   99.205    -     351.3 ms
  20: klib/khash                       72.287  /   60.257  /   96.424    -     361.4 ms
  21: google/c-dense                   72.878  /   68.505  /   81.675    -     364.4 ms
  22: rdestl::hash_map                 73.341  /   52.340  /   79.182    -     366.7 ms
  23: uthash/hashtable                 79.682  /   72.595  /   88.121    -     398.4 ms
  24: google/c-sparse                  85.997  /   85.689  /   86.392    -     430.0 ms
  25: rigtorp::hashmap                 98.084  /   98.001  /   98.197    -     490.4 ms
  26: libcfu/hashtable                101.185  /  100.893  /  101.454    -     505.9 ms
  27: amtl::hashmap                   107.746  /   94.202  /  119.311    -     538.7 ms
  28: std::unordered_map              111.096  /   91.603  /  163.528    -     555.5 ms
  29: ulib::open-hash++               142.053  /  123.314  /  214.858    -     710.2 ms
  30: mct::linked_hash_map            145.610  /  115.346  /  164.357    -     728.0 ms
  31: boost::unordered_map            166.925  /  148.678  /  179.629    -     834.6 ms
  32: mct::closed_hash_map            168.602  /  127.308  /  233.750    -     843.0 ms
  33: tbb::concurrent_unordered_map   178.511  /  178.128  /  178.925    -     892.5 ms
  34: google::densehash               188.763  /  182.034  /  197.734    -     943.8 ms
  35: ulib::chain-hash++              226.123  /  221.147  /  231.700    -       1.1 s 
  36: oddou::hashmap                  709.513  /  708.831  /  710.026    -       3.5 s 
  37: google::sparsehash              726.195  /  505.138  /  889.141    -       3.6 s 

Results of test [miss] - 1e5 items (5 loops per test)
      Implementation                -   avg         min         max   ms -   elapsed
   1: glib/ghash                       19.695  /   17.714  /   23.406    -      98.4 ms
   2: apr/hashtable                    33.607  /   32.344  /   36.909    -     168.0 ms
   3: tommyds/dynamic                  34.709  /   31.737  /   38.774    -     173.5 ms
   4: ulib/chain-hash                  36.809  /   32.237  /   42.048    -     184.0 ms
   5: tommyds/linear                   39.637  /   38.291  /   42.198    -     198.2 ms
   6: ulib::chain-hash++               39.958  /   35.996  /   44.817    -     199.8 ms
   7: python/hashtable                 42.659  /   42.156  /   43.879    -     213.3 ms
   8: libevent/ht                      43.270  /   41.774  /   45.020    -     216.3 ms
   9: gcc/hashtab                      43.509  /   37.897  /   46.362    -     217.5 ms
  10: apr-no-pool/hashtable            48.589  /   47.079  /   50.456    -     242.9 ms
  11: ccan/htable                      50.180  /   46.610  /   54.424    -     250.9 ms
  12: rdestl::hash_map                 51.219  /   48.781  /   60.406    -     256.1 ms
  13: hashit/chain                     56.989  /   56.340  /   58.185    -     284.9 ms
  14: Qt::QHash                        62.335  /   53.487  /   87.441    -     311.6 ms
  15: hashit/overflow                  62.344  /   56.244  /   66.821    -     311.7 ms
  16: calg/hashtable                   65.070  /   56.647  /   70.667    -     325.3 ms
  17: libCDS/HashMap                   65.682  /   60.106  /   70.112    -     328.4 ms
  18: google/c-dense                   65.829  /   65.711  /   66.019    -     329.1 ms
  19: emilib::HashMap                  68.128  /   62.756  /   81.473    -     340.6 ms
  20: uthash/hashtable                 68.183  /   67.788  /   68.349    -     340.9 ms
  21: hashit/open                      71.823  /   71.577  /   72.385    -     359.1 ms
  22: clark/hashtable                  78.330  /   67.635  /   91.589    -     391.6 ms
  23: amtl::hashmap                    88.091  /   72.818  /  108.418    -     440.4 ms
  24: ulib/open-hash                   89.187  /   86.158  /   90.564    -     445.9 ms
  25: std::unordered_map               94.363  /   92.538  /   98.309    -     471.8 ms
  26: mct::linked_hash_map            103.595  /  101.673  /  106.735    -     517.9 ms
  27: boost::unordered_map            112.952  /  112.669  /  113.230    -     564.7 ms
  28: klib/khash                      119.650  /  113.096  /  130.980    -     598.2 ms
  29: ulib::open-hash++               122.983  /  113.208  /  130.699    -     614.9 ms
  30: google/c-sparse                 127.159  /  104.865  /  148.731    -     635.8 ms
  31: rigtorp::hashmap                133.502  /  115.205  /  162.501    -     667.5 ms
  32: mct::closed_hash_map            149.029  /  127.183  /  165.978    -     745.1 ms
  33: libcfu/hashtable                152.082  /  137.242  /  180.261    -     760.4 ms
  34: google::densehash               231.350  /  173.847  /  274.844    -       1.1 s 
  35: tbb::concurrent_unordered_map   269.978  /  197.629  /  334.909    -       1.3 s 
  36: google::sparsehash              469.669  /  467.565  /  472.374    -       2.3 s 
  37: oddou::hashmap                 1092.720  /  846.367  / 1234.726    -       5.4 s 

Results of test [delete] - 1e5 items (5 loops per test)
      Implementation                -   avg         min         max   ms -   elapsed
   1: glib/ghash                       16.872  /   16.799  /   16.978    -      84.3 ms
   2: apr/hashtable                    20.491  /   20.160  /   21.441    -     102.4 ms
   3: gcc/hashtab                      24.014  /   22.977  /   26.572    -     120.0 ms
   4: apr-no-pool/hashtable            29.038  /   28.521  /   30.750    -     145.2 ms
   5: ccan/htable                      29.895  /   29.786  /   30.090    -     149.4 ms
   6: tommyds/dynamic                  34.291  /   34.190  /   34.358    -     171.4 ms
   7: libevent/ht                      38.236  /   34.242  /   47.647    -     191.1 ms
   8: hashit/chain                     39.295  /   38.614  /   41.416    -     196.4 ms
   9: ulib/chain-hash                  39.424  /   34.835  /   54.610    -     197.1 ms
  10: hashit/overflow                  39.942  /   39.391  /   40.645    -     199.7 ms
  11: calg/hashtable                   40.892  /   40.733  /   41.149    -     204.4 ms
  12: libCDS/HashMap                   41.230  /   40.392  /   42.887    -     206.1 ms
  13: Qt::QHash                        44.466  /   44.342  /   44.717    -     222.3 ms
  14: python/hashtable                 45.019  /   44.706  /   45.369    -     225.1 ms
  15: clark/hashtable                  50.740  /   48.890  /   51.635    -     253.7 ms
  16: klib/khash                       52.136  /   51.599  /   53.287    -     260.6 ms
  17: tommyds/linear                   52.951  /   48.250  /   61.369    -     264.7 ms
  18: emilib::HashMap                  53.850  /   53.703  /   54.040    -     269.2 ms
  19: rdestl::hash_map                 55.882  /   47.653  /   69.662    -     279.4 ms
  20: ulib/open-hash                   56.321  /   55.948  /   56.724    -     281.6 ms
  21: uthash/hashtable                 56.560  /   56.224  /   56.924    -     282.8 ms
  22: amtl::hashmap                    78.225  /   77.920  /   79.142    -     391.1 ms
  23: google/c-dense                   83.988  /   83.785  /   84.213    -     419.9 ms
  24: std::unordered_map               88.746  /   87.630  /   90.174    -     443.7 ms
  25: hashit/open                      94.279  /   93.526  /   95.269    -     471.4 ms
  26: mct::closed_hash_map             99.160  /   99.035  /   99.357    -     495.8 ms
  27: boost::unordered_map            102.870  /  101.876  /  105.822    -     514.3 ms
  28: mct::linked_hash_map            105.686  /  101.353  /  113.239    -     528.4 ms
  29: ulib::open-hash++               111.210  /  110.958  /  111.590    -     556.0 ms
  30: google/c-sparse                 141.379  /  134.674  /  150.544    -     706.9 ms
  31: libcfu/hashtable                146.724  /  133.624  /  165.379    -     733.6 ms
  32: rigtorp::hashmap                200.766  /  167.170  /  225.774    -       1.0 s 
  33: google::densehash               206.624  /  199.478  /  215.841    -       1.0 s 
  34: ulib::chain-hash++              221.957  /  182.862  /  323.211    -       1.1 s 
  35: tbb::concurrent_unordered_map   283.048  /  270.566  /  306.178    -       1.4 s 
  36: google::sparsehash              577.017  /  561.937  /  610.263    -       2.8 s 
  37: oddou::hashmap                 1102.238  / 1073.018  / 1200.591    -       5.5 s 

Results of test [replace] - 1e5 items (5 loops per test)
      Implementation                -   avg         min         max   ms -   elapsed
   1: glib/ghash                       41.345  /   40.950  /   42.250    -     206.7 ms
   2: apr/hashtable                    46.813  /   46.697  /   47.142    -     234.0 ms
   3: tommyds/dynamic                  52.839  /   52.685  /   53.208    -     264.2 ms
   4: gcc/hashtab                      61.614  /   61.465  /   61.790    -     308.0 ms
   5: libevent/ht                      63.403  /   63.281  /   63.485    -     317.0 ms
   6: ulib/chain-hash                  65.461  /   65.016  /   66.048    -     327.3 ms
   7: python/hashtable                 65.501  /   65.404  /   65.701    -     327.5 ms
   8: libCDS/HashMap                   67.969  /   65.392  /   75.131    -     339.8 ms
   9: apr-no-pool/hashtable            68.259  /   68.032  /   68.739    -     341.3 ms
  10: calg/hashtable                   68.355  /   68.216  /   68.641    -     341.7 ms
  11: ccan/htable                      72.920  /   72.589  /   73.943    -     364.6 ms
  12: tommyds/linear                   78.202  /   72.331  /   85.330    -     391.0 ms
  13: Qt::QHash                        89.577  /   86.807  /   92.991    -     447.9 ms
  14: rdestl::hash_map                 94.825  /   94.407  /   95.139    -     474.1 ms
  15: clark/hashtable                  95.057  /   90.104  /  103.751    -     475.3 ms
  16: hashit/chain                     95.223  /   94.904  /   95.813    -     476.1 ms
  17: ulib/open-hash                   99.236  /   98.582  /  100.297    -     496.1 ms
  18: klib/khash                      103.344  /  101.508  /  109.478    -     516.7 ms
  19: uthash/hashtable                103.703  /  103.526  /  104.033    -     518.5 ms
  20: emilib::HashMap                 127.570  /  127.283  /  127.724    -     637.8 ms
  21: amtl::hashmap                   130.184  /  125.319  /  140.694    -     650.9 ms
  22: libcfu/hashtable                130.744  /  130.475  /  131.163    -     653.7 ms
  23: google/c-dense                  138.306  /  137.458  /  139.150    -     691.5 ms
  24: std::unordered_map              185.966  /  185.714  /  186.254    -     929.8 ms
  25: mct::closed_hash_map            199.372  /  193.656  /  212.729    -     996.8 ms
  26: mct::linked_hash_map            202.969  /  195.474  /  210.540    -       1.0 s 
  27: ulib::open-hash++               203.903  /  192.244  /  235.700    -       1.0 s 
  28: google/c-sparse                 211.227  /  202.255  /  234.099    -       1.0 s 
  29: boost::unordered_map            214.464  /  213.791  /  215.323    -       1.0 s 
  30: rigtorp::hashmap                280.906  /  280.790  /  281.109    -       1.4 s 
  31: hashit/open                     391.330  /  367.000  /  433.342    -       1.9 s 
  32: tbb::concurrent_unordered_map   457.047  /  449.771  /  465.957    -       2.2 s 
  33: google::densehash               546.050  /  532.545  /  577.897    -       2.7 s 
  34: ulib::chain-hash++              588.782  /  582.807  /  595.343    -       2.9 s 
  35: oddou::hashmap                 1292.257  / 1279.793  / 1311.279    -       6.4 s 
  36: google::sparsehash             1294.650  / 1279.422  / 1311.889    -       6.4 s 
  37: hashit/overflow                2102.607  / 2077.371  / 2127.555    -      10.5 s 

Results of test [kbench] - 1e5 items (5 loops per test)
      Implementation                -   avg         min         max   ms -   elapsed
   1: glib/ghash                       20.153  /   20.105  /   20.187    -     100.7 ms
   2: ulib/chain-hash                  29.199  /   27.992  /   31.383    -     146.0 ms
   3: gcc/hashtab                      37.771  /   32.798  /   42.397    -     188.8 ms
   4: apr/hashtable                    40.091  /   38.518  /   41.796    -     200.4 ms
   5: tommyds/dynamic                  40.975  /   40.752  /   41.213    -     204.8 ms
   6: libevent/ht                      41.251  /   40.996  /   41.875    -     206.2 ms
   7: calg/hashtable                   44.744  /   44.641  /   44.857    -     223.7 ms
   8: ccan/htable                      48.775  /   43.671  /   66.795    -     243.9 ms
   9: libCDS/HashMap                   49.419  /   45.960  /   53.475    -     247.1 ms
  10: python/hashtable                 53.876  /   49.114  /   68.894    -     269.3 ms
  11: hashit/overflow                  56.999  /   52.776  /   67.230    -     285.0 ms
  12: rdestl::hash_map                 57.804  /   57.423  /   58.668    -     289.0 ms
  13: apr-no-pool/hashtable            58.017  /   54.430  /   64.298    -     290.1 ms
  14: tommyds/linear                   58.427  /   55.473  /   68.405    -     292.1 ms
  15: uthash/hashtable                 59.714  /   59.497  /   60.417    -     298.5 ms
  16: emilib::HashMap                  60.953  /   60.823  /   61.095    -     304.7 ms
  17: ulib/open-hash                   61.243  /   61.038  /   61.532    -     306.2 ms
  18: hashit/chain                     61.849  /   58.662  /   72.713    -     309.2 ms
  19: clark/hashtable                  64.871  /   58.345  /   75.473    -     324.3 ms
  20: klib/khash                       69.880  /   59.174  /   89.104    -     349.4 ms
  21: Qt::QHash                        75.263  /   66.014  /   85.383    -     376.3 ms
  22: libcfu/hashtable                106.588  /   98.778  /  117.083    -     532.9 ms
  23: std::unordered_map              107.067  /  106.925  /  107.348    -     535.3 ms
  24: mct::linked_hash_map            111.838  /  109.348  /  115.933    -     559.2 ms
  25: google/c-dense                  112.669  /   98.446  /  128.053    -     563.3 ms
  26: hashit/open                     114.284  /  108.237  /  132.528    -     571.4 ms
  27: mct::closed_hash_map            114.805  /  114.613  /  115.437    -     574.0 ms
  28: boost::unordered_map            120.638  /  120.365  /  120.975    -     603.2 ms
  29: google/c-sparse                 139.748  /  129.332  /  164.174    -     698.7 ms
  30: ulib::open-hash++               149.013  /  137.524  /  173.550    -     745.0 ms
  31: amtl::hashmap                   163.084  /  145.180  /  210.892    -     815.4 ms
  32: rigtorp::hashmap                200.285  /  146.218  /  261.564    -       1.0 s 
  33: ulib::chain-hash++              266.390  /  264.589  /  268.748    -       1.3 s 
  34: google::densehash               291.184  /  268.375  /  317.361    -       1.4 s 
  35: tbb::concurrent_unordered_map   520.658  /  384.865  /  591.705    -       2.6 s 
  36: oddou::hashmap                 1335.532  / 1234.949  / 1499.817    -       6.6 s 
  37: google::sparsehash             1375.023  / 1098.487  / 1516.190    -       6.8 s 
