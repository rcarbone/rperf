Linux nuc 3.2.0-4-amd64 #1 SMP Debian 3.2.88-1 x86_64

Running test [grow]. Please wait ...
  battle for 41: oddou::hashmap too slow                                    
  battle for 40: google::sparsehash too slow                                    
  battle for 39: google::densehash too slow                                    
  battle for 38: tbb::unordered_map too slow                                    
  battle for 37: ulib::open-hash++ too slow                                    
  battle for 36: mct::linked_hash_map too slow                                    
  battle for 35: rigtorp::hashmap too slow                                    
  battle for 34: boost::unordered_map too slow                                    
  battle for 33: libcfu/hashtable too slow                                    
  battle for 32: mct::closed_hash_map too slow                                    
  battle for 31: google/c-sparse too slow                                    
  battle for 30: std::unordered_map too slow                                    
  battle for 29: amtl::hashmap too slow                                    
  battle for 28: eastl::hashmap too slow                                    
  battle for 27: emilib::HashMap too slow                                    
  battle for 26: google/c-dense too slow                                    
  battle for 25: ulib/open-hash too slow                                    
  battle for 24: stb/sdict too slow                                    
  battle for 23: klib/khash too slow                                    
  battle for 22: apr-no-pool/hashtable too slow                                    
  battle for 21: rdestl::hash_map too slow                                    
  battle for 20: clark/hashtable too slow                                    
  battle for 19: libCDS/HashMap too slow                                    
  battle for 18: calg/hashtable too slow                                    
  battle for 17: python/hashtable too slow                                    
  battle for 16: ulib::chain-hash++ too slow                                    
  battle for 15: hashit/chain too slow                                    
  battle for 14: uthash/hashtable too slow                                    
  battle for 13: Qt::QHash too slow                                    
  battle for 12: apr/hashtable too slow                                    
  battle for 11: libghthash/hashtable too slow                                    
  battle for 10: PeterMoore/st too slow                                    
  battle for  9: tommyds/linear too slow                                    
  battle for  8: hashit/open too slow                                    
  battle for  7: hashit/overflow too slow                                    
  battle for  6: ulib/chain-hash too slow                                    
  battle for  5: ccan/htable too slow                                    
  battle for  4: tommyds/dynamic too slow                                    
  battle for  3: libevent/ht too slow                                    
  battle for  2: gcc/hashtab too slow                                    
  winner is   1: glib/ghash

Results of test [grow] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: glib/ghash                9.732  /    9.671  /    9.764    -      97.3 ms
   2: gcc/hashtab              12.027  /   11.993  /   12.112    -     120.2 ms
   3: libevent/ht              15.288  /   15.187  /   15.714    -     152.9 ms
   4: tommyds/dynamic          15.320  /   15.250  /   15.595    -     153.2 ms
   5: ccan/htable              17.478  /   17.450  /   17.513    -     174.8 ms
   6: ulib/chain-hash          20.501  /   20.429  /   20.639    -     205.0 ms
   7: hashit/overflow          19.817  /   19.490  /   20.818    -     198.1 ms
   8: hashit/open              23.537  /   23.134  /   25.352    -     235.3 ms
   9: tommyds/linear           23.381  /   23.275  /   23.584    -     233.8 ms
  10: PeterMoore/st            23.987  /   23.929  /   24.070    -     239.8 ms
  11: libghthash/hashtable     24.759  /   24.631  /   24.952    -     247.6 ms
  12: apr/hashtable            25.281  /   25.203  /   25.549    -     252.8 ms
  13: Qt::QHash                28.276  /   28.160  /   28.676    -     282.7 ms
  14: uthash/hashtable         29.393  /   29.199  /   29.892    -     293.9 ms
  15: hashit/chain             31.414  /   30.806  /   32.690    -     314.1 ms
  16: ulib::chain-hash++       33.762  /   33.531  /   34.302    -     337.6 ms
  17: python/hashtable         33.669  /   33.492  /   33.971    -     336.7 ms
  18: calg/hashtable           34.192  /   34.074  /   34.428    -     341.9 ms
  19: libCDS/HashMap           34.571  /   34.461  /   34.825    -     345.7 ms
  20: clark/hashtable          36.504  /   36.352  /   37.019    -     365.0 ms
  21: rdestl::hash_map         38.027  /   36.766  /   38.264    -     380.2 ms
  22: apr-no-pool/hashtable    39.344  /   39.212  /   39.724    -     393.4 ms
  23: klib/khash               38.897  /   38.779  /   39.332    -     388.9 ms
  24: stb/sdict                42.126  /   41.535  /   43.903    -     421.2 ms
  25: ulib/open-hash           43.302  /   43.161  /   43.687    -     433.0 ms
  26: google/c-dense           43.572  /   43.366  /   44.017    -     435.7 ms
  27: emilib::HashMap          43.611  /   43.519  /   43.754    -     436.1 ms
  28: eastl::hashmap           46.054  /   45.841  /   46.813    -     460.5 ms
  29: amtl::hashmap            56.085  /   53.737  /   56.600    -     560.8 ms
  30: std::unordered_map       62.853  /   62.705  /   63.153    -     628.5 ms
  31: google/c-sparse          66.701  /   66.523  /   67.168    -     667.0 ms
  32: mct::closed_hash_map     74.478  /   73.938  /   76.111    -     744.8 ms
  33: libcfu/hashtable         76.169  /   75.896  /   76.937    -     761.7 ms
  34: boost::unordered_map     76.366  /   75.711  /   78.768    -     763.6 ms
  35: rigtorp::hashmap         81.199  /   81.029  /   81.776    -     812.0 ms
  36: mct::linked_hash_map     84.906  /   81.168  /   87.022    -     849.1 ms
  37: ulib::open-hash++        96.481  /   96.215  /   98.224    -     964.8 ms
  38: tbb::unordered_map      112.288  /  112.036  /  112.841    -       1.1 s 
  39: google::densehash       131.159  /  130.887  /  131.949    -       1.3 s 
  40: google::sparsehash      319.003  /  318.396  /  319.600    -       3.1 s 
  41: oddou::hashmap          668.776  /  646.979  /  784.102    -       6.6 s 

Running test [hit]. Please wait ...
  battle for 41: oddou::hashmap too slow                                    
  battle for 40: google::sparsehash too slow                                    
  battle for 39: ulib::chain-hash++ too slow                                    
  battle for 38: google::densehash too slow                                    
  battle for 37: tbb::unordered_map too slow                                    
  battle for 36: ulib::open-hash++ too slow                                    
  battle for 35: boost::unordered_map too slow                                    
  battle for 34: mct::linked_hash_map too slow                                    
  battle for 33: rigtorp::hashmap too slow                                    
  battle for 32: libcfu/hashtable too slow                                    
  battle for 31: mct::closed_hash_map too slow                                    
  battle for 30: std::unordered_map too slow                                    
  battle for 29: google/c-sparse too slow                                    
  battle for 28: amtl::hashmap too slow                                    
  battle for 27: google/c-dense too slow                                    
  battle for 26: eastl::hashmap too slow                                    
  battle for 25: stb/sdict too slow                                    
  battle for 24: klib/khash too slow                                    
  battle for 23: ulib/open-hash too slow                                    
  battle for 22: uthash/hashtable too slow                                    
  battle for 21: Qt::QHash too slow                                    
  battle for 20: emilib::HashMap too slow                                    
  battle for 19: hashit/chain too slow                                    
  battle for 18: clark/hashtable too slow                                    
  battle for 17: rdestl::hash_map too slow                                    
  battle for 16: hashit/open too slow                                    
  battle for 15: apr-no-pool/hashtable too slow                                    
  battle for 14: calg/hashtable too slow                                    
  battle for 13: python/hashtable too slow                                    
  battle for 12: libCDS/HashMap too slow                                    
  battle for 11: hashit/overflow too slow                                    
  battle for 10: tommyds/linear too slow                                    
  battle for  9: libghthash/hashtable too slow                                    
  battle for  8: apr/hashtable too slow                                    
  battle for  7: PeterMoore/st too slow                                    
  battle for  6: ccan/htable too slow                                    
  battle for  5: libevent/ht too slow                                    
  battle for  4: ulib/chain-hash too slow                                    
  battle for  3: tommyds/dynamic too slow                                    
  battle for  2: gcc/hashtab too slow                                    
  winner is   1: glib/ghash

Results of test [hit] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: glib/ghash               16.181  /   16.108  /   16.268    -     161.8 ms
   2: gcc/hashtab              26.405  /   26.311  /   26.586    -     264.0 ms
   3: tommyds/dynamic          27.068  /   26.980  /   27.154    -     270.7 ms
   4: ulib/chain-hash          27.848  /   27.682  /   27.977    -     278.5 ms
   5: libevent/ht              28.253  /   28.061  /   28.424    -     282.5 ms
   6: ccan/htable              30.910  /   30.853  /   31.026    -     309.1 ms
   7: PeterMoore/st            32.662  /   32.405  /   33.145    -     326.6 ms
   8: apr/hashtable            34.357  /   34.187  /   34.593    -     343.6 ms
   9: libghthash/hashtable     34.582  /   34.375  /   34.717    -     345.8 ms
  10: tommyds/linear           37.021  /   36.852  /   37.294    -     370.2 ms
  11: hashit/overflow          43.189  /   42.051  /   44.211    -     431.9 ms
  12: libCDS/HashMap           43.689  /   43.381  /   43.913    -     436.9 ms
  13: python/hashtable         43.883  /   43.587  /   44.215    -     438.8 ms
  14: calg/hashtable           44.598  /   44.506  /   44.710    -     446.0 ms
  15: apr-no-pool/hashtable    48.429  /   48.331  /   48.567    -     484.3 ms
  16: hashit/open              50.908  /   50.621  /   51.169    -     509.1 ms
  17: rdestl::hash_map         52.282  /   50.705  /   52.597    -     522.8 ms
  18: clark/hashtable          54.451  /   54.074  /   56.274    -     544.5 ms
  19: hashit/chain             57.364  /   55.042  /   58.803    -     573.6 ms
  20: emilib::HashMap          56.584  /   56.439  /   56.746    -     565.8 ms
  21: Qt::QHash                57.514  /   57.203  /   57.969    -     575.1 ms
  22: uthash/hashtable         60.520  /   59.929  /   61.444    -     605.2 ms
  23: ulib/open-hash           59.794  /   59.641  /   60.100    -     597.9 ms
  24: klib/khash               62.012  /   61.710  /   62.168    -     620.1 ms
  25: stb/sdict                58.154  /   57.966  /   58.501    -     581.5 ms
  26: eastl::hashmap           61.060  /   60.156  /   65.233    -     610.6 ms
  27: google/c-dense           61.667  /   61.267  /   62.907    -     616.6 ms
  28: amtl::hashmap            74.571  /   73.022  /   74.982    -     745.7 ms
  29: google/c-sparse          86.412  /   86.316  /   86.578    -     864.1 ms
  30: std::unordered_map       91.490  /   91.266  /   91.916    -     914.9 ms
  31: mct::closed_hash_map    103.390  /  103.054  /  105.294    -       1.0 s 
  32: libcfu/hashtable        101.230  /  101.004  /  101.701    -       1.0 s 
  33: rigtorp::hashmap        102.926  /  102.820  /  103.005    -       1.0 s 
  34: mct::linked_hash_map    113.381  /  111.219  /  115.849    -       1.1 s 
  35: boost::unordered_map    116.807  /  115.678  /  118.757    -       1.1 s 
  36: ulib::open-hash++       122.403  /  122.054  /  123.147    -       1.2 s 
  37: tbb::unordered_map      178.089  /  177.774  /  178.348    -       1.7 s 
  38: google::densehash       180.122  /  179.890  /  181.398    -       1.8 s 
  39: ulib::chain-hash++      180.022  /  174.927  /  184.812    -       1.8 s 
  40: google::sparsehash      496.615  /  496.152  /  497.935    -       4.9 s 
  41: oddou::hashmap          709.653  /  709.273  /  709.884    -       7.0 s 

Running test [miss]. Please wait ...
  battle for 41: oddou::hashmap too slow                                    
  battle for 40: google::sparsehash too slow                                    
  battle for 39: tbb::unordered_map too slow                                    
  battle for 38: google::densehash too slow                                    
  battle for 37: rigtorp::hashmap too slow                                    
