Linux tar 3.2.0-4-686-pae #1 SMP Debian 3.2.63-2 i686

Evaluate average wall-time elapsed repeating 10 times the same test with 10000 items per test

Tests to run: 6 over 43 implementations
  1: grow    (Add items to an empty container)
  2: hit     (Find existing items            )
  3: miss    (Search non existing items      )
  4: delete  (Delete existing items          )
  5: replace (Replace existing items         )
  6: kbench  (Delete if found, add otherwise )

To run #10 times each with #10000 items
[1] Running grow ...... Done! over #43 implementations - Elapsed  19.4  s
[2] Running hit ....... Done! over #43 implementations - Elapsed  27.1  s
[3] Running miss ...... Done! over #43 implementations - Elapsed  27.9  s
[4] Running delete .... Done! over #43 implementations - Elapsed  29.0  s
[5] Running replace ... Done! over #43 implementations - Elapsed  48.0  s
[6] Running kbench .... Done! over #43 implementations - Elapsed  30.2  s

                              H a l l   o f   F a m e

Results of test [grow] - 1e4 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              15.166  /    2.199  /   38.196    -     151.8 ms
   2: gcc/hashtab              17.645  /    2.429  /   33.151    -     176.5 ms
   3: amtl::hashmap            18.941  /    3.120  /   27.555    -     189.5 ms
   4: ulib::open-hash++        20.294  /    3.345  /   46.612    -     203.1 ms
   5: rdestl::hash_map         21.677  /    2.980  /   31.268    -     216.9 ms
   6: hashit/overflow          23.553  /    3.448  /   31.849    -     235.6 ms
   7: hashit/open              24.128  /    3.618  /   32.828    -     241.4 ms
   8: ulib/chain-hash          25.159  /   15.854  /   28.023    -     251.7 ms
   9: ulib::chain-hash++       25.617  /   10.057  /   34.195    -     256.3 ms
  10: libevent/ht              25.810  /   13.139  /   37.824    -     278.3 ms
  11: emilib::HashMap          26.498  /   16.857  /   36.428    -     265.1 ms
  12: glib/ghash               27.412  /   21.334  /   33.595    -     274.2 ms
  13: hashit/chain             27.624  /   16.025  /   39.643    -     276.4 ms
  14: PeterMoore/st            28.640  /    4.338  /   45.149    -     286.5 ms
  15: std::unordered_map       31.621  /   12.736  /   47.114    -     316.3 ms
  16: libghthash/hashtable     33.200  /    4.895  /   55.740    -     332.2 ms
  17: google/c-dense           33.284  /   24.793  /   41.965    -     333.0 ms
  18: tommyds/linear           33.989  /   13.434  /   53.755    -     340.0 ms
  19: clark/hashtable          34.729  /   13.473  /   64.044    -     347.4 ms
  20: stb/sdict                35.264  /   17.546  /   56.679    -     352.7 ms
  21: boost::unordered_map     35.599  /   24.571  /   57.253    -     356.1 ms
  22: ulib/open-hash           38.497  /   25.255  /   56.762    -     385.1 ms
  23: klib/khash               39.243  /   23.814  /   50.955    -     392.5 ms
  24: tommyds/dynamic          39.268  /   29.413  /   61.103    -     392.9 ms
  25: Qt::QHash                39.408  /   24.523  /   54.108    -     394.2 ms
  26: google::densehash        45.021  /   30.568  /   69.150    -     450.3 ms
  27: uthash/hashtable         45.138  /   18.405  /   54.801    -     451.5 ms
  28: apr-no-pool/hashtable    45.968  /   12.365  /   56.336    -     459.8 ms
  29: apr/hashtable            48.622  /   35.356  /   59.495    -     486.3 ms
  30: judy/JSL                 48.696  /   25.955  /   70.230    -     487.1 ms
  31: eastl::hashmap           48.965  /   35.034  /   62.739    -     489.8 ms
  32: mct::closed_hash_map     49.842  /   27.224  /   60.406    -     498.5 ms
  33: calg/hashtable           53.588  /   35.278  /   75.114    -     536.0 ms
  34: python/hashtable         53.983  /   40.409  /   67.770    -     540.0 ms
  35: tbb::unordered_map       54.555  /   38.093  /   76.027    -     545.7 ms
  36: libcfu/hashtable         55.022  /   34.451  /   73.356    -     550.4 ms
  37: libCDS/HashMap           55.887  /   34.786  /   77.824    -     559.0 ms
  38: rigtorp::hashmap         60.401  /   39.443  /   81.586    -     604.1 ms
  39: oddou::hashmap           61.175  /   42.015  /   85.334    -     611.9 ms
  40: google/c-sparse          66.551  /   44.399  /   77.600    -     665.6 ms
  41: mct::linked_hash_map     82.120  /   58.996  /  104.406    -     821.3 ms
  42: google::sparsehash       82.700  /   66.874  /   93.297    -     827.1 ms
  43: libdynamic/map          257.673  /  242.049  /  280.798    -       2.5  s

Results of test [hit] - 1e4 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              30.133  /    4.511  /   51.617    -     301.4 ms
   2: gcc/hashtab              32.109  /   17.468  /   50.026    -     339.6 ms
   3: ulib::open-hash++        35.999  /   13.760  /   58.029    -     360.1 ms
   4: rdestl::hash_map         36.049  /   25.635  /   53.931    -     360.6 ms
   5: ulib::chain-hash++       37.147  /    5.558  /   58.560    -     371.6 ms
   6: amtl::hashmap            37.912  /   25.911  /   58.245    -     379.2 ms
   7: glib/ghash               38.670  /   25.928  /   49.488    -     386.8 ms
   8: ulib/chain-hash          42.168  /   26.612  /   54.490    -     421.8 ms
   9: emilib::HashMap          43.510  /   26.282  /   63.381    -     435.2 ms
  10: PeterMoore/st            43.935  /   26.555  /   65.693    -     439.5 ms
  11: libghthash/hashtable     48.863  /   25.267  /   59.691    -     488.8 ms
  12: libevent/ht              49.938  /   22.940  /   63.926    -     499.5 ms
  13: hashit/overflow          50.271  /   31.792  /   57.374    -     502.8 ms
  14: boost::unordered_map     50.289  /   25.950  /   77.109    -     503.0 ms
  15: hashit/open              50.411  /   36.056  /   68.111    -     504.2 ms
  16: std::unordered_map       50.970  /   34.260  /   63.082    -     509.8 ms
  17: tommyds/linear           51.157  /   36.026  /   79.137    -     511.7 ms
  18: google/c-dense           51.609  /   31.429  /   65.436    -     516.2 ms
  19: hashit/chain             51.626  /   21.461  /   77.797    -     516.4 ms
  20: Qt::QHash                53.613  /   35.974  /   68.300    -     536.2 ms
  21: stb/sdict                55.145  /   41.971  /   72.809    -     551.6 ms
  22: google::densehash        55.487  /   37.649  /   70.636    -     555.0 ms
  23: tommyds/dynamic          55.669  /   48.515  /   74.146    -     556.8 ms
  24: clark/hashtable          56.445  /   40.092  /   79.723    -     564.6 ms
  25: ulib/open-hash           57.258  /   41.208  /   73.664    -     572.7 ms
  26: eastl::hashmap           60.963  /   46.537  /   73.852    -     609.8 ms
  27: apr-no-pool/hashtable    62.254  /   50.565  /   81.004    -     622.7 ms
  28: klib/khash               62.595  /   50.798  /   70.351    -     626.1 ms
  29: apr/hashtable            63.121  /   47.937  /   79.874    -     631.3 ms
  30: judy/JSL                 64.395  /   46.284  /   81.517    -     644.1 ms
  31: mct::closed_hash_map     66.848  /   56.744  /   78.069    -     668.6 ms
  32: python/hashtable         67.687  /   42.217  /   91.593    -     677.0 ms
  33: libCDS/HashMap           69.461  /   50.887  /   85.446    -     694.7 ms
  34: uthash/hashtable         71.475  /   51.282  /   91.123    -     714.9 ms
  35: calg/hashtable           71.668  /   52.737  /   82.461    -     716.8 ms
  36: rigtorp::hashmap         76.105  /   58.515  /   94.417    -     761.2 ms
  37: libcfu/hashtable         77.233  /   55.075  /   93.163    -     772.5 ms
  38: tbb::unordered_map       80.457  /   62.673  /   98.627    -     804.7 ms
  39: google/c-sparse          81.965  /   68.272  /  104.953    -     819.8 ms
  40: oddou::hashmap           84.358  /   60.762  /   98.541    -     843.7 ms
  41: mct::linked_hash_map     88.387  /   68.345  /  114.544    -     884.0 ms
  42: google::sparsehash      107.178  /   85.606  /  125.342    -       1.0  s
  43: libdynamic/map          288.545  /  279.525  /  299.913    -       2.8  s

Results of test [miss] - 1e4 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              30.574  /   23.193  /   41.710    -     305.8 ms
   2: rdestl::hash_map         35.299  /   25.448  /   57.286    -     353.1 ms
   3: ulib::open-hash++        35.387  /   21.281  /   57.721    -     354.0 ms
   4: amtl::hashmap            36.859  /   21.687  /   56.053    -     368.7 ms
   5: glib/ghash               38.574  /   29.941  /   46.572    -     385.8 ms
   6: gcc/hashtab              40.390  /   21.499  /   54.204    -     404.0 ms
   7: ulib::chain-hash++       40.624  /   23.227  /   57.264    -     406.4 ms
   8: ulib/chain-hash          42.492  /   30.399  /   53.481    -     425.1 ms
   9: emilib::HashMap          43.510  /   29.769  /   54.820    -     435.2 ms
  10: PeterMoore/st            46.318  /   30.805  /   64.502    -     463.3 ms
  11: libghthash/hashtable     49.782  /   39.734  /   60.235    -     498.0 ms
  12: boost::unordered_map     49.964  /   29.931  /   61.719    -     499.8 ms
  13: google/c-dense           50.190  /   35.764  /   66.126    -     502.0 ms
  14: std::unordered_map       50.664  /   35.072  /   65.119    -     506.8 ms
  15: libevent/ht              50.803  /   34.586  /   67.166    -     508.1 ms
  16: Qt::QHash                51.135  /   25.054  /   64.167    -     511.5 ms
  17: hashit/overflow          51.653  /   33.578  /   68.233    -     516.6 ms
  18: clark/hashtable          53.230  /   31.228  /   65.393    -     560.5 ms
  19: tommyds/linear           54.237  /   36.285  /   83.385    -     542.5 ms
  20: stb/sdict                55.580  /   45.023  /   68.430    -     555.9 ms
  21: google::densehash        57.491  /   39.916  /   71.123    -     575.0 ms
  22: hashit/chain             58.906  /   41.924  /   72.427    -     589.2 ms
  23: tommyds/dynamic          59.334  /   45.604  /   69.602    -     593.4 ms
  24: apr/hashtable            60.077  /   43.897  /   75.437    -     600.9 ms
  25: eastl::hashmap           61.068  /   48.658  /   83.650    -     610.8 ms
  26: apr-no-pool/hashtable    62.033  /   45.176  /   86.771    -     620.4 ms
  27: mct::closed_hash_map     62.619  /   53.413  /   74.009    -     626.3 ms
  28: judy/JSL                 62.784  /   42.689  /   75.698    -     628.0 ms
  29: hashit/open              64.516  /   52.854  /   78.549    -     645.3 ms
  30: python/hashtable         64.703  /   50.321  /   81.855    -     647.1 ms
  31: libCDS/HashMap           66.778  /   48.219  /   82.786    -     667.9 ms
  32: ulib/open-hash           69.613  /   57.984  /   89.164    -     696.2 ms
  33: calg/hashtable           69.833  /   59.944  /   83.377    -     698.4 ms
  34: klib/khash               72.762  /   60.748  /   83.831    -     727.7 ms
  35: libcfu/hashtable         77.607  /   65.679  /   94.611    -     776.3 ms
  36: tbb::unordered_map       80.324  /   67.753  /  102.059    -     803.4 ms
  37: google/c-sparse          81.317  /   62.285  /  101.984    -     833.4 ms
  38: rigtorp::hashmap         83.177  /   70.629  /  107.064    -     831.9 ms
  39: uthash/hashtable         85.257  /   69.041  /   94.838    -     852.7 ms
  40: mct::linked_hash_map     86.637  /   78.415  /   95.192    -     866.5 ms
  41: oddou::hashmap           89.732  /   75.419  /   99.087    -     897.4 ms
  42: google::sparsehash      104.612  /   81.121  /  118.943    -       1.0  s
  43: libdynamic/map          300.575  /  277.174  /  317.961    -       3.0  s

Results of test [delete] - 1e4 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              32.626  /   21.102  /   51.635    -     326.4 ms
   2: ulib::chain-hash++       34.231  /   13.590  /   54.229    -     362.6 ms
   3: gcc/hashtab              34.329  /   25.207  /   45.964    -     343.4 ms
   4: ulib::open-hash++        34.503  /   23.933  /   48.897    -     345.1 ms
   5: rdestl::hash_map         34.696  /   22.019  /   54.067    -     347.1 ms
   6: ulib/chain-hash          38.563  /   25.995  /   58.548    -     385.7 ms
   7: amtl::hashmap            38.886  /   24.830  /   52.021    -     389.0 ms
   8: apr-no-pool/hashtable    41.721  /   24.839  /   51.400    -     417.3 ms
   9: apr/hashtable            42.395  /   23.825  /   55.154    -     424.1 ms
  10: emilib::HashMap          43.355  /   29.697  /   66.544    -     433.7 ms
  11: hashit/chain             45.659  /   29.402  /   58.874    -     456.7 ms
  12: glib/ghash               45.984  /   37.134  /   57.936    -     460.0 ms
  13: boost::unordered_map     47.131  /   33.641  /   60.288    -     471.4 ms
  14: hashit/overflow          47.912  /   28.219  /   61.911    -     479.2 ms
  15: libghthash/hashtable     49.793  /   31.445  /   75.532    -     498.1 ms
  16: PeterMoore/st            49.819  /   37.810  /   62.143    -     498.3 ms
  17: std::unordered_map       49.942  /   39.238  /   63.820    -     499.5 ms
  18: libevent/ht              51.036  /   26.767  /   80.518    -     510.5 ms
  19: Qt::QHash                51.233  /   38.297  /   70.851    -     512.5 ms
  20: clark/hashtable          53.428  /   41.195  /   69.196    -     534.4 ms
  21: ulib/open-hash           54.153  /   38.840  /   67.786    -     541.6 ms
  22: klib/khash               56.459  /   37.557  /   77.137    -     564.7 ms
  23: tommyds/linear           56.603  /   31.826  /   77.118    -     566.2 ms
  24: eastl::hashmap           57.609  /   40.058  /   79.356    -     576.2 ms
  25: google::densehash        61.067  /   49.923  /   74.452    -     610.8 ms
  26: tommyds/dynamic          63.116  /   54.827  /   77.710    -     631.3 ms
  27: google/c-dense           63.392  /   48.087  /   76.705    -     634.1 ms
  28: libCDS/HashMap           64.053  /   42.800  /   92.713    -     640.7 ms
  29: mct::closed_hash_map     70.308  /   47.053  /   86.902    -     703.2 ms
  30: hashit/open              70.944  /   57.030  /   96.676    -     709.6 ms
  31: uthash/hashtable         71.591  /   48.051  /   92.479    -     716.1 ms
  32: libcfu/hashtable         74.197  /   60.120  /   86.740    -     742.1 ms
  33: python/hashtable         75.634  /   58.535  /   92.278    -     756.5 ms
  34: calg/hashtable           76.790  /   62.166  /   93.335    -     768.0 ms
  35: judy/JSL                 78.170  /   69.971  /   96.225    -     781.8 ms
  36: rigtorp::hashmap         94.023  /   81.168  /  110.623    -     949.5 ms
  37: mct::linked_hash_map     94.661  /   76.022  /  115.983    -     946.7 ms
  38: tbb::unordered_map      102.078  /   86.501  /  117.674    -       1.0  s
  39: oddou::hashmap          103.746  /   75.463  /  118.646    -       1.0  s
  40: stb/sdict               105.931  /   87.983  /  115.708    -       1.0  s
  41: google::sparsehash      106.846  /   87.235  /  119.751    -       1.0  s
  42: google/c-sparse         106.886  /   74.787  /  129.827    -       1.0  s
  43: libdynamic/map          324.927  /  312.695  /  335.308    -       3.2  s

Results of test [replace] - 1e4 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ulib::open-hash++        45.242  /   23.177  /   65.996    -     452.5 ms
   2: ulib::chain-hash++       56.367  /   40.826  /   66.512    -     563.8 ms
   3: rdestl::hash_map         57.579  /   45.413  /   74.953    -     575.9 ms
   4: gcc/hashtab              65.436  /   45.831  /   81.054    -     654.5 ms
   5: amtl::hashmap            65.618  /   54.712  /   76.753    -     656.3 ms
   6: glib/ghash               67.139  /   49.221  /   80.192    -     671.5 ms
   7: Qt::QHash                69.863  /   41.450  /   80.992    -     698.8 ms
   8: std::unordered_map       73.367  /   64.105  /   89.365    -     733.8 ms
   9: apr/hashtable            74.786  /   59.508  /   95.426    -     748.0 ms
  10: libghthash/hashtable     76.680  /   52.055  /   91.483    -     767.0 ms
  11: tommyds/dynamic          76.710  /   51.453  /   92.851    -     791.4 ms
  12: eastl::hashmap           78.472  /   55.590  /   92.692    -     784.9 ms
  13: ulib/chain-hash          78.913  /   58.946  /  103.348    -     789.3 ms
  14: boost::unordered_map     78.926  /   51.483  /  101.251    -     789.4 ms
  15: tommyds/linear           79.609  /   71.934  /   88.578    -     796.3 ms
  16: PeterMoore/st            79.690  /   65.869  /   92.368    -     797.0 ms
  17: apr-no-pool/hashtable    80.227  /   59.571  /   93.798    -     802.4 ms
  18: mct::closed_hash_map     80.252  /   66.525  /   96.373    -     802.6 ms
  19: hashit/chain             80.670  /   57.031  /  102.559    -     816.1 ms
  20: libCDS/HashMap           83.629  /   69.302  /   95.762    -     836.4 ms
  21: libevent/ht              83.882  /   62.081  /  100.282    -     838.9 ms
  22: clark/hashtable          84.244  /   71.734  /   97.982    -     842.6 ms
  23: python/hashtable         89.098  /   70.630  /  113.256    -     891.1 ms
  24: google/c-dense           90.724  /   77.812  /  102.824    -     907.4 ms
  25: calg/hashtable           95.266  /   79.319  /  116.059    -     952.8 ms
  26: google::densehash        96.562  /   88.335  /  105.111    -     965.7 ms
  27: hashit/overflow          98.621  /   82.755  /  114.054    -     986.3 ms
  28: ulib/open-hash          103.148  /   82.630  /  127.736    -       1.0  s
  29: mct::linked_hash_map    108.082  /   97.990  /  127.523    -       1.0  s
  30: emilib::HashMap         116.663  /   86.957  /  146.403    -       1.1  s
  31: klib/khash              116.861  /   94.549  /  127.825    -       1.1  s
  32: judy/JSL                122.231  /  106.916  /  132.590    -       1.2  s
  33: libcfu/hashtable        124.441  /  109.698  /  139.752    -       1.2  s
  34: uthash/hashtable        133.452  /  106.158  /  151.766    -       1.3  s
  35: google/c-sparse         145.605  /  132.736  /  166.854    -       1.4  s
  36: ccan/htable             148.157  /  134.391  /  160.963    -       1.4  s
  37: stb/sdict               155.097  /  137.263  /  169.829    -       1.5  s
  38: oddou::hashmap          164.621  /  149.159  /  178.505    -       1.6  s
  39: hashit/open             170.075  /  158.272  /  181.156    -       1.7  s
  40: tbb::unordered_map      172.590  /  155.538  /  184.080    -       1.7  s
  41: rigtorp::hashmap        178.774  /  161.985  /  205.922    -       1.7  s
  42: google::sparsehash      269.532  /  242.906  /  290.240    -       2.6  s
  43: libdynamic/map          486.048  /  463.941  /  505.357    -       4.8  s

Results of test [kbench] - 1e4 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ulib::chain-hash++       37.041  /   28.978  /   46.299    -     370.5 ms
   2: ccan/htable              37.304  /   24.107  /   54.740    -     373.1 ms
   3: gcc/hashtab              37.370  /   22.169  /   52.653    -     373.8 ms
   4: rdestl::hash_map         39.576  /   24.172  /   53.904    -     395.9 ms
   5: ulib::open-hash++        39.773  /   25.982  /   54.841    -     397.8 ms
   6: ulib/chain-hash          40.243  /   26.233  /   55.944    -     402.5 ms
   7: amtl::hashmap            41.110  /   22.249  /   54.610    -     411.2 ms
   8: emilib::HashMap          43.204  /   20.914  /   65.820    -     432.1 ms
   9: apr-no-pool/hashtable    43.700  /   29.610  /   57.111    -     437.1 ms
  10: apr/hashtable            45.668  /   32.553  /   59.488    -     456.8 ms
  11: hashit/chain             46.028  /   31.063  /   55.325    -     460.4 ms
  12: glib/ghash               47.568  /   26.607  /   65.311    -     475.8 ms
  13: std::unordered_map       49.586  /   31.551  /   60.056    -     496.0 ms
  14: hashit/overflow          49.845  /   33.547  /   73.313    -     498.6 ms
  15: PeterMoore/st            49.895  /   39.361  /   59.842    -     499.1 ms
  16: libghthash/hashtable     50.697  /   28.153  /   78.321    -     523.2 ms
  17: boost::unordered_map     50.873  /   26.727  /   74.196    -     508.9 ms
  18: libevent/ht              55.074  /   40.769  /   64.940    -     550.9 ms
  19: ulib/open-hash           55.241  /   43.700  /   68.927    -     552.5 ms
  20: Qt::QHash                55.514  /   48.580  /   65.911    -     555.3 ms
  21: klib/khash               56.838  /   38.199  /   75.923    -     568.5 ms
  22: google::densehash        57.047  /   45.781  /   79.357    -     570.6 ms
  23: tommyds/linear           57.559  /   35.873  /   78.248    -     575.7 ms
  24: clark/hashtable          59.832  /   45.324  /   74.565    -     598.4 ms
  25: eastl::hashmap           61.203  /   42.498  /   80.873    -     612.1 ms
  26: tommyds/dynamic          65.793  /   44.439  /   86.872    -     658.1 ms
  27: google/c-dense           68.970  /   60.202  /   80.669    -     689.8 ms
  28: libCDS/HashMap           69.376  /   48.307  /   84.204    -     693.9 ms
  29: mct::closed_hash_map     70.143  /   50.487  /   94.885    -     701.6 ms
  30: calg/hashtable           71.414  /   51.330  /   89.212    -     714.2 ms
  31: hashit/open              72.948  /   58.658  /   83.547    -     729.6 ms
  32: uthash/hashtable         74.605  /   44.387  /  104.694    -     746.2 ms
  33: libcfu/hashtable         75.204  /   57.981  /   86.180    -     773.2 ms
  34: python/hashtable         78.896  /   61.782  /   97.025    -     789.1 ms
  35: judy/JSL                 79.063  /   61.623  /  103.097    -     790.8 ms
  36: mct::linked_hash_map     91.171  /   78.505  /  107.990    -     911.8 ms
  37: rigtorp::hashmap         94.719  /   76.260  /  112.838    -     969.9 ms
  38: oddou::hashmap          110.418  /   88.330  /  146.579    -       1.1  s
  39: stb/sdict               110.597  /   85.603  /  131.433    -       1.1  s
  40: tbb::unordered_map      114.683  /  105.196  /  124.866    -       1.1  s
  41: google/c-sparse         115.646  /  106.839  /  130.909    -       1.1  s
  42: google::sparsehash      123.487  /  110.656  /  137.775    -       1.2  s
  43: libdynamic/map          323.411  /  311.137  /  334.506    -       3.2  s
