Linux tar 3.2.0-4-686-pae #1 SMP Debian 3.2.63-2 i686

Running test [grow]. Please wait ... Done
Running test [hit]. Please wait ... Done
Running test [miss]. Please wait ... Done
Running test [delete]. Please wait ... Done
Running test [replace]. Please wait ... Done
Running test [kbench]. Please wait ... Done

                              H a l l   o f   F a m e

Results of test [grow] - 1e4 items (5 loops per test)
      Implementation                -   avg         min         max   ms -   elapsed
   1: ulib::open-hash++                23.103  /    4.125  /   42.466    -     143.1 ms
   2: gcc/hashtab                      25.560  /   23.362  /   28.289    -     127.8 ms
   3: glib/ghash                       31.961  /   24.205  /   53.912    -     159.8 ms
   4: hashit/overflow                  33.016  /   14.133  /   60.456    -     165.1 ms
   5: hashit/open                      33.682  /   24.557  /   39.808    -     168.4 ms
   6: ulib/chain-hash                  33.958  /   21.212  /   48.856    -     169.8 ms
   7: libevent/ht                      35.954  /   24.514  /   54.413    -     179.8 ms
   8: hashit/chain                     38.577  /   25.315  /   49.456    -     192.9 ms
   9: ulib::chain-hash++               42.813  /   21.057  /   65.346    -     214.1 ms
  10: tommyds/linear                   46.564  /   22.906  /   69.377    -     232.9 ms
  11: clark/hashtable                  54.706  /   34.048  /   62.281    -     273.6 ms
  12: google/c-dense                   55.803  /   44.310  /   76.981    -     279.1 ms
  13: uthash/hashtable                 57.653  /   33.656  /   83.317    -     288.3 ms
  14: tommyds/dynamic                  58.120  /   31.279  /   80.864    -     290.7 ms
  15: Qt::QHash                        58.438  /   39.191  /   72.829    -     292.3 ms
  16: apr/hashtable                    59.269  /   51.747  /   70.290    -     296.4 ms
  17: klib/khash                       59.756  /   53.140  /   66.045    -     298.8 ms
  18: rdestl::hash_map                 60.702  /   40.821  /   86.942    -     303.5 ms
  19: ulib/open-hash                   60.816  /   55.775  /   67.853    -     304.1 ms
  20: emilib::HashMap                  65.614  /   53.052  /   78.976    -     328.1 ms
  21: Qt::QHash                        65.882  /   61.241  /   71.103    -     329.5 ms
  22: apr-no-pool/hashtable            71.187  /   44.399  /   94.272    -     356.0 ms
  23: libcfu/hashtable                 75.170  /   54.192  /   83.797    -     375.9 ms
  24: libCDS/HashMap                   75.528  /   43.306  /   88.204    -     377.7 ms
  25: amtl::hashmap                    76.491  /   49.584  /  103.078    -     382.5 ms
  26: python/hashtable                 76.698  /   61.414  /   87.541    -     383.5 ms
  27: calg/hashtable                   78.734  /   64.899  /   99.902    -     393.7 ms
  28: google/c-sparse                 101.891  /   85.765  /  111.679    -     509.5 ms
  29: std::unordered_map              117.690  /   97.433  /  138.581    -     588.5 ms
  30: boost::unordered_map            127.394  /  115.629  /  137.979    -     637.0 ms
  31: mct::closed_hash_map            140.350  /  121.485  /  155.458    -     701.8 ms
  32: mct::linked_hash_map            159.805  /  147.885  /  178.404    -     799.1 ms
  33: rigtorp::hashmap                187.075  /  179.112  /  200.068    -     935.4 ms
  34: tbb::concurrent_unordered_map   226.348  /  198.960  /  238.336    -       1.1 s 
  35: google::densehash               259.869  /  235.682  /  284.734    -       1.2 s 
  36: google::sparsehash              596.258  /  580.333  /  606.604    -       2.9 s 
  37: oddou::hashmap                  813.987  /  808.740  /  823.028    -       4.0 s 

Results of test [hit] - 1e4 items (5 loops per test)
      Implementation                -   avg         min         max   ms -   elapsed
   1: gcc/hashtab                      47.845  /   29.245  /   62.429    -     239.3 ms
   2: glib/ghash                       49.794  /   46.200  /   58.841    -     249.0 ms
   3: ulib::open-hash++                52.593  /   31.227  /   65.584    -     263.0 ms
   4: ulib/chain-hash                  54.982  /   41.420  /   64.483    -     275.0 ms
   5: ulib::chain-hash++               59.585  /   51.441  /   71.720    -     298.0 ms
   6: hashit/overflow                  62.694  /   60.296  /   67.586    -     313.5 ms
   7: libevent/ht                      64.588  /   51.368  /   73.081    -     323.0 ms
   8: hashit/open                      65.799  /   58.197  /   77.851    -     329.0 ms
   9: hashit/chain                     67.599  /   50.427  /   79.655    -     338.0 ms
  10: tommyds/linear                   71.950  /   60.287  /   90.373    -     359.8 ms
  11: tommyds/dynamic                  77.008  /   71.118  /   81.969    -     385.1 ms
  12: clark/hashtable                  77.907  /   60.280  /   95.509    -     389.6 ms
  13: apr/hashtable                    78.627  /   55.515  /   90.547    -     393.2 ms
  14: klib/khash                       86.725  /   80.151  /   95.613    -     433.6 ms
  15: google/c-dense                   86.857  /   71.779  /   99.173    -     434.3 ms
  16: apr-no-pool/hashtable            86.976  /   78.097  /   93.918    -     434.9 ms
  17: rdestl::hash_map                 90.148  /   75.773  /  105.556    -     450.8 ms
  18: uthash/hashtable                 90.149  /   75.262  /  115.047    -     450.8 ms
  19: Qt::QHash                        92.565  /   88.033  /  100.128    -     462.8 ms
  20: ulib/open-hash                   94.843  /   84.240  /  109.815    -     474.2 ms
  21: libCDS/HashMap                   94.925  /   74.075  /  106.309    -     474.7 ms
  22: Qt::QHash                        97.387  /   77.383  /  113.294    -     487.0 ms
  23: libcfu/hashtable                 98.009  /   85.826  /  115.994    -     519.5 ms
  24: python/hashtable                100.607  /   85.164  /  109.379    -     503.1 ms
  25: emilib::HashMap                 100.622  /   73.546  /  120.953    -     503.2 ms
  26: calg/hashtable                  105.006  /   95.913  /  121.660    -     525.1 ms
  27: amtl::hashmap                   117.034  /  108.897  /  128.516    -     585.2 ms
  28: google/c-sparse                 139.035  /  116.252  /  156.451    -     695.3 ms
  29: std::unordered_map              166.511  /  156.136  /  178.607    -     832.6 ms
  30: boost::unordered_map            166.910  /  144.856  /  187.320    -     834.6 ms
  31: mct::closed_hash_map            182.418  /  178.553  /  185.782    -     912.1 ms
  32: mct::linked_hash_map            201.445  /  185.900  /  208.939    -       1.0 s 
  33: rigtorp::hashmap                230.912  /  207.102  /  249.419    -       1.1 s 
  34: google::densehash               332.233  /  313.638  /  343.506    -       1.6 s 
  35: tbb::concurrent_unordered_map   355.428  /  343.451  /  364.553    -       1.7 s 
  36: google::sparsehash              847.575  /  834.534  /  861.599    -       4.2 s 
  37: oddou::hashmap                  950.101  /  940.138  /  958.305    -       4.7 s 

Results of test [miss] - 1e4 items (5 loops per test)
      Implementation                -   avg         min         max   ms -   elapsed
   1: glib/ghash                       47.878  /   30.400  /   66.719    -     239.4 ms
   2: gcc/hashtab                      53.737  /   30.939  /   72.918    -     268.7 ms
   3: ulib/chain-hash                  55.289  /   47.895  /   62.533    -     276.5 ms
   4: ulib::open-hash++                56.057  /   47.505  /   67.993    -     280.3 ms
   5: ulib::chain-hash++               62.873  /   51.815  /   74.169    -     314.4 ms
   6: hashit/overflow                  69.301  /   56.238  /   81.671    -     346.5 ms
   7: libevent/ht                      70.345  /   46.311  /   89.486    -     351.7 ms
   8: tommyds/linear                   71.698  /   59.822  /   87.374    -     358.5 ms
   9: apr/hashtable                    77.074  /   68.780  /   83.405    -     385.4 ms
  10: clark/hashtable                  77.692  /   64.743  /   95.373    -     388.5 ms
  11: tommyds/dynamic                  81.195  /   53.277  /  103.300    -     406.0 ms
  12: hashit/chain                     81.674  /   74.398  /   94.558    -     408.4 ms
  13: google/c-dense                   82.394  /   69.782  /   94.714    -     412.0 ms
  14: apr-no-pool/hashtable            84.481  /   73.962  /   91.714    -     422.4 ms
  15: hashit/open                      87.930  /   76.763  /   99.724    -     439.7 ms
  16: Qt::QHash                        90.118  /   77.686  /  113.777    -     450.6 ms
  17: Qt::QHash                        90.298  /   67.109  /  124.738    -     451.5 ms
  18: rdestl::hash_map                 92.839  /   66.415  /  114.440    -     464.2 ms
  19: python/hashtable                 96.262  /   78.316  /  110.758    -     481.4 ms
  20: calg/hashtable                   98.257  /   85.220  /  114.454    -     491.3 ms
  21: libCDS/HashMap                   99.081  /   81.144  /  114.980    -     495.5 ms
  22: uthash/hashtable                107.146  /   86.606  /  115.657    -     535.8 ms
  23: klib/khash                      108.707  /   86.784  /  123.278    -     543.6 ms
  24: emilib::HashMap                 110.206  /   93.467  /  123.282    -     551.1 ms
  25: ulib/open-hash                  113.052  /  100.344  /  123.565    -     565.3 ms
  26: libcfu/hashtable                113.071  /   87.044  /  127.112    -     565.4 ms
  27: amtl::hashmap                   127.856  /  103.260  /  150.075    -     639.3 ms
  28: google/c-sparse                 133.168  /  122.141  /  142.925    -     665.9 ms
  29: std::unordered_map              160.774  /  142.309  /  174.238    -     803.9 ms
  30: boost::unordered_map            163.467  /  147.988  /  174.639    -     817.4 ms
  31: mct::closed_hash_map            187.541  /  169.034  /  213.142    -     937.7 ms
  32: mct::linked_hash_map            208.322  /  197.406  /  214.916    -       1.0 s 
  33: rigtorp::hashmap                245.051  /  240.412  /  256.023    -       1.2 s 
  34: google::densehash               314.408  /  300.624  /  323.743    -       1.5 s 
  35: tbb::concurrent_unordered_map   343.991  /  332.593  /  352.562    -       1.7 s 
  36: google::sparsehash              794.630  /  776.245  /  805.271    -       3.9 s 
  37: oddou::hashmap                 1118.937  / 1108.055  / 1134.405    -       5.5 s 

Results of test [delete] - 1e4 items (5 loops per test)
      Implementation                -   avg         min         max   ms -   elapsed
   1: gcc/hashtab                      46.261  /   32.047  /   57.499    -     231.3 ms
   2: ulib::open-hash++                49.201  /   29.368  /   66.866    -     246.0 ms
   3: glib/ghash                       49.763  /   39.741  /   57.147    -     248.8 ms
   4: ulib::chain-hash++               51.355  /   45.694  /   62.950    -     256.8 ms
   5: apr/hashtable                    51.856  /   37.733  /   71.939    -     288.3 ms
   6: ulib/chain-hash                  54.699  /   47.178  /   62.988    -     273.5 ms
   7: hashit/chain                     61.277  /   55.885  /   66.562    -     306.4 ms
   8: apr-no-pool/hashtable            61.998  /   52.042  /   76.171    -     310.0 ms
   9: hashit/overflow                  62.239  /   52.232  /   80.393    -     311.2 ms
  10: clark/hashtable                  76.489  /   59.812  /  108.393    -     390.5 ms
  11: libevent/ht                      78.107  /   57.493  /   90.562    -     390.6 ms
  12: ulib/open-hash                   80.614  /   55.287  /   91.051    -     403.1 ms
  13: Qt::QHash                        85.019  /   69.904  /   98.435    -     425.1 ms
  14: emilib::HashMap                  85.461  /   72.225  /   94.312    -     427.3 ms
  15: Qt::QHash                        85.946  /   72.413  /   92.309    -     429.8 ms
  16: klib/khash                       87.126  /   73.885  /   95.572    -     435.7 ms
  17: tommyds/linear                   89.024  /   72.931  /  101.607    -     445.2 ms
  18: rdestl::hash_map                 89.346  /   73.866  /  101.304    -     446.8 ms
  19: hashit/open                      90.769  /   58.418  /  111.986    -     453.9 ms
  20: uthash/hashtable                 91.157  /   75.800  /   98.378    -     462.3 ms
  21: libCDS/HashMap                   91.175  /   73.604  /  105.628    -     455.9 ms
  22: tommyds/dynamic                  92.469  /   68.495  /  127.900    -     462.4 ms
  23: calg/hashtable                   95.660  /   81.462  /  112.800    -     478.3 ms
  24: libcfu/hashtable                106.263  /   92.036  /  121.147    -     531.4 ms
  25: python/hashtable                109.728  /   96.235  /  127.897    -     548.7 ms
  26: google/c-dense                  115.480  /  101.819  /  124.073    -     577.4 ms
  27: amtl::hashmap                   128.288  /  100.795  /  154.016    -     641.5 ms
  28: boost::unordered_map            165.162  /  148.730  /  196.762    -     825.8 ms
  29: std::unordered_map              170.765  /  143.235  /  192.491    -     853.9 ms
  30: mct::closed_hash_map            176.251  /  165.090  /  184.275    -     881.3 ms
  31: google/c-sparse                 185.153  /  168.329  /  201.874    -     925.8 ms
  32: mct::linked_hash_map            192.199  /  174.266  /  202.351    -     961.0 ms
  33: rigtorp::hashmap                295.911  /  280.801  /  318.870    -       1.4 s 
  34: google::densehash               368.053  /  342.838  /  393.615    -       1.8 s 
  35: tbb::concurrent_unordered_map   554.854  /  546.971  /  565.546    -       2.7 s 
  36: google::sparsehash              969.577  /  949.866  /  989.867    -       4.8 s 
  37: oddou::hashmap                 1413.349  / 1401.776  / 1425.132    -       7.0 s 

Results of test [replace] - 1e4 items (5 loops per test)
      Implementation                -   avg         min         max   ms -   elapsed
   1: google::sparsehash             3020.081  / 2993.685  / 3044.723    -      15.1 s 
   2: glib/ghash                       87.150  /   69.810  /  101.247    -     435.8 ms
   3: ulib::open-hash++                89.238  /   67.716  /  107.337    -     446.2 ms
   4: ulib::chain-hash++               96.323  /   87.607  /  106.112    -     481.7 ms
   5: gcc/hashtab                      98.813  /   94.397  /  104.277    -     494.1 ms
   6: ulib/chain-hash                 112.687  /   97.723  /  132.658    -     567.6 ms
   7: apr/hashtable                   114.852  /   90.519  /  141.039    -     574.3 ms
   8: hashit/chain                    125.229  /  107.795  /  148.032    -     626.2 ms
   9: tommyds/dynamic                 125.481  /  112.244  /  140.131    -     627.5 ms
  10: tommyds/linear                  126.638  /  110.264  /  141.583    -     633.2 ms
  11: libCDS/HashMap                  135.242  /  122.170  /  149.085    -     676.3 ms
  12: libevent/ht                     136.479  /  126.606  /  152.357    -     682.4 ms
  13: apr-no-pool/hashtable           139.273  /  130.418  /  152.632    -     696.4 ms
  14: calg/hashtable                  148.117  /  134.406  /  162.528    -     740.6 ms
  15: python/hashtable                149.923  /  132.321  /  163.620    -     749.7 ms
  16: clark/hashtable                 152.794  /  131.222  /  165.727    -     764.0 ms
  17: Qt::QHash                       157.924  /  137.748  /  180.762    -     789.7 ms
  18: Qt::QHash                       158.260  /  149.523  /  169.632    -     791.3 ms
  19: google/c-dense                  165.343  /  153.808  /  185.027    -     826.8 ms
  20: libcfu/hashtable                179.004  /  160.529  /  191.770    -     895.1 ms
  21: klib/khash                      182.935  /  161.897  /  213.323    -     914.7 ms
  22: ulib/open-hash                  183.357  /  151.658  /  196.525    -     916.8 ms
  23: uthash/hashtable                188.097  /  180.208  /  194.850    -     940.5 ms
  24: rdestl::hash_map                189.677  /  175.667  /  206.499    -     948.4 ms
  25: google/c-sparse                 249.515  /  235.822  /  264.425    -       1.2 s 
  26: hashit/open                     260.885  /  249.129  /  271.793    -       1.3 s 
  27: amtl::hashmap                   264.124  /  249.848  /  275.194    -       1.3 s 
  28: mct::closed_hash_map            298.011  /  274.726  /  313.653    -       1.4 s 
  29: mct::linked_hash_map            326.582  /  310.381  /  340.897    -       1.6 s 
  30: boost::unordered_map            337.371  /  311.878  /  356.101    -       1.6 s 
  31: std::unordered_map              344.756  /  328.819  /  364.842    -       1.7 s 
  32: emilib::HashMap                 403.642  /  384.609  /  414.640    -       2.0 s 
  33: rigtorp::hashmap                629.486  /  606.917  /  644.333    -       3.1 s 
  34: google::densehash               857.231  /  845.143  /  864.456    -       4.2 s 
  35: tbb::concurrent_unordered_map   953.696  /  926.263  /  971.469    -       4.7 s 
  36: oddou::hashmap                 2373.060  / 2356.001  / 2401.041    -      11.8 s 
  37: hashit/overflow                 209.058  /  193.723  /  223.611    -       1.0 s 

Results of test [kbench] - 1e4 items (5 loops per test)
      Implementation                -   avg         min         max   ms -   elapsed
   1: gcc/hashtab                      53.799  /   31.367  /   72.161    -     269.0 ms
   2: glib/ghash                       56.882  /   43.837  /   71.940    -     284.4 ms
   3: ulib::chain-hash++               57.757  /   33.677  /   83.847    -     288.8 ms
   4: apr/hashtable                    60.200  /   55.038  /   64.828    -     301.0 ms
   5: ulib/chain-hash                  60.875  /   48.149  /   75.058    -     304.4 ms
   6: ulib::open-hash++                64.537  /   52.727  /   77.365    -     322.7 ms
   7: apr-no-pool/hashtable            65.235  /   56.003  /   69.472    -     326.2 ms
   8: hashit/chain                     68.790  /   62.151  /   79.062    -     344.0 ms
   9: hashit/overflow                  74.763  /   47.443  /   96.968    -     373.9 ms
  10: libevent/ht                      89.121  /   68.446  /   99.288    -     445.7 ms
  11: clark/hashtable                  96.078  /   79.977  /  105.412    -     480.4 ms
  12: tommyds/dynamic                  97.096  /   76.422  /  107.945    -     509.6 ms
  13: klib/khash                       97.386  /   89.831  /  102.994    -     487.0 ms
  14: ulib/open-hash                   97.658  /   89.606  /  110.813    -     488.3 ms
  15: libCDS/HashMap                   99.217  /   77.823  /  125.954    -     496.1 ms
  16: tommyds/linear                   99.276  /   86.207  /  105.257    -     496.4 ms
  17: Qt::QHash                       100.395  /   89.300  /  117.030    -     502.0 ms
  18: uthash/hashtable                100.697  /   81.917  /  118.159    -     503.5 ms
  19: emilib::HashMap                 101.276  /   82.507  /  121.644    -     506.4 ms
  20: rdestl::hash_map                104.025  /   94.468  /  111.146    -     520.2 ms
  21: hashit/open                     108.979  /   85.745  /  122.087    -     544.9 ms
  22: libcfu/hashtable                109.456  /   93.800  /  118.977    -     547.3 ms
  23: Qt::QHash                       110.988  /   95.620  /  132.697    -     555.0 ms
  24: calg/hashtable                  111.758  /   97.330  /  129.831    -     558.8 ms
  25: python/hashtable                122.017  /  113.062  /  129.892    -     610.1 ms
  26: google/c-dense                  127.528  /  110.663  /  139.634    -     637.7 ms
  27: amtl::hashmap                   153.688  /  137.577  /  174.183    -     768.5 ms
  28: boost::unordered_map            189.049  /  169.611  /  202.507    -     958.8 ms
  29: std::unordered_map              196.637  /  186.022  /  209.432    -     983.2 ms
  30: mct::closed_hash_map            198.891  /  183.883  /  208.190    -     994.5 ms
  31: google/c-sparse                 201.670  /  196.086  /  206.625    -       1.0 s 
  32: mct::linked_hash_map            218.923  /  197.704  /  245.106    -       1.0 s 
  33: rigtorp::hashmap                312.749  /  306.169  /  322.970    -       1.5 s 
  34: google::densehash               442.540  /  432.505  /  459.112    -       2.2 s 
  35: tbb::concurrent_unordered_map   657.670  /  651.488  /  671.012    -       3.2 s 
  36: google::sparsehash             1277.329  / 1269.586  / 1284.112    -       6.3 s 
  37: oddou::hashmap                 1568.898  / 1551.717  / 1587.118    -       7.8 s 
