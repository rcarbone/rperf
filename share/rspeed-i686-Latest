Linux nuc 3.2.0-4-amd64 #1 SMP Debian 3.2.89-2 x86_64

Evaluate average wall-time elapsed repeating 10 times the same test with 100000 items per test

Tests to run: 6 over 49 implementations
  1: grow    (Add items to an empty container)
  2: hit     (Find existing items            )
  3: miss    (Search non existing items      )
  4: delete  (Delete existing items          )
  5: replace (Replace existing items         )
  6: kbench  (Delete if found, add otherwise )

To run #10 times each with #100000 items
[1] Running grow ...... Done! over #49 implementations - Elapsed  11.5  s
[2] Running hit ....... Done! over #49 implementations - Elapsed  17.4  s
[3] Running miss ...... Done! over #49 implementations - Elapsed  17.3  s
[4] Running delete .... Done! over #49 implementations - Elapsed  18.4  s
[5] Running replace ... Done! over #49 implementations - Elapsed  47.5  s
[6] Running kbench .... Done! over #49 implementations - Elapsed  22.1  s

                              H a l l   o f   F a m e

Results of test [grow] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: tommyds/fixed             5.202  /    5.082  /    5.580    -      52.0 ms
   2: ccan/htable               6.927  /    6.868  /    7.076    -      69.2 ms
   3: gcc/hashtab               7.489  /    7.322  /    7.604    -      74.9 ms
   4: glib/ghash                9.263  /    8.929  /   10.067    -      92.6 ms
   5: hashit/overflow          10.688  /    9.967  /   12.291    -     106.9 ms
   6: tommyds/dynamic          10.689  /   10.374  /   11.882    -     106.9 ms
   7: tommyds/linear           10.956  /   10.844  /   11.196    -     109.5 ms
   8: libevent/ht              11.073  /   10.876  /   11.426    -     110.7 ms
   9: Tcl/hashtable            11.822  /    7.783  /   17.492    -     118.2 ms
  10: hashit/open              11.996  /   11.664  /   12.472    -     119.9 ms
  11: rdestl::hash_map         12.988  /   12.258  /   13.620    -     129.9 ms
  12: amtl::hashmap            13.904  /   12.165  /   14.387    -     139.0 ms
  13: ulib/chain-hash          14.141  /   13.962  /   14.483    -     141.4 ms
  14: google::densehash        14.729  /   14.600  /   14.957    -     147.3 ms
  15: emilib::HashMap          15.123  /   14.903  /   15.686    -     151.2 ms
  16: google/c-dense           15.277  /   15.031  /   15.662    -     152.7 ms
  17: libghthash/hashtable     18.102  /   17.756  /   18.941    -     181.0 ms
  18: apr/hashtable            19.734  /   19.498  /   20.066    -     197.3 ms
  19: klib/khash               20.343  /   20.047  /   20.732    -     203.4 ms
  20: Qt::QHash                22.617  /   22.323  /   22.995    -     226.1 ms
  21: python/hashtable         23.047  /   22.666  /   23.634    -     230.5 ms
  22: judy/JSL                 23.290  /   23.212  /   23.359    -     232.9 ms
  23: PeterMoore/st            23.398  /   22.765  /   24.185    -     234.0 ms
  24: hashit/chain             23.650  /   23.052  /   24.219    -     236.5 ms
  25: libCDS/HashMap           23.730  /   23.268  /   24.271    -     237.3 ms
  26: uthash/hashtable         24.005  /   23.577  /   24.697    -     240.0 ms
  27: eastl::hashmap           24.283  /   23.881  /   24.854    -     242.8 ms
  28: ulib/open-hash           24.741  /   24.297  /   25.023    -     247.4 ms
  29: ulib::align-hash++       24.852  /   24.743  /   25.162    -     248.5 ms
  30: calg/hashtable           25.393  /   24.283  /   26.506    -     253.9 ms
  31: rigtorp::hashmap         25.698  /   25.545  /   25.876    -     257.0 ms
  32: mct::closed_hash_map     25.800  /   24.970  /   28.213    -     258.0 ms
  33: std::unordered_map       25.990  /   25.512  /   26.868    -     259.9 ms
  34: apr-no-pool/hashtable    26.641  /   26.205  /   27.075    -     266.4 ms
  35: mct::linked_hash_map     26.995  /   24.167  /   28.055    -     269.9 ms
  36: klib::khash++            27.063  /   26.775  /   27.437    -     270.6 ms
  37: clark/hashtable          27.351  /   26.775  /   29.775    -     273.5 ms
  38: libdynamic/map           28.937  /   28.712  /   29.163    -     289.3 ms
  39: ulib::chain-hash++       29.206  /   28.402  /   30.136    -     292.0 ms
  40: boost::unordered_map     29.905  /   29.379  /   30.644    -     299.0 ms
  41: ulib::open-hash++        30.594  /   30.262  /   31.774    -     305.9 ms
  42: stb/sdict                30.826  /   30.415  /   31.413    -     308.2 ms
  43: python/dict              31.814  /   29.180  /   34.682    -     318.1 ms
  44: tbb::unordered_map       40.417  /   38.129  /   51.733    -     404.2 ms
  45: google/c-sparse          40.965  /   40.621  /   41.792    -     409.6 ms
  46: ulib/align-hash          41.626  /   38.137  /   52.855    -     416.2 ms
  47: oddou::hashmap           51.774  /   51.480  /   52.110    -     517.7 ms
  48: google::sparsehash       52.446  /   52.152  /   53.120    -     524.4 ms
  49: libcfu/hashtable         62.208  /   61.514  /   64.348    -     622.1 ms

Results of test [hit] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              11.837  /   11.706  /   12.039    -     118.4 ms
   2: tommyds/fixed            14.080  /   13.689  /   15.520    -     140.8 ms
   3: glib/ghash               14.396  /   14.125  /   15.443    -     143.9 ms
   4: rdestl::hash_map         15.510  /   15.306  /   16.017    -     155.1 ms
   5: gcc/hashtab              16.204  /   15.796  /   18.078    -     162.0 ms
   6: libevent/ht              16.624  /   16.454  /   17.114    -     166.2 ms
   7: tommyds/dynamic          18.472  /   17.225  /   21.279    -     184.7 ms
   8: amtl::hashmap            18.618  /   18.466  /   18.844    -     186.2 ms
   9: ulib/chain-hash          19.099  /   18.966  /   19.385    -     191.0 ms
  10: emilib::HashMap          19.433  /   19.273  /   19.563    -     194.3 ms
  11: google::densehash        19.655  /   19.485  /   20.065    -     196.5 ms
  12: tommyds/linear           19.983  /   18.990  /   20.444    -     199.8 ms
  13: hashit/overflow          21.430  /   21.026  /   22.558    -     214.3 ms
  14: google/c-dense           22.967  /   22.699  /   23.499    -     229.6 ms
  15: libghthash/hashtable     24.827  /   24.531  /   25.356    -     248.3 ms
  16: apr/hashtable            25.168  /   24.831  /   25.451    -     251.7 ms
  17: hashit/open              26.066  /   25.326  /   27.897    -     260.6 ms
  18: Tcl/hashtable            27.115  /   23.879  /   29.363    -     271.1 ms
  19: python/hashtable         28.696  /   28.163  /   30.144    -     286.9 ms
  20: Qt::QHash                28.822  /   28.558  /   29.037    -     288.2 ms
  21: libCDS/HashMap           28.898  /   28.545  /   29.495    -     289.0 ms
  22: eastl::hashmap           29.742  /   29.412  /   30.093    -     297.4 ms
  23: judy/JSL                 29.796  /   29.631  /   30.247    -     297.9 ms
  24: calg/hashtable           30.055  /   29.742  /   30.402    -     300.5 ms
  25: mct::closed_hash_map     30.476  /   30.324  /   30.775    -     304.7 ms
  26: ulib/open-hash           32.093  /   30.375  /   39.002    -     320.9 ms
  27: klib/khash               32.802  /   32.284  /   33.221    -     328.0 ms
  28: PeterMoore/st            33.506  /   29.312  /   42.717    -     335.0 ms
  29: apr-no-pool/hashtable    33.821  /   32.045  /   41.900    -     338.2 ms
  30: std::unordered_map       33.942  /   33.514  /   34.511    -     339.4 ms
  31: mct::linked_hash_map     34.241  /   29.798  /   40.339    -     342.4 ms
  32: rigtorp::hashmap         35.854  /   33.993  /   37.189    -     358.5 ms
  33: hashit/chain             36.573  /   35.362  /   37.575    -     365.7 ms
  34: uthash/hashtable         36.616  /   36.302  /   37.024    -     366.1 ms
  35: klib::khash++            36.967  /   36.412  /   37.517    -     369.7 ms
  36: libdynamic/map           37.818  /   36.852  /   40.315    -     378.2 ms
  37: clark/hashtable          37.866  /   37.209  /   38.522    -     378.6 ms
  38: ulib::align-hash++       40.114  /   38.950  /   41.223    -     401.1 ms
  39: boost::unordered_map     41.893  /   40.466  /   46.677    -     418.9 ms
  40: ulib::open-hash++        46.134  /   44.523  /   56.030    -     461.3 ms
  41: stb/sdict                47.498  /   45.027  /   57.729    -     475.0 ms
  42: google/c-sparse          47.657  /   47.151  /   48.533    -     476.5 ms
  43: python/dict              51.007  /   46.561  /   62.958    -     510.1 ms
  44: oddou::hashmap           59.758  /   59.433  /   60.175    -     597.6 ms
  45: tbb::unordered_map       60.495  /   59.873  /   61.140    -     604.9 ms
  46: ulib/align-hash          61.322  /   59.690  /   62.247    -     613.2 ms
  47: google::sparsehash       71.601  /   71.144  /   71.847    -     716.0 ms
  48: libcfu/hashtable         77.640  /   77.357  /   78.481    -     776.4 ms
  49: ulib::chain-hash++      159.458  /  153.130  /  176.814    -       1.5  s

Results of test [miss] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              11.917  /   11.860  /   12.020    -     119.1 ms
   2: rdestl::hash_map         15.001  /   14.896  /   15.303    -     150.0 ms
   3: glib/ghash               16.142  /   15.833  /   18.082    -     161.4 ms
   4: tommyds/fixed            16.360  /   15.863  /   17.154    -     163.6 ms
   5: ulib::chain-hash++       17.741  /   17.282  /   19.798    -     177.4 ms
   6: gcc/hashtab              17.974  /   17.560  /   18.702    -     179.7 ms
   7: libevent/ht              18.086  /   17.391  /   20.829    -     180.8 ms
   8: tommyds/dynamic          18.516  /   18.144  /   19.198    -     185.1 ms
   9: amtl::hashmap            18.656  /   18.413  /   19.103    -     186.5 ms
  10: google::densehash        18.815  /   18.665  /   19.084    -     188.1 ms
  11: emilib::HashMap          19.662  /   19.532  /   19.826    -     196.6 ms
  12: ulib/chain-hash          20.510  /   20.135  /   20.926    -     205.1 ms
  13: tommyds/linear           21.026  /   20.581  /   21.744    -     210.2 ms
  14: hashit/overflow          23.307  /   22.768  /   24.074    -     233.0 ms
  15: google/c-dense           24.517  /   24.002  /   25.180    -     245.1 ms
  16: libghthash/hashtable     24.900  /   24.589  /   25.333    -     249.0 ms
  17: apr/hashtable            26.112  /   24.516  /   31.622    -     261.1 ms
  18: Tcl/hashtable            26.536  /   25.554  /   28.467    -     265.4 ms
  19: python/hashtable         29.622  /   27.570  /   37.958    -     296.2 ms
  20: libCDS/HashMap           29.822  /   29.355  /   30.472    -     298.2 ms
  21: judy/JSL                 29.895  /   29.769  /   29.991    -     298.9 ms
  22: eastl::hashmap           30.491  /   30.002  /   31.217    -     304.9 ms
  23: mct::linked_hash_map     30.543  /   30.112  /   31.137    -     305.4 ms
  24: Qt::QHash                30.976  /   30.502  /   31.667    -     309.7 ms
  25: calg/hashtable           31.177  /   30.802  /   31.476    -     311.7 ms
  26: PeterMoore/st            31.230  /   31.007  /   31.475    -     312.3 ms
  27: ulib/open-hash           31.399  /   30.984  /   32.209    -     314.0 ms
  28: ulib::open-hash++        31.783  /   31.621  /   32.099    -     317.8 ms
  29: mct::closed_hash_map     32.654  /   31.551  /   36.621    -     326.5 ms
  30: apr-no-pool/hashtable    33.571  /   32.116  /   39.174    -     335.7 ms
  31: clark/hashtable          37.367  /   36.997  /   38.202    -     373.7 ms
  32: klib::khash++            38.009  /   37.234  /   41.511    -     380.1 ms
  33: hashit/open              38.121  /   37.403  /   38.750    -     381.2 ms
  34: hashit/chain             38.841  /   37.206  /   40.289    -     388.4 ms
  35: rigtorp::hashmap         39.247  /   38.841  /   40.483    -     392.4 ms
  36: uthash/hashtable         39.392  /   38.813  /   41.290    -     393.9 ms
  37: std::unordered_map       39.431  /   36.192  /   46.648    -     394.3 ms
  38: ulib::align-hash++       39.571  /   39.438  /   39.900    -     395.7 ms
  39: libdynamic/map           42.212  /   41.949  /   42.732    -     422.1 ms
  40: boost::unordered_map     44.354  /   43.108  /   49.041    -     443.5 ms
  41: google/c-sparse          47.356  /   46.119  /   56.135    -     473.5 ms
  42: klib/khash               47.806  /   47.407  /   48.385    -     478.0 ms
  43: stb/sdict                49.143  /   48.493  /   50.063    -     491.4 ms
  44: python/dict              57.549  /   54.227  /   60.538    -     575.5 ms
  45: oddou::hashmap           65.824  /   61.066  /   73.443    -     658.2 ms
  46: google::sparsehash       65.853  /   65.668  /   66.172    -     658.5 ms
  47: tbb::unordered_map       65.950  /   64.998  /   67.958    -     659.5 ms
  48: libcfu/hashtable         73.761  /   73.158  /   75.521    -     737.6 ms
  49: ulib/align-hash         132.002  /  127.157  /  139.396    -       1.3  s

Results of test [delete] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: tommyds/fixed            12.730  /   12.298  /   14.320    -     127.3 ms
   2: ccan/htable              13.187  /   13.056  /   13.490    -     131.8 ms
   3: gcc/hashtab              13.611  /   13.392  /   13.986    -     136.1 ms
   4: ulib/chain-hash          15.090  /   14.627  /   15.558    -     150.9 ms
   5: rdestl::hash_map         15.248  /   14.991  /   15.965    -     152.5 ms
   6: glib/ghash               15.646  /   15.559  /   15.715    -     156.4 ms
   7: apr/hashtable            15.798  /   15.497  /   16.385    -     158.0 ms
   8: apr-no-pool/hashtable    17.434  /   17.261  /   17.731    -     174.3 ms
   9: amtl::hashmap            18.821  /   18.476  /   19.375    -     188.2 ms
  10: libghthash/hashtable     18.963  /   18.836  /   19.280    -     189.6 ms
  11: libevent/ht              19.022  /   18.787  /   19.551    -     190.2 ms
  12: emilib::HashMap          19.222  /   19.031  /   19.518    -     192.2 ms
  13: tommyds/linear           19.420  /   19.095  /   20.372    -     194.2 ms
  14: hashit/overflow          19.707  /   19.175  /   20.165    -     197.0 ms
  15: google::densehash        20.073  /   19.930  /   20.253    -     200.7 ms
  16: tommyds/dynamic          20.115  /   18.040  /   25.411    -     201.1 ms
  17: libCDS/HashMap           25.035  /   24.756  /   25.425    -     250.3 ms
  18: eastl::hashmap           25.848  /   25.536  /   26.223    -     258.5 ms
  19: hashit/chain             26.164  /   25.133  /   27.712    -     261.6 ms
  20: klib/khash               26.557  /   26.214  /   26.998    -     265.6 ms
  21: python/hashtable         26.600  /   26.208  /   27.247    -     266.0 ms
  22: calg/hashtable           27.152  /   26.722  /   27.713    -     271.5 ms
  23: PeterMoore/st            27.269  /   26.853  /   27.789    -     272.7 ms
  24: Qt::QHash                27.478  /   26.934  /   28.638    -     274.8 ms
  25: Tcl/hashtable            28.105  /   27.014  /   29.812    -     281.0 ms
  26: ulib/open-hash           28.501  /   28.219  /   29.032    -     285.0 ms
  27: google/c-dense           30.289  /   29.944  /   30.885    -     302.9 ms
  28: mct::closed_hash_map     31.989  /   31.599  /   32.610    -     319.9 ms
  29: clark/hashtable          32.240  /   31.778  /   33.205    -     322.4 ms
  30: mct::linked_hash_map     32.299  /   31.365  /   32.902    -     323.0 ms
  31: std::unordered_map       33.942  /   33.481  /   35.047    -     339.4 ms
  32: klib::khash++            35.487  /   34.668  /   36.228    -     354.8 ms
  33: ulib::align-hash++       35.877  /   35.631  /   36.557    -     358.7 ms
  34: uthash/hashtable         36.318  /   35.671  /   37.296    -     363.1 ms
  35: ulib::open-hash++        40.927  /   40.062  /   42.346    -     409.3 ms
  36: rigtorp::hashmap         40.941  /   40.646  /   41.148    -     409.4 ms
  37: libdynamic/map           41.366  /   41.235  /   41.541    -     413.6 ms
  38: judy/JSL                 44.133  /   43.722  /   44.479    -     441.3 ms
  39: boost::unordered_map     44.194  /   43.525  /   45.510    -     441.9 ms
  40: ulib/align-hash          46.029  /   45.476  /   46.401    -     460.3 ms
  41: hashit/open              51.886  /   48.581  /   59.895    -     518.8 ms
  42: python/dict              60.731  /   57.201  /   64.408    -     607.3 ms
  43: google/c-sparse          62.883  /   62.534  /   63.574    -     628.8 ms
  44: libcfu/hashtable         64.526  /   63.796  /   65.713    -     645.2 ms
  45: google::sparsehash       72.804  /   72.050  /   73.903    -     728.0 ms
  46: oddou::hashmap           83.226  /   82.871  /   83.773    -     832.2 ms
  47: tbb::unordered_map       87.297  /   86.466  /   89.743    -     873.0 ms
  48: stb/sdict                95.267  /   93.796  /   97.141    -     952.7 ms
  49: ulib::chain-hash++      194.395  /  182.745  /  211.241    -       1.9  s

Results of test [replace] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              25.669  /   25.526  /   25.804    -     256.7 ms
   2: rdestl::hash_map         27.075  /   26.980  /   27.293    -     270.7 ms
   3: tommyds/fixed            29.763  /   29.415  /   29.974    -     297.6 ms
   4: tommyds/dynamic          31.498  /   31.237  /   31.697    -     315.0 ms
   5: libevent/ht              33.380  /   33.248  /   33.620    -     333.8 ms
   6: tommyds/linear           36.047  /   35.615  /   36.227    -     360.5 ms
   7: apr/hashtable            36.551  /   34.346  /   45.778    -     365.5 ms
   8: emilib::HashMap          37.628  /   37.498  /   37.866    -     376.3 ms
   9: gcc/hashtab              37.868  /   37.689  /   38.212    -     378.7 ms
  10: glib/ghash               39.389  /   37.831  /   44.279    -     393.9 ms
  11: amtl::hashmap            39.702  /   39.225  /   40.372    -     397.0 ms
  12: python/hashtable         43.029  /   42.430  /   43.420    -     430.3 ms
  13: libCDS/HashMap           44.259  /   43.776  /   45.127    -     442.6 ms
  14: Qt::QHash                46.806  /   46.292  /   47.293    -     468.1 ms
  15: apr-no-pool/hashtable    46.926  /   46.602  /   47.148    -     469.2 ms
  16: libghthash/hashtable     47.102  /   46.701  /   47.738    -     471.0 ms
  17: ulib/chain-hash          48.367  /   48.066  /   48.836    -     483.7 ms
  18: calg/hashtable           48.526  /   48.176  /   48.783    -     485.2 ms
  19: eastl::hashmap           48.837  /   48.120  /   49.596    -     488.4 ms
  20: google::densehash        49.564  /   48.409  /   57.024    -     495.6 ms
  21: ulib/open-hash           50.703  /   50.392  /   51.221    -     507.0 ms
  22: google/c-dense           53.335  /   52.080  /   54.579    -     533.3 ms
  23: klib/khash               53.794  /   53.136  /   55.758    -     537.9 ms
  24: Tcl/hashtable            55.848  /   50.396  /   62.617    -     558.5 ms
  25: mct::closed_hash_map     65.489  /   64.795  /   65.951    -     654.9 ms
  26: mct::linked_hash_map     65.914  /   63.945  /   67.017    -     659.1 ms
  27: ulib::open-hash++        66.554  /   65.352  /   67.825    -     665.5 ms
  28: ulib::align-hash++       66.760  /   66.499  /   67.206    -     667.6 ms
  29: PeterMoore/st            66.783  /   66.396  /   67.293    -     667.8 ms
  30: std::unordered_map       67.813  /   67.252  /   68.517    -     678.1 ms
  31: uthash/hashtable         68.132  /   67.211  /   69.408    -     681.3 ms
  32: hashit/chain             69.206  /   68.623  /   69.795    -     692.1 ms
  33: clark/hashtable          70.077  /   68.992  /   71.738    -     700.8 ms
  34: klib::khash++            70.637  /   70.334  /   71.204    -     706.3 ms
  35: ulib/align-hash          81.609  /   81.219  /   81.925    -     816.1 ms
  36: rigtorp::hashmap         82.840  /   82.033  /   87.603    -     828.4 ms
  37: libdynamic/map           82.859  /   82.119  /   83.351    -     828.6 ms
  38: judy/JSL                 84.392  /   83.909  /   84.683    -     843.9 ms
  39: boost::unordered_map     90.118  /   88.384  /   94.204    -     901.2 ms
  40: oddou::hashmap          103.516  /  103.255  /  104.036    -       1.0  s
  41: google/c-sparse         104.956  /  103.629  /  107.083    -       1.0  s
  42: python/dict             109.044  /  103.299  /  114.748    -       1.0  s
  43: libcfu/hashtable        122.129  /  119.953  /  123.187    -       1.2  s
  44: tbb::unordered_map      141.260  /  138.502  /  150.646    -       1.4  s
  45: google::sparsehash      158.262  /  157.375  /  159.667    -       1.5  s
  46: stb/sdict               177.868  /  175.439  /  180.907    -       1.7  s
  47: hashit/open             221.889  /  217.786  /  233.427    -       2.2  s
  48: ulib::chain-hash++      658.862  /  653.993  /  663.247    -       6.5  s
  49: hashit/overflow         841.227  /  835.226  /  871.314    -       8.4  s

Results of test [kbench] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              15.570  /   15.312  /   15.849    -     155.7 ms
   2: rdestl::hash_map         16.927  /   16.768  /   17.015    -     169.2 ms
   3: ulib/chain-hash          16.999  /   16.566  /   19.270    -     170.0 ms
   4: tommyds/fixed            17.108  /   16.901  /   17.277    -     171.1 ms
   5: apr/hashtable            17.429  /   17.285  /   17.602    -     174.3 ms
   6: gcc/hashtab              18.411  /   17.354  /   20.568    -     184.1 ms
   7: glib/ghash               18.551  /   18.417  /   18.778    -     185.5 ms
   8: apr-no-pool/hashtable    20.086  /   19.831  /   20.463    -     200.8 ms
   9: emilib::HashMap          21.114  /   20.777  /   21.525    -     211.1 ms
  10: libghthash/hashtable     21.326  /   21.089  /   21.987    -     213.2 ms
  11: libevent/ht              21.887  /   21.689  /   22.120    -     218.9 ms
  12: google::densehash        22.578  /   21.715  /   26.517    -     225.8 ms
  13: tommyds/dynamic          23.475  /   23.268  /   23.827    -     234.7 ms
  14: tommyds/linear           25.124  /   24.825  /   25.329    -     251.2 ms
  15: amtl::hashmap            25.862  /   25.466  /   26.269    -     258.6 ms
  16: libCDS/HashMap           28.304  /   27.798  /   29.753    -     283.0 ms
  17: Qt::QHash                28.848  /   28.496  /   29.102    -     288.5 ms
  18: hashit/overflow          28.933  /   28.600  /   29.244    -     289.3 ms
  19: eastl::hashmap           29.102  /   28.578  /   29.557    -     291.0 ms
  20: python/hashtable         30.078  /   29.323  /   30.966    -     300.8 ms
  21: klib/khash               30.249  /   29.778  /   30.653    -     302.5 ms
  22: calg/hashtable           30.343  /   30.135  /   30.609    -     303.4 ms
  23: ulib/open-hash           31.743  /   31.552  /   31.974    -     317.4 ms
  24: PeterMoore/st            32.432  /   30.978  /   37.225    -     324.3 ms
  25: hashit/chain             33.079  /   31.943  /   36.183    -     330.8 ms
  26: google/c-dense           34.488  /   34.100  /   34.833    -     344.9 ms
  27: Tcl/hashtable            35.784  /   34.346  /   37.836    -     357.8 ms
  28: std::unordered_map       36.068  /   35.739  /   36.353    -     360.7 ms
  29: clark/hashtable          38.530  /   38.105  /   38.943    -     385.3 ms
  30: mct::linked_hash_map     39.075  /   38.530  /   39.511    -     390.7 ms
  31: mct::closed_hash_map     40.256  /   39.967  /   40.860    -     402.6 ms
  32: klib::khash++            41.013  /   40.141  /   41.742    -     410.1 ms
  33: rigtorp::hashmap         41.848  /   41.654  /   42.098    -     418.5 ms
  34: libdynamic/map           43.215  /   42.815  /   44.257    -     432.1 ms
  35: uthash/hashtable         44.030  /   43.257  /   44.958    -     440.3 ms
  36: judy/JSL                 48.525  /   47.898  /   49.992    -     485.2 ms
  37: boost::unordered_map     48.626  /   48.185  /   49.206    -     486.2 ms
  38: ulib::open-hash++        50.958  /   50.540  /   51.177    -     509.6 ms
  39: ulib::align-hash++       51.152  /   50.740  /   52.521    -     511.5 ms
  40: ulib/align-hash          51.786  /   51.315  /   52.108    -     517.8 ms
  41: hashit/open              62.899  /   62.446  /   63.588    -     629.0 ms
  42: google/c-sparse          69.325  /   68.710  /   70.114    -     693.2 ms
  43: libcfu/hashtable         74.568  /   73.832  /   75.193    -     745.7 ms
  44: google::sparsehash       87.382  /   86.181  /   88.968    -     873.8 ms
  45: python/dict              88.657  /   85.267  /   91.651    -     886.6 ms
  46: oddou::hashmap           90.716  /   90.557  /   90.960    -     907.1 ms
  47: stb/sdict               101.143  /  100.018  /  102.600    -       1.0  s
  48: tbb::unordered_map      101.466  /   99.961  /  102.775    -       1.0  s
  49: ulib::chain-hash++      284.423  /  281.389  /  287.494    -       2.8  s
