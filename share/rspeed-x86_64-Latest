rspeed, ver. 0.1.0 built on Aug  9 2017 21:34:33
Running on  : Linux nuc 3.2.0-4-amd64 #1 SMP Debian 3.2.89-2 x86_64
Current time: Thu Aug 10 00:28:23 2017

Evaluate time elapsed repeating 10 times the same test, each acting with 100000 unique items

Dataset  : unique sequential string keys (char *) and generic pointers (void *) as values
Times    : wall-clock time evaluated at nsecs resolution and rendered in a more human-readable format
Rendering: results are sorted by less average time elapsed

Tests to run: 9
  1: grow_seq (Add items to an empty container) - 9 implementations
  2: grow_rnd (Add items to an empty container) - 9 implementations
  3: hit_seq  (Find existing items            ) - 9 implementations
  4: hit_rnd  (Find existing items            ) - 9 implementations
  5: miss_seq (Search non existing items      ) - 9 implementations
  6: miss_rnd (Search non existing items      ) - 9 implementations
  7: delete   (Delete existing items          ) - 9 implementations
  8: replace  (Replace existing items         ) - 9 implementations
  9: kbench   (Delete if found, add otherwise ) - 9 implementations

[1] Running grow_seq ... Done! #9 implementations - Total elapsed time   3.1  s
[2] Running grow_rnd ... Done! #9 implementations - Total elapsed time   6.1  s
[3] Running hit_seq .... Done! #9 implementations - Total elapsed time   4.4  s
[4] Running hit_rnd .... Done! #9 implementations - Total elapsed time   7.2  s
[5] Running miss_seq ... Done! #9 implementations - Total elapsed time   7.4  s
[6] Running miss_rnd ... Done! #9 implementations - Total elapsed time   4.9  s
[7] Running delete ..... Done! #9 implementations - Total elapsed time   4.5  s
[8] Running replace .... Done! #9 implementations - Total elapsed time   8.8  s
[9] Running kbench ..... Done! #9 implementations - Total elapsed time   5.2  s


                              H a l l   o f   F a m e

Results of test [grow_seq] - 1e5 items (10 loops per test)
      Implementation  -   avg         min         max   ms -   elapsed
   1: glib/ghash         11.941  /   11.100  /   14.311    -     119.4 ms
   2: gcc/hashtab        13.952  /   12.499  /   15.746    -     139.5 ms
   3: libevent/ht        17.649  /   16.950  /   20.622    -     176.5 ms
   4: tommyds/dynamic    20.608  /   17.902  /   25.585    -     206.1 ms
   5: apr/hashtable      27.298  /   26.645  /   27.807    -     273.0 ms
   6: klib/khash         44.410  /   42.180  /   52.632    -     444.1 ms
   7: ulib/open-hash     52.020  /   49.740  /   64.925    -     520.2 ms
   8: ccan/htable        57.789  /   55.745  /   61.266    -     577.9 ms
   9: libdynamic/map     70.611  /   68.441  /   80.765    -     706.1 ms

Results of test [grow_rnd] - 1e5 items (10 loops per test)
      Implementation  -   avg         min         max   ms -   elapsed
   1: gcc/hashtab        36.480  /   33.917  /   44.363    -     364.8 ms
   2: glib/ghash         40.084  /   36.366  /   52.715    -     400.8 ms
   3: libevent/ht        41.679  /   40.039  /   45.584    -     416.8 ms
   4: tommyds/dynamic    44.873  /   41.872  /   49.566    -     448.7 ms
   5: apr/hashtable      63.726  /   62.225  /   67.098    -     637.2 ms
   6: klib/khash         85.346  /   83.055  /   91.099    -     853.4 ms
   7: ulib/open-hash     99.401  /   92.633  /  112.625    -     994.0 ms
   8: libdynamic/map    101.835  /   93.440  /  113.035    -       1.0  s
   9: ccan/htable       103.393  /   99.476  /  108.371    -       1.0  s

Results of test [hit_seq] - 1e5 items (10 loops per test)
      Implementation  -   avg         min         max   ms -   elapsed
   1: glib/ghash         17.150  /   17.052  /   17.273    -     171.5 ms
   2: tommyds/dynamic    28.694  /   27.863  /   29.394    -     286.9 ms
   3: gcc/hashtab        29.356  /   28.330  /   32.113    -     293.5 ms
   4: libevent/ht        31.405  /   30.210  /   34.322    -     314.0 ms
   5: apr/hashtable      36.975  /   35.625  /   41.341    -     369.7 ms
   6: ulib/open-hash     67.474  /   65.722  /   72.433    -     674.7 ms
   7: ccan/htable        69.118  /   66.871  /   74.454    -     691.2 ms
   8: klib/khash         80.190  /   73.800  /   99.183    -     801.9 ms
   9: libdynamic/map     88.320  /   85.539  /   95.545    -     883.2 ms

Results of test [hit_rnd] - 1e5 items (10 loops per test)
      Implementation  -   avg         min         max   ms -   elapsed
   1: glib/ghash         49.490  /   47.197  /   52.631    -     494.9 ms
   2: gcc/hashtab        53.282  /   52.434  /   56.023    -     532.8 ms
   3: libevent/ht        57.658  /   56.351  /   61.083    -     576.6 ms
   4: tommyds/dynamic    59.064  /   57.976  /   61.787    -     590.6 ms
   5: apr/hashtable      66.019  /   64.519  /   73.757    -     660.2 ms
   6: ccan/htable       101.332  /   99.420  /  104.986    -       1.0  s
   7: klib/khash        101.883  /   98.399  /  105.063    -       1.0  s
   8: ulib/open-hash    102.061  /   96.421  /  118.349    -       1.0  s
   9: libdynamic/map    129.703  /  119.779  /  143.875    -       1.2  s

Results of test [miss_seq] - 1e5 items (10 loops per test)
      Implementation  -   avg         min         max   ms -   elapsed
   1: glib/ghash         45.635  /   44.392  /   53.493    -     456.3 ms
   2: tommyds/dynamic    53.882  /   51.676  /   58.330    -     538.8 ms
   3: gcc/hashtab        56.111  /   53.639  /   60.021    -     561.1 ms
   4: libevent/ht        58.374  /   56.471  /   60.839    -     583.7 ms
   5: apr/hashtable      62.564  /   61.373  /   66.382    -     625.6 ms
   6: ulib/open-hash     97.262  /   93.860  /  103.693    -     972.6 ms
   7: ccan/htable        98.159  /   96.538  /  102.128    -     981.6 ms
   8: klib/khash        130.447  /  123.997  /  143.696    -       1.3  s
   9: libdynamic/map    142.558  /  135.463  /  159.557    -       1.4  s

Results of test [miss_rnd] - 1e5 items (10 loops per test)
      Implementation  -   avg         min         max   ms -   elapsed
   1: glib/ghash         19.244  /   19.051  /   19.687    -     192.4 ms
   2: tommyds/dynamic    29.818  /   28.380  /   34.564    -     298.2 ms
   3: libevent/ht        33.206  /   32.237  /   38.228    -     332.0 ms
   4: gcc/hashtab        34.565  /   33.529  /   37.207    -     345.6 ms
   5: apr/hashtable      37.870  /   34.787  /   46.599    -     378.7 ms
   6: ulib/open-hash     67.429  /   64.734  /   70.966    -     674.3 ms
   7: ccan/htable        76.119  /   74.520  /   78.253    -     761.2 ms
   8: klib/khash         93.248  /   90.214  /  103.098    -     932.5 ms
   9: libdynamic/map     99.370  /   96.646  /  105.775    -     993.7 ms

Results of test [delete] - 1e5 items (10 loops per test)
      Implementation  -   avg         min         max   ms -   elapsed
   1: glib/ghash         19.400  /   18.309  /   22.051    -     194.0 ms
   2: apr/hashtable      23.739  /   22.972  /   25.531    -     237.4 ms
   3: gcc/hashtab        27.867  /   26.346  /   30.613    -     278.7 ms
   4: tommyds/dynamic    35.949  /   34.606  /   41.053    -     359.5 ms
   5: libevent/ht        36.736  /   35.541  /   42.525    -     367.3 ms
   6: klib/khash         56.440  /   54.667  /   61.135    -     564.4 ms
   7: ulib/open-hash     63.873  /   60.488  /   71.947    -     638.7 ms
   8: ccan/htable        76.512  /   72.707  /   84.615    -     765.1 ms
   9: libdynamic/map    112.816  /  104.918  /  143.619    -       1.1  s

Results of test [replace] - 1e5 items (10 loops per test)
      Implementation  -   avg         min         max   ms -   elapsed
   1: glib/ghash         50.799  /   48.574  /   54.200    -     508.0 ms
   2: apr/hashtable      53.097  /   51.544  /   56.492    -     531.0 ms
   3: tommyds/dynamic    58.358  /   57.137  /   62.487    -     583.6 ms
   4: gcc/hashtab        67.966  /   65.628  /   74.848    -     679.6 ms
   5: libevent/ht        73.789  /   68.934  /   78.822    -     737.9 ms
   6: ulib/open-hash    111.227  /  106.659  /  124.306    -       1.1  s
   7: klib/khash        113.498  /  108.696  /  125.926    -       1.1  s
   8: ccan/htable       120.943  /  117.413  /  128.583    -       1.2  s
   9: libdynamic/map    230.581  /  217.110  /  243.787    -       2.3  s

Results of test [kbench] - 1e5 items (10 loops per test)
      Implementation  -   avg         min         max   ms -   elapsed
   1: glib/ghash         20.063  /   18.593  /   24.474    -     200.6 ms
   2: tommyds/dynamic    40.559  /   38.473  /   44.910    -     405.6 ms
   3: libevent/ht        45.627  /   43.015  /   54.687    -     456.3 ms
   4: klib/khash         55.322  /   50.686  /   66.301    -     553.2 ms
   5: apr/hashtable      56.722  /   54.488  /   62.676    -     567.2 ms
   6: ulib/open-hash     63.910  /   61.631  /   67.621    -     639.1 ms
   7: libdynamic/map     74.429  /   70.115  /   85.860    -     744.3 ms
   8: gcc/hashtab        78.108  /   73.423  /  104.354    -     781.1 ms
   9: ccan/htable        89.081  /   86.236  /   94.415    -     890.8 ms


                              F i n a l   E v a l u a t i o n

                               Arrival Order per each test executed
      Implementation  | mark | grow_seq | grow_rnd | hit_seq  | hit_rnd  | miss_seq | miss_rnd | delete   | replace  | kbench   |
   1: glib/ghash      |   80 |        1 |        2 |        1 |        1 |        1 |        1 |        1 |        1 |        1 |
   2: tommyds/dynamic |   63 |        4 |        4 |        2 |        4 |        2 |        2 |        4 |        3 |        2 |
   3: gcc/hashtab     |   60 |        2 |        1 |        3 |        2 |        3 |        4 |        3 |        4 |        8 |
   4: libevent/ht     |   57 |        3 |        3 |        4 |        3 |        4 |        3 |        5 |        5 |        3 |
   5: apr/hashtable   |   51 |        5 |        5 |        5 |        5 |        5 |        5 |        2 |        2 |        5 |
   6: ulib/open-hash  |   31 |        7 |        7 |        6 |        8 |        6 |        6 |        7 |        6 |        6 |
   7: klib/khash      |   30 |        6 |        6 |        8 |        7 |        8 |        8 |        6 |        7 |        4 |
   8: ccan/htable     |   21 |        8 |        9 |        7 |        6 |        7 |        7 |        8 |        8 |        9 |
   9: libdynamic/map  |   12 |        9 |        8 |        9 |        9 |        9 |        9 |        9 |        9 |        7 |
