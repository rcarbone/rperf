Linux nuc 3.2.0-4-amd64 #1 SMP Debian 3.2.89-2 x86_64
Sat Aug  5 23:07:55 2017

Evaluate average wall-time elapsed repeating 10 times the same test each acting with 100000 items

Tests to run: 6 over 50 implementations
  1: grow    (Add items to an empty container)
  2: hit     (Find existing items            )
  3: miss    (Search non existing items      )
  4: delete  (Delete existing items          )
  5: replace (Replace existing items         )
  6: kbench  (Delete if found, add otherwise )

To run #10 times each with #100000 items
[1] Running grow ...... Done! over #50 implementations - Elapsed  12.9  s
[2] Running hit ....... Done! over #50 implementations - Elapsed  22.2  s
[3] Running miss ...... Done! over #50 implementations - Elapsed  22.7  s
[4] Running delete .... Done! over #50 implementations - Elapsed  24.7  s
[5] Running replace ... Done! over #50 implementations - Elapsed  53.8  s
[6] Running kbench .... Done! over #50 implementations - Elapsed  21.2  s

                              H a l l   o f   F a m e

Results of test [grow] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: tommyds/fixed             5.787  /    5.643  /    5.938    -      57.8 ms
   2: ccan/htable               7.162  /    7.067  /    7.255    -      71.6 ms
   3: gcc/hashtab               8.999  /    8.289  /   11.084    -      90.0 ms
   4: glib/ghash                9.030  /    8.950  /    9.338    -      90.3 ms
   5: rdestl::hash_map         10.321  /   10.161  /   10.810    -     103.2 ms
   6: tommyds/linear           11.486  /   11.083  /   12.035    -     114.8 ms
   7: tommyds/dynamic          11.584  /   11.012  /   12.026    -     115.8 ms
   8: Tcl C-API/hashtable      11.764  /    8.347  /   17.918    -     117.6 ms
   9: hashit/overflow          12.869  /   12.033  /   15.037    -     128.7 ms
  10: libevent/ht              12.911  /   12.258  /   14.675    -     129.1 ms
  11: hashit/open              13.555  /   13.343  /   14.262    -     135.5 ms
  12: ulib/chain-hash          14.747  /   14.612  /   15.009    -     147.5 ms
  13: amtl::hashmap            14.881  /   13.783  /   15.387    -     148.8 ms
  14: google::densehash        15.653  /   15.529  /   15.803    -     156.5 ms
  15: emilib::HashMap          15.866  /   15.385  /   16.692    -     158.6 ms
  16: google/c-dense           18.341  /   17.870  /   18.694    -     183.4 ms
  17: apr/hashtable            21.720  /   21.571  /   21.978    -     217.2 ms
  18: judy/JSL                 23.353  /   23.217  /   23.657    -     233.5 ms
  19: libghthash/hashtable     23.592  /   22.393  /   27.514    -     235.9 ms
  20: python/hashtable         24.895  /   24.297  /   26.734    -     248.9 ms
  21: PeterMoore/st            24.901  /   24.558  /   25.468    -     249.0 ms
  22: klib/khash               25.031  /   20.521  /   32.839    -     250.3 ms
  23: libCDS/HashMap           25.250  /   24.910  /   26.233    -     252.5 ms
  24: eastl::hashmap           25.727  /   25.469  /   26.221    -     257.3 ms
  25: std::unordered_map       25.757  /   25.524  /   26.000    -     257.6 ms
  26: ulib::align-hash++       26.046  /   24.726  /   31.812    -     260.5 ms
  27: uthash/hashtable         26.204  /   25.803  /   26.814    -     262.0 ms
  28: Qt::QHash                26.302  /   25.390  /   27.273    -     263.0 ms
  29: hashit/chain             26.339  /   26.064  /   26.560    -     263.4 ms
  30: mct::linked_hash_map     26.613  /   26.169  /   26.906    -     266.1 ms
  31: calg/hashtable           27.051  /   26.809  /   27.296    -     270.5 ms
  32: rigtorp::hashmap         27.153  /   27.017  /   27.376    -     271.5 ms
  33: ulib/open-hash           27.698  /   25.592  /   33.761    -     277.0 ms
  34: ulib::chain-hash++       28.800  /   27.868  /   30.147    -     288.0 ms
  35: klib::khash++            29.927  /   29.701  /   30.138    -     299.3 ms
  36: libdynamic/map           30.625  /   30.508  /   30.851    -     306.2 ms
  37: ulib::open-hash++        31.270  /   30.999  /   32.542    -     312.7 ms
  38: apr-no-pool/hashtable    32.589  /   31.551  /   38.401    -     325.9 ms
  39: mct::closed_hash_map     32.594  /   32.435  /   32.820    -     325.9 ms
  40: stb/sdict                32.701  /   32.196  /   34.441    -     327.0 ms
  41: clark/hashtable          32.807  /   32.319  /   33.327    -     328.1 ms
  42: Python C-API/dict        33.775  /   31.182  /   36.923    -     337.7 ms
  43: boost::unordered_map     35.513  /   33.314  /   37.648    -     355.1 ms
  44: redis/dict               37.167  /   36.292  /   41.446    -     371.7 ms
  45: ulib/align-hash          39.309  /   36.872  /   46.883    -     393.1 ms
  46: google/c-sparse          45.220  /   41.277  /   57.230    -     452.2 ms
  47: tbb::unordered_map       46.060  /   39.629  /   60.098    -     460.6 ms
  48: oddou::hashmap           52.619  /   52.359  /   53.402    -     526.2 ms
  49: google::sparsehash       53.544  /   52.998  /   55.667    -     535.4 ms
  50: libcfu/hashtable         75.838  /   73.974  /   84.362    -     758.4 ms

Results of test [hit] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: glib/ghash               15.272  /   14.216  /   16.608    -     152.7 ms
   2: rdestl::hash_map         15.898  /   15.277  /   18.060    -     159.0 ms
   3: tommyds/dynamic          17.660  /   17.253  /   17.772    -     176.6 ms
   4: tommyds/fixed            17.950  /   17.157  /   18.663    -     179.5 ms
   5: gcc/hashtab              18.167  /   17.893  /   19.089    -     181.6 ms
   6: libevent/ht              19.511  /   17.873  /   21.422    -     195.1 ms
   7: amtl::hashmap            19.809  /   19.491  /   21.171    -     198.1 ms
   8: ccan/htable              19.988  /   17.831  /   22.906    -     199.9 ms
   9: google::densehash        20.468  /   20.339  /   20.688    -     204.7 ms
  10: ulib/chain-hash          22.139  /   21.318  /   25.263    -     221.4 ms
  11: emilib::HashMap          25.358  /   21.234  /   32.845    -     253.6 ms
  12: libghthash/hashtable     26.984  /   26.727  /   27.219    -     269.8 ms
  13: tommyds/linear           28.394  /   26.119  /   31.199    -     283.9 ms
  14: Qt::QHash                28.706  /   27.423  /   34.730    -     287.1 ms
  15: apr/hashtable            28.732  /   27.338  /   36.574    -     287.3 ms
  16: google/c-dense           29.546  /   26.101  /   35.087    -     295.5 ms
  17: judy/JSL                 29.725  /   29.623  /   29.915    -     297.2 ms
  18: libCDS/HashMap           30.298  /   29.359  /   31.690    -     303.0 ms
  19: hashit/open              30.595  /   29.214  /   35.539    -     305.9 ms
  20: PeterMoore/st            31.674  /   31.411  /   32.055    -     316.7 ms
  21: klib/khash               32.545  /   31.650  /   33.849    -     325.4 ms
  22: eastl::hashmap           32.548  /   31.329  /   36.368    -     325.5 ms
  23: calg/hashtable           32.856  /   32.667  /   33.072    -     328.5 ms
  24: mct::linked_hash_map     33.342  /   32.604  /   33.802    -     333.4 ms
  25: Tcl C-API/hashtable      33.968  /   26.265  /   40.120    -     339.7 ms
  26: ulib/open-hash           34.517  /   32.697  /   44.122    -     345.2 ms
  27: mct::closed_hash_map     36.168  /   35.062  /   36.703    -     361.7 ms
  28: hashit/overflow          36.534  /   30.309  /   40.577    -     365.3 ms
  29: std::unordered_map       37.041  /   36.662  /   37.560    -     370.4 ms
  30: apr-no-pool/hashtable    38.868  /   32.788  /   50.638    -     388.7 ms
  31: libdynamic/map           38.994  /   37.986  /   42.950    -     389.9 ms
  32: rigtorp::hashmap         39.113  /   34.579  /   47.648    -     391.1 ms
  33: python/hashtable         42.179  /   32.225  /   47.993    -     421.8 ms
  34: clark/hashtable          44.256  /   43.393  /   46.439    -     442.5 ms
  35: redis/dict               44.827  /   43.901  /   48.649    -     448.3 ms
  36: stb/sdict                45.109  /   41.068  /   59.228    -     451.1 ms
  37: hashit/chain             45.668  /   43.231  /   51.611    -     456.7 ms
  38: ulib::open-hash++        47.666  /   45.710  /   54.282    -     476.6 ms
  39: ulib::align-hash++       49.583  /   40.064  /   59.934    -     495.8 ms
  40: uthash/hashtable         50.350  /   35.428  /   57.250    -     503.5 ms
  41: Python C-API/dict        54.741  /   52.829  /   58.152    -     547.4 ms
  42: klib::khash++            57.424  /   51.323  /   67.743    -     574.2 ms
  43: boost::unordered_map     62.606  /   47.101  /   74.458    -     626.1 ms
  44: oddou::hashmap           63.560  /   59.482  /   78.436    -     635.6 ms
  45: google::sparsehash       75.399  /   71.443  /   79.026    -     754.0 ms
  46: tbb::unordered_map       92.698  /   77.625  /  108.381    -     927.0 ms
  47: google/c-sparse          99.862  /   90.497  /  107.008    -     998.6 ms
  48: libcfu/hashtable        104.725  /   86.404  /  132.054    -       1.0  s
  49: ulib/align-hash         116.505  /   70.888  /  148.328    -       1.1  s
  50: ulib::chain-hash++      225.149  /  173.622  /  285.520    -       2.2  s

Results of test [miss] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              12.350  /   12.245  /   12.676    -     123.5 ms
   2: glib/ghash               15.935  /   15.860  /   16.063    -     159.3 ms
   3: ulib::chain-hash++       16.237  /   15.437  /   16.844    -     162.3 ms
   4: rdestl::hash_map         17.472  /   15.038  /   20.782    -     174.7 ms
   5: tommyds/fixed            18.608  /   16.620  /   21.552    -     186.1 ms
   6: gcc/hashtab              19.290  /   18.036  /   21.575    -     192.9 ms
   7: emilib::HashMap          21.700  /   21.104  /   24.421    -     217.0 ms
   8: tommyds/linear           23.659  /   21.837  /   27.140    -     236.6 ms
   9: hashit/overflow          23.856  /   23.733  /   24.101    -     238.5 ms
  10: ulib/chain-hash          23.997  /   19.702  /   33.159    -     240.0 ms
  11: google/c-dense           25.176  /   24.984  /   25.511    -     251.7 ms
  12: tommyds/dynamic          25.507  /   22.211  /   31.838    -     255.1 ms
  13: google::densehash        25.597  /   23.303  /   27.631    -     256.0 ms
  14: python/hashtable         27.182  /   27.096  /   27.351    -     271.8 ms
  15: libghthash/hashtable     28.694  /   27.446  /   31.365    -     286.9 ms
  16: Qt::QHash                31.192  /   30.690  /   32.471    -     311.9 ms
  17: libCDS/HashMap           31.509  /   28.806  /   40.518    -     315.1 ms
  18: ulib::open-hash++        32.098  /   32.007  /   32.184    -     321.0 ms
  19: libevent/ht              32.557  /   26.508  /   36.984    -     325.6 ms
  20: mct::closed_hash_map     33.164  /   31.585  /   42.397    -     331.6 ms
  21: Tcl C-API/hashtable      33.309  /   27.516  /   41.931    -     333.1 ms
  22: ulib/open-hash           33.596  /   31.274  /   41.437    -     335.9 ms
  23: amtl::hashmap            33.982  /   23.611  /   49.839    -     339.8 ms
  24: apr-no-pool/hashtable    35.306  /   32.735  /   39.736    -     353.0 ms
  25: mct::linked_hash_map     35.753  /   34.753  /   37.169    -     357.5 ms
  26: eastl::hashmap           36.475  /   32.795  /   44.511    -     364.7 ms
  27: judy/JSL                 37.011  /   31.149  /   49.987    -     370.1 ms
  28: uthash/hashtable         37.489  /   37.314  /   37.758    -     374.9 ms
  29: clark/hashtable          37.683  /   35.617  /   44.627    -     376.8 ms
  30: klib::khash++            37.929  /   37.334  /   39.893    -     379.3 ms
  31: apr/hashtable            38.569  /   31.434  /   46.456    -     385.7 ms
  32: PeterMoore/st            41.337  /   33.966  /   60.211    -     413.4 ms
  33: google/c-sparse          47.429  /   47.186  /   48.704    -     474.3 ms
  34: calg/hashtable           47.871  /   38.862  /   52.962    -     478.7 ms
  35: hashit/chain             48.002  /   45.081  /   53.330    -     480.0 ms
  36: redis/dict               51.174  /   42.092  /   73.166    -     511.7 ms
  37: std::unordered_map       52.344  /   36.597  /   68.431    -     523.4 ms
  38: hashit/open              53.323  /   43.220  /   77.713    -     533.2 ms
  39: libdynamic/map           54.920  /   46.907  /   65.275    -     549.2 ms
  40: stb/sdict                56.739  /   45.299  /   74.511    -     567.4 ms
  41: rigtorp::hashmap         62.248  /   44.904  /   95.391    -     622.5 ms
  42: boost::unordered_map     70.302  /   48.670  /   78.154    -     703.0 ms
  43: oddou::hashmap           71.001  /   62.373  /   91.944    -     710.0 ms
  44: ulib::align-hash++       74.029  /   47.457  /   89.475    -     740.3 ms
  45: tbb::unordered_map       74.043  /   64.848  /   84.223    -     740.4 ms
  46: Python C-API/dict        76.027  /   64.349  /   95.940    -     760.3 ms
  47: klib/khash               76.233  /   59.010  /   90.393    -     762.3 ms
  48: google::sparsehash       82.908  /   65.530  /  107.508    -     829.1 ms
  49: libcfu/hashtable         85.186  /   72.379  /  111.550    -     851.9 ms
  50: ulib/align-hash         270.590  /  223.724  /  305.152    -       2.7  s

Results of test [delete] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: gcc/hashtab              13.347  /   13.240  /   13.479    -     133.4 ms
   2: ccan/htable              13.475  /   13.401  /   13.582    -     134.7 ms
   3: ulib/chain-hash          16.408  /   16.043  /   17.961    -     164.1 ms
   4: glib/ghash               16.655  /   15.918  /   19.312    -     166.5 ms
   5: apr/hashtable            17.278  /   16.367  /   19.830    -     172.8 ms
   6: apr-no-pool/hashtable    17.796  /   17.593  /   18.350    -     177.9 ms
   7: emilib::HashMap          19.439  /   19.341  /   19.559    -     194.4 ms
   8: tommyds/fixed            19.618  /   15.349  /   23.209    -     196.2 ms
   9: libevent/ht              21.243  /   20.740  /   23.531    -     212.4 ms
  10: rdestl::hash_map         21.944  /   18.272  /   23.376    -     219.4 ms
  11: amtl::hashmap            22.055  /   20.183  /   28.492    -     220.5 ms
  12: hashit/overflow          22.242  /   21.172  /   23.961    -     222.4 ms
  13: eastl::hashmap           25.753  /   25.414  /   27.482    -     257.5 ms
  14: klib/khash               26.434  /   26.313  /   26.577    -     264.3 ms
  15: hashit/chain             26.680  /   26.247  /   29.221    -     266.8 ms
  16: calg/hashtable           26.749  /   26.290  /   28.811    -     267.5 ms
  17: tommyds/dynamic          27.085  /   25.576  /   32.521    -     270.8 ms
  18: libCDS/HashMap           28.220  /   27.562  /   28.648    -     282.2 ms
  19: libghthash/hashtable     28.679  /   23.514  /   33.762    -     286.8 ms
  20: google::densehash        29.068  /   23.721  /   33.367    -     290.7 ms
  21: PeterMoore/st            31.365  /   28.701  /   40.903    -     313.6 ms
  22: python/hashtable         33.156  /   28.074  /   42.758    -     331.5 ms
  23: tommyds/linear           33.443  /   28.340  /   43.951    -     334.4 ms
  24: ulib::align-hash++       36.505  /   35.671  /   39.126    -     365.0 ms
  25: mct::closed_hash_map     37.323  /   37.038  /   37.457    -     373.2 ms
  26: google/c-dense           38.080  /   33.430  /   40.337    -     380.8 ms
  27: clark/hashtable          38.149  /   37.592  /   38.758    -     381.5 ms
  28: Tcl C-API/hashtable      40.301  /   34.039  /   45.673    -     403.0 ms
  29: klib::khash++            41.223  /   37.277  /   48.404    -     412.2 ms
  30: uthash/hashtable         42.315  /   34.822  /   47.877    -     423.1 ms
  31: libdynamic/map           42.470  /   41.501  /   45.555    -     424.7 ms
  32: ulib::open-hash++        43.097  /   38.967  /   54.325    -     431.0 ms
  33: judy/JSL                 44.028  /   43.688  /   45.023    -     440.3 ms
  34: rigtorp::hashmap         44.738  /   41.504  /   50.086    -     447.4 ms
  35: ulib/open-hash           48.205  /   41.508  /   52.351    -     482.0 ms
  36: Qt::QHash                48.213  /   36.667  /   56.732    -     482.1 ms
  37: redis/dict               55.611  /   40.742  /   61.737    -     556.1 ms
  38: ulib/align-hash          56.516  /   47.354  /   68.430    -     565.2 ms
  39: std::unordered_map       57.708  /   51.203  /   66.468    -     577.1 ms
  40: mct::linked_hash_map     59.210  /   46.579  /   74.264    -     592.1 ms
  41: boost::unordered_map     59.254  /   47.669  /   70.531    -     592.5 ms
  42: hashit/open              69.255  /   55.529  /  108.255    -     692.5 ms
  43: Python C-API/dict        72.837  /   61.222  /  100.876    -     728.4 ms
  44: tbb::unordered_map       87.314  /   85.641  /   93.348    -     873.1 ms
  45: oddou::hashmap           87.350  /   82.996  /  104.034    -     873.5 ms
  46: google/c-sparse          94.165  /   63.389  /  128.255    -     941.6 ms
  47: libcfu/hashtable        100.337  /   90.832  /  110.649    -       1.0  s
  48: google::sparsehash      125.791  /   84.668  /  142.192    -       1.2  s
  49: stb/sdict               186.777  /  170.232  /  201.326    -       1.8  s
  50: ulib::chain-hash++      280.588  /  258.830  /  319.280    -       2.8  s

Results of test [replace] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              25.553  /   25.319  /   26.461    -     255.5 ms
   2: tommyds/fixed            27.482  /   27.408  /   27.657    -     274.8 ms
   3: rdestl::hash_map         27.598  /   26.864  /   28.732    -     276.0 ms
   4: tommyds/dynamic          29.386  /   29.178  /   29.595    -     293.8 ms
   5: apr/hashtable            33.024  /   32.547  /   33.674    -     330.2 ms
   6: tommyds/linear           33.557  /   33.338  /   34.276    -     335.5 ms
   7: libevent/ht              35.115  /   33.084  /   40.036    -     351.1 ms
   8: emilib::HashMap          36.329  /   36.213  /   36.474    -     363.3 ms
   9: gcc/hashtab              38.768  /   37.820  /   43.423    -     387.7 ms
  10: python/hashtable         39.367  /   39.206  /   39.693    -     393.6 ms
  11: amtl::hashmap            41.083  /   36.625  /   51.903    -     410.8 ms
  12: libCDS/HashMap           43.680  /   43.010  /   45.075    -     436.8 ms
  13: apr-no-pool/hashtable    47.802  /   47.587  /   48.029    -     478.0 ms
  14: glib/ghash               49.765  /   37.401  /   60.978    -     497.6 ms
  15: calg/hashtable           51.074  /   48.331  /   68.569    -     510.7 ms
  16: Tcl C-API/hashtable      51.273  /   50.143  /   52.882    -     512.7 ms
  17: google/c-dense           51.749  /   49.972  /   53.425    -     517.5 ms
  18: libghthash/hashtable     53.296  /   46.184  /   76.862    -     533.0 ms
  19: ulib/open-hash           54.709  /   53.132  /   57.195    -     547.1 ms
  20: eastl::hashmap           58.933  /   47.873  /   80.006    -     589.3 ms
  21: hashit/chain             61.194  /   60.909  /   61.818    -     611.9 ms
  22: ulib/chain-hash          62.949  /   49.085  /   70.604    -     629.5 ms
  23: ulib::align-hash++       64.522  /   64.282  /   64.834    -     645.2 ms
  24: uthash/hashtable         64.636  /   64.297  /   65.473    -     646.3 ms
  25: klib::khash++            65.870  /   65.705  /   66.354    -     658.7 ms
  26: mct::closed_hash_map     66.765  /   65.536  /   73.972    -     667.6 ms
  27: mct::linked_hash_map     67.558  /   63.434  /   70.163    -     675.6 ms
  28: clark/hashtable          68.956  /   66.863  /   72.546    -     689.5 ms
  29: google::densehash        69.996  /   55.335  /   77.826    -     700.0 ms
  30: klib/khash               72.070  /   58.020  /   89.887    -     720.7 ms
  31: boost::unordered_map     75.439  /   74.927  /   76.276    -     754.4 ms
  32: Qt::QHash                77.874  /   61.892  /   90.746    -     778.8 ms
  33: judy/JSL                 84.072  /   83.542  /   84.495    -     840.7 ms
  34: ulib::open-hash++        90.422  /   64.219  /  153.154    -     904.2 ms
  35: ulib/align-hash          92.478  /   91.082  /   92.985    -     924.8 ms
  36: std::unordered_map       94.738  /   71.247  /  109.195    -     947.4 ms
  37: redis/dict               98.889  /   73.191  /  108.996    -     988.9 ms
  38: libdynamic/map          104.762  /   87.269  /  159.946    -       1.0  s
  39: PeterMoore/st           110.958  /   86.979  /  128.688    -       1.1  s
  40: oddou::hashmap          116.135  /  102.002  /  187.368    -       1.1  s
  41: google/c-sparse         134.383  /  105.575  /  204.847    -       1.3  s
  42: libcfu/hashtable        139.720  /  113.110  /  168.748    -       1.3  s
  43: rigtorp::hashmap        139.873  /  125.242  /  152.889    -       1.3  s
  44: Python C-API/dict       140.591  /  103.172  /  194.295    -       1.4  s
  45: tbb::unordered_map      169.188  /  137.287  /  230.015    -       1.6  s
  46: hashit/open             232.996  /  205.794  /  328.641    -       2.3  s
  47: google::sparsehash      252.989  /  161.325  /  305.000    -       2.5  s
  48: stb/sdict               262.559  /  179.695  /  336.155    -       2.6  s
  49: ulib::chain-hash++      643.487  /  627.538  /  665.745    -       6.4  s
  50: hashit/overflow         828.357  /  818.096  /  855.235    -       8.2  s

Results of test [kbench] - 1e5 items (10 loops per test)
      Implementation        -   avg         min         max   ms -   elapsed
   1: ccan/htable              15.254  /   15.144  /   15.695    -     152.5 ms
   2: tommyds/fixed            15.781  /   15.737  /   15.947    -     157.8 ms
   3: gcc/hashtab              15.969  /   15.838  /   16.336    -     159.7 ms
   4: ulib/chain-hash          16.245  /   15.798  /   17.947    -     162.4 ms
   5: rdestl::hash_map         17.083  /   16.776  /   17.269    -     170.8 ms
   6: apr/hashtable            17.873  /   16.951  /   19.791    -     178.7 ms
   7: glib/ghash               19.053  /   18.463  /   20.710    -     190.5 ms
   8: apr-no-pool/hashtable    19.594  /   19.174  /   20.942    -     195.9 ms
   9: libevent/ht              19.956  /   19.894  /   20.122    -     199.5 ms
  10: libghthash/hashtable     20.894  /   20.856  /   20.951    -     208.9 ms
  11: emilib::HashMap          21.328  /   20.493  /   22.368    -     213.3 ms
  12: google::densehash        21.411  /   21.321  /   21.545    -     214.1 ms
  13: tommyds/dynamic          21.459  /   20.641  /   23.693    -     214.6 ms
  14: tommyds/linear           22.891  /   22.765  /   23.186    -     228.9 ms
  15: amtl::hashmap            23.179  /   23.016  /   23.620    -     231.8 ms
  16: hashit/overflow          27.360  /   25.117  /   33.843    -     273.6 ms
  17: python/hashtable         27.855  /   27.647  /   28.541    -     278.5 ms
  18: libCDS/HashMap           28.079  /   27.574  /   30.138    -     280.8 ms
  19: Qt::QHash                28.187  /   28.001  /   28.894    -     281.8 ms
  20: eastl::hashmap           28.204  /   27.272  /   31.414    -     282.0 ms
  21: klib/khash               28.728  /   28.601  /   29.483    -     287.3 ms
  22: calg/hashtable           28.763  /   28.165  /   30.419    -     287.6 ms
  23: PeterMoore/st            29.628  /   29.458  /   29.978    -     296.3 ms
  24: Tcl C-API/hashtable      30.199  /   29.572  /   32.222    -     302.0 ms
  25: ulib/open-hash           30.857  /   30.740  /   31.015    -     308.5 ms
  26: google/c-dense           31.584  /   31.480  /   31.986    -     315.8 ms
  27: mct::linked_hash_map     33.886  /   33.284  /   35.654    -     338.8 ms
  28: std::unordered_map       33.905  /   33.627  /   34.677    -     339.0 ms
  29: hashit/chain             34.367  /   28.424  /   44.092    -     343.7 ms
  30: redis/dict               34.715  /   34.521  /   35.139    -     347.1 ms
  31: mct::closed_hash_map     34.938  /   33.889  /   37.767    -     349.4 ms
  32: uthash/hashtable         35.922  /   35.807  /   36.260    -     359.2 ms
  33: clark/hashtable          36.091  /   34.908  /   37.756    -     360.9 ms
  34: klib::khash++            37.663  /   36.952  /   38.925    -     376.6 ms
  35: rigtorp::hashmap         42.049  /   41.766  /   42.196    -     420.5 ms
  36: libdynamic/map           42.758  /   42.692  /   42.796    -     427.6 ms
  37: boost::unordered_map     43.618  /   42.752  /   46.791    -     436.2 ms
  38: judy/JSL                 47.989  /   47.140  /   50.078    -     479.9 ms
  39: ulib::open-hash++        48.322  /   48.090  /   49.336    -     483.2 ms
  40: ulib::align-hash++       51.706  /   50.292  /   57.064    -     517.0 ms
  41: ulib/align-hash          53.072  /   50.470  /   55.736    -     530.7 ms
  42: hashit/open              53.722  /   53.195  /   55.177    -     537.2 ms
  43: google/c-sparse          69.945  /   66.787  /   74.404    -     699.4 ms
  44: libcfu/hashtable         72.499  /   68.352  /   85.078    -     725.0 ms
  45: google::sparsehash       85.910  /   85.655  /   86.373    -     859.1 ms
  46: Python C-API/dict        86.039  /   83.360  /   88.932    -     860.4 ms
  47: oddou::hashmap           89.097  /   88.919  /   89.325    -     891.0 ms
  48: tbb::unordered_map       99.013  /   96.348  /  116.001    -     990.1 ms
  49: stb/sdict               105.790  /   98.146  /  126.206    -       1.0  s
  50: ulib::chain-hash++      239.733  /  236.775  /  257.928    -       2.3  s
